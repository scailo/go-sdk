// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: asset_indents.scailo.proto

package sdk

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AssetIndentsService_Create_FullMethodName                                  = "/Scailo.AssetIndentsService/Create"
	AssetIndentsService_Draft_FullMethodName                                   = "/Scailo.AssetIndentsService/Draft"
	AssetIndentsService_DraftUpdate_FullMethodName                             = "/Scailo.AssetIndentsService/DraftUpdate"
	AssetIndentsService_SendForVerification_FullMethodName                     = "/Scailo.AssetIndentsService/SendForVerification"
	AssetIndentsService_Verify_FullMethodName                                  = "/Scailo.AssetIndentsService/Verify"
	AssetIndentsService_Approve_FullMethodName                                 = "/Scailo.AssetIndentsService/Approve"
	AssetIndentsService_SendForRevision_FullMethodName                         = "/Scailo.AssetIndentsService/SendForRevision"
	AssetIndentsService_RevisionUpdate_FullMethodName                          = "/Scailo.AssetIndentsService/RevisionUpdate"
	AssetIndentsService_Halt_FullMethodName                                    = "/Scailo.AssetIndentsService/Halt"
	AssetIndentsService_Discard_FullMethodName                                 = "/Scailo.AssetIndentsService/Discard"
	AssetIndentsService_Restore_FullMethodName                                 = "/Scailo.AssetIndentsService/Restore"
	AssetIndentsService_Complete_FullMethodName                                = "/Scailo.AssetIndentsService/Complete"
	AssetIndentsService_Repeat_FullMethodName                                  = "/Scailo.AssetIndentsService/Repeat"
	AssetIndentsService_Reopen_FullMethodName                                  = "/Scailo.AssetIndentsService/Reopen"
	AssetIndentsService_CommentAdd_FullMethodName                              = "/Scailo.AssetIndentsService/CommentAdd"
	AssetIndentsService_SendEmail_FullMethodName                               = "/Scailo.AssetIndentsService/SendEmail"
	AssetIndentsService_CreateMagicLink_FullMethodName                         = "/Scailo.AssetIndentsService/CreateMagicLink"
	AssetIndentsService_IsCompletable_FullMethodName                           = "/Scailo.AssetIndentsService/IsCompletable"
	AssetIndentsService_AddAssetIndentItem_FullMethodName                      = "/Scailo.AssetIndentsService/AddAssetIndentItem"
	AssetIndentsService_ModifyAssetIndentItem_FullMethodName                   = "/Scailo.AssetIndentsService/ModifyAssetIndentItem"
	AssetIndentsService_ApproveAssetIndentItem_FullMethodName                  = "/Scailo.AssetIndentsService/ApproveAssetIndentItem"
	AssetIndentsService_DeleteAssetIndentItem_FullMethodName                   = "/Scailo.AssetIndentsService/DeleteAssetIndentItem"
	AssetIndentsService_ReorderAssetIndentItems_FullMethodName                 = "/Scailo.AssetIndentsService/ReorderAssetIndentItems"
	AssetIndentsService_ViewAssetIndentItemByID_FullMethodName                 = "/Scailo.AssetIndentsService/ViewAssetIndentItemByID"
	AssetIndentsService_ViewApprovedAssetIndentItems_FullMethodName            = "/Scailo.AssetIndentsService/ViewApprovedAssetIndentItems"
	AssetIndentsService_ViewUnapprovedAssetIndentItems_FullMethodName          = "/Scailo.AssetIndentsService/ViewUnapprovedAssetIndentItems"
	AssetIndentsService_ViewAssetIndentItemHistory_FullMethodName              = "/Scailo.AssetIndentsService/ViewAssetIndentItemHistory"
	AssetIndentsService_ViewPaginatedApprovedAssetIndentItems_FullMethodName   = "/Scailo.AssetIndentsService/ViewPaginatedApprovedAssetIndentItems"
	AssetIndentsService_ViewPaginatedUnapprovedAssetIndentItems_FullMethodName = "/Scailo.AssetIndentsService/ViewPaginatedUnapprovedAssetIndentItems"
	AssetIndentsService_SearchItemsWithPagination_FullMethodName               = "/Scailo.AssetIndentsService/SearchItemsWithPagination"
	AssetIndentsService_DownloadItemsAsCSV_FullMethodName                      = "/Scailo.AssetIndentsService/DownloadItemsAsCSV"
	AssetIndentsService_DownloadItemsTemplateAsCSV_FullMethodName              = "/Scailo.AssetIndentsService/DownloadItemsTemplateAsCSV"
	AssetIndentsService_UploadAssetIndentItems_FullMethodName                  = "/Scailo.AssetIndentsService/UploadAssetIndentItems"
	AssetIndentsService_ViewByID_FullMethodName                                = "/Scailo.AssetIndentsService/ViewByID"
	AssetIndentsService_ViewByUUID_FullMethodName                              = "/Scailo.AssetIndentsService/ViewByUUID"
	AssetIndentsService_ViewByReferenceID_FullMethodName                       = "/Scailo.AssetIndentsService/ViewByReferenceID"
	AssetIndentsService_ViewEssentialByID_FullMethodName                       = "/Scailo.AssetIndentsService/ViewEssentialByID"
	AssetIndentsService_ViewEssentialByUUID_FullMethodName                     = "/Scailo.AssetIndentsService/ViewEssentialByUUID"
	AssetIndentsService_ViewFromIDs_FullMethodName                             = "/Scailo.AssetIndentsService/ViewFromIDs"
	AssetIndentsService_ViewAll_FullMethodName                                 = "/Scailo.AssetIndentsService/ViewAll"
	AssetIndentsService_ViewAllForEntityUUID_FullMethodName                    = "/Scailo.AssetIndentsService/ViewAllForEntityUUID"
	AssetIndentsService_ViewWithPagination_FullMethodName                      = "/Scailo.AssetIndentsService/ViewWithPagination"
	AssetIndentsService_ViewProspectiveFamilies_FullMethodName                 = "/Scailo.AssetIndentsService/ViewProspectiveFamilies"
	AssetIndentsService_FilterProspectiveFamilies_FullMethodName               = "/Scailo.AssetIndentsService/FilterProspectiveFamilies"
	AssetIndentsService_IsDownloadable_FullMethodName                          = "/Scailo.AssetIndentsService/IsDownloadable"
	AssetIndentsService_DownloadByUUID_FullMethodName                          = "/Scailo.AssetIndentsService/DownloadByUUID"
	AssetIndentsService_ViewIssuedStatistics_FullMethodName                    = "/Scailo.AssetIndentsService/ViewIssuedStatistics"
	AssetIndentsService_ViewAddedQuantityForFamily_FullMethodName              = "/Scailo.AssetIndentsService/ViewAddedQuantityForFamily"
	AssetIndentsService_SearchAll_FullMethodName                               = "/Scailo.AssetIndentsService/SearchAll"
	AssetIndentsService_Filter_FullMethodName                                  = "/Scailo.AssetIndentsService/Filter"
	AssetIndentsService_CountInStatus_FullMethodName                           = "/Scailo.AssetIndentsService/CountInStatus"
	AssetIndentsService_Count_FullMethodName                                   = "/Scailo.AssetIndentsService/Count"
	AssetIndentsService_DownloadAsCSV_FullMethodName                           = "/Scailo.AssetIndentsService/DownloadAsCSV"
)

// AssetIndentsServiceClient is the client API for AssetIndentsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Describes the common methods applicable on each asset indent
type AssetIndentsServiceClient interface {
	// Create and send for verification
	Create(ctx context.Context, in *AssetIndentsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Create and save as draft
	Draft(ctx context.Context, in *AssetIndentsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update draft
	DraftUpdate(ctx context.Context, in *AssetIndentsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send for verification
	SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Verify
	Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Approve
	Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send For Revision
	SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update revision
	RevisionUpdate(ctx context.Context, in *AssetIndentsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Halt
	Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Discard
	Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Restore
	Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Complete
	Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Repeat
	Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Reopen
	Reopen(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Add comment
	CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send Email
	SendEmail(ctx context.Context, in *IdentifierWithEmailAttributes, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Create a magic link
	CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error)
	// Checks if the Asset Indent can be marked as completed
	IsCompletable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// Add an item to a asset indent
	AddAssetIndentItem(ctx context.Context, in *AssetIndentsServiceItemCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Modify an item in a asset indent
	ModifyAssetIndentItem(ctx context.Context, in *AssetIndentsServiceItemUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Approve an item in a asset indent
	ApproveAssetIndentItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Delete an item in a asset indent
	DeleteAssetIndentItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Reorder items in a asset indent
	ReorderAssetIndentItems(ctx context.Context, in *ReorderItemsRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// View Asset Indent Item by ID
	ViewAssetIndentItemByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndentItem, error)
	// View approved asset indent items for given asset indent ID
	ViewApprovedAssetIndentItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*AssetIndentsItemsList, error)
	// View unapproved asset indent items for given asset indent ID
	ViewUnapprovedAssetIndentItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*AssetIndentsItemsList, error)
	// View the history of the asset indent item
	ViewAssetIndentItemHistory(ctx context.Context, in *AssetIndentItemHistoryRequest, opts ...grpc.CallOption) (*AssetIndentsItemsList, error)
	// View approved asset indent items for given asset indent ID with pagination
	ViewPaginatedApprovedAssetIndentItems(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error)
	// View unapproved asset indent items for given asset indent ID with pagination
	ViewPaginatedUnapprovedAssetIndentItems(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error)
	// Search through asset indent items with pagination
	SearchItemsWithPagination(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error)
	// CSV operations
	// Download the CSV file with the associated line items. The same file could then be used to upload line items.
	DownloadItemsAsCSV(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error)
	// Download the CSV template that could be used to upload items
	DownloadItemsTemplateAsCSV(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StandardFile, error)
	// Upload items using a CSV file. This is an idempotent operation. All the existing items are deleted before adding the items from the file.
	UploadAssetIndentItems(ctx context.Context, in *IdentifierUUIDWithFile, opts ...grpc.CallOption) (*IdentifiersList, error)
	// View by ID
	ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndent, error)
	// View by UUID
	ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndent, error)
	// View by Reference ID (returns the latest record in case of duplicates)
	ViewByReferenceID(ctx context.Context, in *SimpleSearchReq, opts ...grpc.CallOption) (*AssetIndent, error)
	// View only essential components by ID (without logs)
	ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndent, error)
	// View only essential components (without logs) that matches the given UUID
	ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndent, error)
	// View all records with the given IDs
	ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*AssetIndentsList, error)
	// View all
	ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*AssetIndentsList, error)
	// View all with the given entity UUID
	ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndentsList, error)
	// View with pagination
	ViewWithPagination(ctx context.Context, in *AssetIndentsServicePaginationReq, opts ...grpc.CallOption) (*AssetIndentsServicePaginationResponse, error)
	// View prospective families for the given asset indent
	ViewProspectiveFamilies(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*FamiliesList, error)
	// Filter prospective families for the record represented by the given UUID identifier
	FilterProspectiveFamilies(ctx context.Context, in *FilterFamiliesReqForIdentifier, opts ...grpc.CallOption) (*FamiliesList, error)
	// Checks if the record is downloadable (checks if the custom download function has been implemented)
	IsDownloadable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// Download asset indent with the given IdentifierUUID (can be used to allow public downloads)
	DownloadByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error)
	// View issued (stock issuance) statistics of the asset indent
	ViewIssuedStatistics(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndentIssuedStatisticsList, error)
	// View the added quantity for the family with the given request payload
	ViewAddedQuantityForFamily(ctx context.Context, in *AssetIndentItemProspectiveInfoRequest, opts ...grpc.CallOption) (*QuantityResponse, error)
	// View all that match the given search key
	SearchAll(ctx context.Context, in *AssetIndentsServiceSearchAllReq, opts ...grpc.CallOption) (*AssetIndentsList, error)
	// View all that match the given filter criteria
	Filter(ctx context.Context, in *AssetIndentsServiceFilterReq, opts ...grpc.CallOption) (*AssetIndentsList, error)
	// Count in status
	CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error)
	// View all that match the given count criteria
	Count(ctx context.Context, in *AssetIndentsServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error)
	// CSV operations
	// Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
	DownloadAsCSV(ctx context.Context, in *AssetIndentsServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error)
}

type assetIndentsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAssetIndentsServiceClient(cc grpc.ClientConnInterface) AssetIndentsServiceClient {
	return &assetIndentsServiceClient{cc}
}

func (c *assetIndentsServiceClient) Create(ctx context.Context, in *AssetIndentsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Draft(ctx context.Context, in *AssetIndentsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Draft_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DraftUpdate(ctx context.Context, in *AssetIndentsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_DraftUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_SendForVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Verify_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Approve_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_SendForRevision_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) RevisionUpdate(ctx context.Context, in *AssetIndentsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_RevisionUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Halt_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Discard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Restore_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Complete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Repeat_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Reopen(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Reopen_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_CommentAdd_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) SendEmail(ctx context.Context, in *IdentifierWithEmailAttributes, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_SendEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MagicLink)
	err := c.cc.Invoke(ctx, AssetIndentsService_CreateMagicLink_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) IsCompletable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_IsCompletable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) AddAssetIndentItem(ctx context.Context, in *AssetIndentsServiceItemCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_AddAssetIndentItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ModifyAssetIndentItem(ctx context.Context, in *AssetIndentsServiceItemUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ModifyAssetIndentItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ApproveAssetIndentItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ApproveAssetIndentItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DeleteAssetIndentItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_DeleteAssetIndentItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ReorderAssetIndentItems(ctx context.Context, in *ReorderItemsRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ReorderAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewAssetIndentItemByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndentItem, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentItem)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewAssetIndentItemByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewApprovedAssetIndentItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*AssetIndentsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsItemsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewApprovedAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewUnapprovedAssetIndentItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*AssetIndentsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsItemsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewUnapprovedAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewAssetIndentItemHistory(ctx context.Context, in *AssetIndentItemHistoryRequest, opts ...grpc.CallOption) (*AssetIndentsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsItemsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewAssetIndentItemHistory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewPaginatedApprovedAssetIndentItems(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewPaginatedApprovedAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewPaginatedUnapprovedAssetIndentItems(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewPaginatedUnapprovedAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) SearchItemsWithPagination(ctx context.Context, in *AssetIndentItemsSearchRequest, opts ...grpc.CallOption) (*AssetIndentsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_SearchItemsWithPagination_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DownloadItemsAsCSV(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, AssetIndentsService_DownloadItemsAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DownloadItemsTemplateAsCSV(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, AssetIndentsService_DownloadItemsTemplateAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) UploadAssetIndentItems(ctx context.Context, in *IdentifierUUIDWithFile, opts ...grpc.CallOption) (*IdentifiersList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifiersList)
	err := c.cc.Invoke(ctx, AssetIndentsService_UploadAssetIndentItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndent, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndent)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndent, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndent)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewByReferenceID(ctx context.Context, in *SimpleSearchReq, opts ...grpc.CallOption) (*AssetIndent, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndent)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewByReferenceID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*AssetIndent, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndent)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewEssentialByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndent, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndent)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewEssentialByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*AssetIndentsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewFromIDs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*AssetIndentsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndentsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewAllForEntityUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewWithPagination(ctx context.Context, in *AssetIndentsServicePaginationReq, opts ...grpc.CallOption) (*AssetIndentsServicePaginationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsServicePaginationResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewWithPagination_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewProspectiveFamilies(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*FamiliesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FamiliesList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewProspectiveFamilies_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) FilterProspectiveFamilies(ctx context.Context, in *FilterFamiliesReqForIdentifier, opts ...grpc.CallOption) (*FamiliesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FamiliesList)
	err := c.cc.Invoke(ctx, AssetIndentsService_FilterProspectiveFamilies_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) IsDownloadable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_IsDownloadable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DownloadByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, AssetIndentsService_DownloadByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewIssuedStatistics(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*AssetIndentIssuedStatisticsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentIssuedStatisticsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewIssuedStatistics_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) ViewAddedQuantityForFamily(ctx context.Context, in *AssetIndentItemProspectiveInfoRequest, opts ...grpc.CallOption) (*QuantityResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(QuantityResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_ViewAddedQuantityForFamily_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) SearchAll(ctx context.Context, in *AssetIndentsServiceSearchAllReq, opts ...grpc.CallOption) (*AssetIndentsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_SearchAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Filter(ctx context.Context, in *AssetIndentsServiceFilterReq, opts ...grpc.CallOption) (*AssetIndentsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AssetIndentsList)
	err := c.cc.Invoke(ctx, AssetIndentsService_Filter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_CountInStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) Count(ctx context.Context, in *AssetIndentsServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, AssetIndentsService_Count_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *assetIndentsServiceClient) DownloadAsCSV(ctx context.Context, in *AssetIndentsServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, AssetIndentsService_DownloadAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AssetIndentsService
