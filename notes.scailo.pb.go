// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: notes.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the lifecycle status of each note
type NOTE_LIFECYCLE int32

const (
	// Used only in filters
	NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED NOTE_LIFECYCLE = 0
	// Denotes that the note is open
	NOTE_LIFECYCLE_NOTE_LIFECYCLE_OPEN NOTE_LIFECYCLE = 1
	// Denotes that the note has completed
	NOTE_LIFECYCLE_NOTE_LIFECYCLE_COMPLETED NOTE_LIFECYCLE = 2
	// Denotes that the note has been cancelled
	NOTE_LIFECYCLE_NOTE_LIFECYCLE_CANCELLED NOTE_LIFECYCLE = 3
)

// Enum value maps for NOTE_LIFECYCLE.
var (
	NOTE_LIFECYCLE_name = map[int32]string{
		0: "NOTE_LIFECYCLE_ANY_UNSPECIFIED",
		1: "NOTE_LIFECYCLE_OPEN",
		2: "NOTE_LIFECYCLE_COMPLETED",
		3: "NOTE_LIFECYCLE_CANCELLED",
	}
	NOTE_LIFECYCLE_value = map[string]int32{
		"NOTE_LIFECYCLE_ANY_UNSPECIFIED": 0,
		"NOTE_LIFECYCLE_OPEN":            1,
		"NOTE_LIFECYCLE_COMPLETED":       2,
		"NOTE_LIFECYCLE_CANCELLED":       3,
	}
)

func (x NOTE_LIFECYCLE) Enum() *NOTE_LIFECYCLE {
	p := new(NOTE_LIFECYCLE)
	*p = x
	return p
}

func (x NOTE_LIFECYCLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NOTE_LIFECYCLE) Descriptor() protoreflect.EnumDescriptor {
	return file_notes_scailo_proto_enumTypes[0].Descriptor()
}

func (NOTE_LIFECYCLE) Type() protoreflect.EnumType {
	return &file_notes_scailo_proto_enumTypes[0]
}

func (x NOTE_LIFECYCLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NOTE_LIFECYCLE.Descriptor instead.
func (NOTE_LIFECYCLE) EnumDescriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type NOTE_SORT_KEY int32

const (
	// Fetch ordered results by id
	NOTE_SORT_KEY_NOTE_SORT_KEY_ID_UNSPECIFIED NOTE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	NOTE_SORT_KEY_NOTE_SORT_KEY_CREATED_AT NOTE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	NOTE_SORT_KEY_NOTE_SORT_KEY_MODIFIED_AT NOTE_SORT_KEY = 2
	// Fetch ordered results by the approver's completed on timestamp
	NOTE_SORT_KEY_NOTE_SORT_KEY_COMPLETED_ON NOTE_SORT_KEY = 6
	// Fetch ordered results by the title
	NOTE_SORT_KEY_NOTE_SORT_KEY_TITLE NOTE_SORT_KEY = 10
)

// Enum value maps for NOTE_SORT_KEY.
var (
	NOTE_SORT_KEY_name = map[int32]string{
		0:  "NOTE_SORT_KEY_ID_UNSPECIFIED",
		1:  "NOTE_SORT_KEY_CREATED_AT",
		2:  "NOTE_SORT_KEY_MODIFIED_AT",
		6:  "NOTE_SORT_KEY_COMPLETED_ON",
		10: "NOTE_SORT_KEY_TITLE",
	}
	NOTE_SORT_KEY_value = map[string]int32{
		"NOTE_SORT_KEY_ID_UNSPECIFIED": 0,
		"NOTE_SORT_KEY_CREATED_AT":     1,
		"NOTE_SORT_KEY_MODIFIED_AT":    2,
		"NOTE_SORT_KEY_COMPLETED_ON":   6,
		"NOTE_SORT_KEY_TITLE":          10,
	}
)

func (x NOTE_SORT_KEY) Enum() *NOTE_SORT_KEY {
	p := new(NOTE_SORT_KEY)
	*p = x
	return p
}

func (x NOTE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NOTE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_notes_scailo_proto_enumTypes[1].Descriptor()
}

func (NOTE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_notes_scailo_proto_enumTypes[1]
}

func (x NOTE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NOTE_SORT_KEY.Descriptor instead.
func (NOTE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes each parameter that's part of the logbook (does not include historical data of the object) with the operation being an note lifecycle status
type LogbookLogNoteLC struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the resource
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Stores if the resource is active
	IsActive bool `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Stores the timestamp of when this resource was created
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The UUID of the resource
	RefUuid string `protobuf:"bytes,10,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// The operation that was performed
	Operation NOTE_LIFECYCLE `protobuf:"varint,11,opt,name=operation,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"operation,omitempty"`
	// The username of the user who performed this operation
	Username string `protobuf:"bytes,12,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the person who made this entry
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the user who made this entry
	UserId uint64 `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The comment generated by the application
	AppComment string `protobuf:"bytes,15,opt,name=app_comment,json=appComment,proto3" json:"app_comment,omitempty"`
	// The comment entered by the user
	UserComment   string `protobuf:"bytes,16,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogbookLogNoteLC) Reset() {
	*x = LogbookLogNoteLC{}
	mi := &file_notes_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogbookLogNoteLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogbookLogNoteLC) ProtoMessage() {}

func (x *LogbookLogNoteLC) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogbookLogNoteLC.ProtoReflect.Descriptor instead.
func (*LogbookLogNoteLC) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *LogbookLogNoteLC) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogbookLogNoteLC) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LogbookLogNoteLC) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogbookLogNoteLC) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *LogbookLogNoteLC) GetOperation() NOTE_LIFECYCLE {
	if x != nil {
		return x.Operation
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *LogbookLogNoteLC) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LogbookLogNoteLC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogbookLogNoteLC) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LogbookLogNoteLC) GetAppComment() string {
	if x != nil {
		return x.AppComment
	}
	return ""
}

func (x *LogbookLogNoteLC) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

// Describes the parameters necessary to create a record
type NotesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the note
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The description of the note
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// The associated employee ID
	EmployeeId uint64 `protobuf:"varint,20,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// The associated activity ID
	ActivityId uint64 `protobuf:"varint,21,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// The associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,22,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotesServiceCreateRequest) Reset() {
	*x = NotesServiceCreateRequest{}
	mi := &file_notes_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServiceCreateRequest) ProtoMessage() {}

func (x *NotesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*NotesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *NotesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *NotesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *NotesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *NotesServiceCreateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *NotesServiceCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NotesServiceCreateRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *NotesServiceCreateRequest) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotesServiceCreateRequest) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

// Describes the parameters necessary to update a record
type NotesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the note
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The description of the note
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// The associated activity ID
	ActivityId uint64 `protobuf:"varint,21,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// The associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,22,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotesServiceUpdateRequest) Reset() {
	*x = NotesServiceUpdateRequest{}
	mi := &file_notes_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServiceUpdateRequest) ProtoMessage() {}

func (x *NotesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*NotesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *NotesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *NotesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NotesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *NotesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *NotesServiceUpdateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *NotesServiceUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NotesServiceUpdateRequest) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotesServiceUpdateRequest) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

// Describes the parameters that are part of a standard response
type Note struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The status of this note
	Status NOTE_LIFECYCLE `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"status,omitempty"`
	// Stores the logs of every operation performed on this note
	Logs []*LogbookLogNoteLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this note was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the note
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The description of the note
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// The associated employee ID
	EmployeeId uint64 `protobuf:"varint,20,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// The associated activity ID
	ActivityId uint64 `protobuf:"varint,21,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// The associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,22,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_notes_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *Note) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Note) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Note) GetStatus() NOTE_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *Note) GetLogs() []*LogbookLogNoteLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Note) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Note) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Note) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Note) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Note) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *Note) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Note) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

// Describes the message consisting of the list of records
type NotesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Note `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotesList) Reset() {
	*x = NotesList{}
	mi := &file_notes_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesList) ProtoMessage() {}

func (x *NotesList) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesList.ProtoReflect.Descriptor instead.
func (*NotesList) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *NotesList) GetList() []*Note {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type NotesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this note
	Status        NOTE_LIFECYCLE `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotesServicePaginationReq) Reset() {
	*x = NotesServicePaginationReq{}
	mi := &file_notes_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServicePaginationReq) ProtoMessage() {}

func (x *NotesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*NotesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *NotesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *NotesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NotesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *NotesServicePaginationReq) GetSortKey() NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return NOTE_SORT_KEY_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *NotesServicePaginationReq) GetStatus() NOTE_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type NotesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Note `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotesServicePaginationResponse) Reset() {
	*x = NotesServicePaginationResponse{}
	mi := &file_notes_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServicePaginationResponse) ProtoMessage() {}

func (x *NotesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*NotesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *NotesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NotesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NotesServicePaginationResponse) GetPayload() []*Note {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type NotesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this note
	Status NOTE_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The title of the note
	Title string `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,25,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ID of the employee
	EmployeeId uint64 `protobuf:"varint,26,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Filter by the associated activity ID
	ActivityId uint64 `protobuf:"varint,27,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// Filter by the associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,28,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotesServiceFilterReq) Reset() {
	*x = NotesServiceFilterReq{}
	mi := &file_notes_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServiceFilterReq) ProtoMessage() {}

func (x *NotesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*NotesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *NotesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *NotesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NotesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *NotesServiceFilterReq) GetSortKey() NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return NOTE_SORT_KEY_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *NotesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *NotesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *NotesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *NotesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *NotesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *NotesServiceFilterReq) GetStatus() NOTE_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *NotesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *NotesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *NotesServiceFilterReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotesServiceFilterReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *NotesServiceFilterReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *NotesServiceFilterReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotesServiceFilterReq) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

// Describes the base request payload of a count search
type NotesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this note
	Status NOTE_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The title of the note
	Title string `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,25,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ID of the employee
	EmployeeId uint64 `protobuf:"varint,26,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Filter by the associated activity ID
	ActivityId uint64 `protobuf:"varint,27,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// Filter by the associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,28,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotesServiceCountReq) Reset() {
	*x = NotesServiceCountReq{}
	mi := &file_notes_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServiceCountReq) ProtoMessage() {}

func (x *NotesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServiceCountReq.ProtoReflect.Descriptor instead.
func (*NotesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *NotesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *NotesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *NotesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *NotesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *NotesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *NotesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *NotesServiceCountReq) GetStatus() NOTE_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *NotesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *NotesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *NotesServiceCountReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotesServiceCountReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *NotesServiceCountReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *NotesServiceCountReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotesServiceCountReq) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

// Describes the request payload for performing a generic search operation on records
type NotesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status NOTE_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.NOTE_LIFECYCLE" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,25,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ID of the employee
	EmployeeId uint64 `protobuf:"varint,26,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Filter by the associated activity ID
	ActivityId uint64 `protobuf:"varint,27,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	// Filter by the associated activity status ID
	ActivityStatusId uint64 `protobuf:"varint,28,opt,name=activity_status_id,json=activityStatusId,proto3" json:"activity_status_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NotesServiceSearchAllReq) Reset() {
	*x = NotesServiceSearchAllReq{}
	mi := &file_notes_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesServiceSearchAllReq) ProtoMessage() {}

func (x *NotesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_notes_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*NotesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_notes_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *NotesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *NotesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NotesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *NotesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *NotesServiceSearchAllReq) GetSortKey() NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return NOTE_SORT_KEY_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *NotesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *NotesServiceSearchAllReq) GetStatus() NOTE_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return NOTE_LIFECYCLE_NOTE_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *NotesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *NotesServiceSearchAllReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *NotesServiceSearchAllReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *NotesServiceSearchAllReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *NotesServiceSearchAllReq) GetActivityStatusId() uint64 {
	if x != nil {
		return x.ActivityStatusId
	}
	return 0
}

var File_notes_scailo_proto protoreflect.FileDescriptor

const file_notes_scailo_proto_rawDesc = "" +
	"\n" +
	"\x12notes.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xbb\x02\n" +
	"\x10LogbookLogNoteLC\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12\x19\n" +
	"\bref_uuid\x18\n" +
	" \x01(\tR\arefUuid\x124\n" +
	"\toperation\x18\v \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\toperation\x12\x1a\n" +
	"\busername\x18\f \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\r \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x0e \x01(\x04R\x06userId\x12\x1f\n" +
	"\vapp_comment\x18\x0f \x01(\tR\n" +
	"appComment\x12!\n" +
	"\fuser_comment\x18\x10 \x01(\tR\vuserComment\"\x8d\x03\n" +
	"\x19NotesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12&\n" +
	"\n" +
	"project_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12)\n" +
	"\vdescription\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x00R\vdescription\x12(\n" +
	"\vemployee_id\x18\x14 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"employeeId\x12(\n" +
	"\vactivity_id\x18\x15 \x01(\x04B\a\xbaH\x042\x02(\x00R\n" +
	"activityId\x125\n" +
	"\x12activity_status_id\x18\x16 \x01(\x04B\a\xbaH\x042\x02(\x00R\x10activityStatusId\"\xfe\x02\n" +
	"\x19NotesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12&\n" +
	"\n" +
	"project_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12)\n" +
	"\vdescription\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x00R\vdescription\x12(\n" +
	"\vactivity_id\x18\x15 \x01(\x04B\a\xbaH\x042\x02(\x00R\n" +
	"activityId\x125\n" +
	"\x12activity_status_id\x18\x16 \x01(\x04B\a\xbaH\x042\x02(\x00R\x10activityStatusId\"\xcd\x03\n" +
	"\x04Note\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12.\n" +
	"\x06status\x18\x04 \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\x06status\x12,\n" +
	"\x04logs\x18\x05 \x03(\v2\x18.Scailo.LogbookLogNoteLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04R\rvaultFolderId\x12\x1d\n" +
	"\n" +
	"project_id\x18\t \x01(\x04R\tprojectId\x12\x14\n" +
	"\x05title\x18\n" +
	" \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x12\x1f\n" +
	"\vemployee_id\x18\x14 \x01(\x04R\n" +
	"employeeId\x12\x1f\n" +
	"\vactivity_id\x18\x15 \x01(\x04R\n" +
	"activityId\x12,\n" +
	"\x12activity_status_id\x18\x16 \x01(\x04R\x10activityStatusId\"-\n" +
	"\tNotesList\x12 \n" +
	"\x04list\x18\x01 \x03(\v2\f.Scailo.NoteR\x04list\"\xa2\x02\n" +
	"\x19NotesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.NOTE_SORT_KEYR\asortKey\x12.\n" +
	"\x06status\x18\x06 \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\x06status\"\x8c\x01\n" +
	"\x1eNotesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12&\n" +
	"\apayload\x18\x04 \x03(\v2\f.Scailo.NoteR\apayload\"\xb5\x06\n" +
	"\x15NotesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.NOTE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x12.\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x14\n" +
	"\x05title\x18\x14 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"project_id\x18\x19 \x01(\x04R\tprojectId\x12\x1f\n" +
	"\vemployee_id\x18\x1a \x01(\x04R\n" +
	"employeeId\x12\x1f\n" +
	"\vactivity_id\x18\x1b \x01(\x04R\n" +
	"activityId\x12,\n" +
	"\x12activity_status_id\x18\x1c \x01(\x04R\x10activityStatusId\"\x86\x05\n" +
	"\x14NotesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x12.\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x14\n" +
	"\x05title\x18\x14 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"project_id\x18\x19 \x01(\x04R\tprojectId\x12\x1f\n" +
	"\vemployee_id\x18\x1a \x01(\x04R\n" +
	"employeeId\x12\x1f\n" +
	"\vactivity_id\x18\x1b \x01(\x04R\n" +
	"activityId\x12,\n" +
	"\x12activity_status_id\x18\x1c \x01(\x04R\x10activityStatusId\"\xf9\x03\n" +
	"\x18NotesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.NOTE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12.\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x16.Scailo.NOTE_LIFECYCLER\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x1d\n" +
	"\n" +
	"project_id\x18\x19 \x01(\x04R\tprojectId\x12\x1f\n" +
	"\vemployee_id\x18\x1a \x01(\x04R\n" +
	"employeeId\x12\x1f\n" +
	"\vactivity_id\x18\x1b \x01(\x04R\n" +
	"activityId\x12,\n" +
	"\x12activity_status_id\x18\x1c \x01(\x04R\x10activityStatusId*\x89\x01\n" +
	"\x0eNOTE_LIFECYCLE\x12\"\n" +
	"\x1eNOTE_LIFECYCLE_ANY_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13NOTE_LIFECYCLE_OPEN\x10\x01\x12\x1c\n" +
	"\x18NOTE_LIFECYCLE_COMPLETED\x10\x02\x12\x1c\n" +
	"\x18NOTE_LIFECYCLE_CANCELLED\x10\x03*\xa7\x01\n" +
	"\rNOTE_SORT_KEY\x12 \n" +
	"\x1cNOTE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18NOTE_SORT_KEY_CREATED_AT\x10\x01\x12\x1d\n" +
	"\x19NOTE_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1e\n" +
	"\x1aNOTE_SORT_KEY_COMPLETED_ON\x10\x06\x12\x17\n" +
	"\x13NOTE_SORT_KEY_TITLE\x10\n" +
	"2\xfc\t\n" +
	"\fNotesService\x12C\n" +
	"\x06Create\x12!.Scailo.NotesServiceCreateRequest\x1a\x16.Scailo.IdentifierUUID\x12C\n" +
	"\x06Update\x12!.Scailo.NotesServiceUpdateRequest\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Cancel\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12I\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12K\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12J\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x16.Scailo.IdentifierUUID\x12,\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Note\x122\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Note\x125\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Note\x12;\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Note\x129\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x11.Scailo.NotesList\x122\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x11.Scailo.NotesList\x12A\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.NotesList\x12_\n" +
	"\x12ViewWithPagination\x12!.Scailo.NotesServicePaginationReq\x1a&.Scailo.NotesServicePaginationResponse\x12@\n" +
	"\tSearchAll\x12 .Scailo.NotesServiceSearchAllReq\x1a\x11.Scailo.NotesList\x12:\n" +
	"\x06Filter\x12\x1d.Scailo.NotesServiceFilterReq\x1a\x11.Scailo.NotesList\x12<\n" +
	"\x05Count\x12\x1c.Scailo.NotesServiceCountReq\x1a\x15.Scailo.CountResponseBb\n" +
	"\n" +
	"com.ScailoB\x10NotesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_notes_scailo_proto_rawDescOnce sync.Once
	file_notes_scailo_proto_rawDescData []byte
)

func file_notes_scailo_proto_rawDescGZIP() []byte {
	file_notes_scailo_proto_rawDescOnce.Do(func() {
		file_notes_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notes_scailo_proto_rawDesc), len(file_notes_scailo_proto_rawDesc)))
	})
	return file_notes_scailo_proto_rawDescData
}

var file_notes_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_notes_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_notes_scailo_proto_goTypes = []any{
	(NOTE_LIFECYCLE)(0),                    // 0: Scailo.NOTE_LIFECYCLE
	(NOTE_SORT_KEY)(0),                     // 1: Scailo.NOTE_SORT_KEY
	(*LogbookLogNoteLC)(nil),               // 2: Scailo.LogbookLogNoteLC
	(*NotesServiceCreateRequest)(nil),      // 3: Scailo.NotesServiceCreateRequest
	(*NotesServiceUpdateRequest)(nil),      // 4: Scailo.NotesServiceUpdateRequest
	(*Note)(nil),                           // 5: Scailo.Note
	(*NotesList)(nil),                      // 6: Scailo.NotesList
	(*NotesServicePaginationReq)(nil),      // 7: Scailo.NotesServicePaginationReq
	(*NotesServicePaginationResponse)(nil), // 8: Scailo.NotesServicePaginationResponse
	(*NotesServiceFilterReq)(nil),          // 9: Scailo.NotesServiceFilterReq
	(*NotesServiceCountReq)(nil),           // 10: Scailo.NotesServiceCountReq
	(*NotesServiceSearchAllReq)(nil),       // 11: Scailo.NotesServiceSearchAllReq
	(*EmployeeMetadata)(nil),               // 12: Scailo.EmployeeMetadata
	(BOOL_FILTER)(0),                       // 13: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                        // 14: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),  // 15: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),  // 16: Scailo.IdentifierWithEmailAttributes
	(*Identifier)(nil),                     // 17: Scailo.Identifier
	(*IdentifierUUID)(nil),                 // 18: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                // 19: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                   // 20: Scailo.ActiveStatus
	(*CountResponse)(nil),                  // 21: Scailo.CountResponse
}
var file_notes_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.LogbookLogNoteLC.operation:type_name -> Scailo.NOTE_LIFECYCLE
	12, // 1: Scailo.Note.metadata:type_name -> Scailo.EmployeeMetadata
	0,  // 2: Scailo.Note.status:type_name -> Scailo.NOTE_LIFECYCLE
	2,  // 3: Scailo.Note.logs:type_name -> Scailo.LogbookLogNoteLC
	5,  // 4: Scailo.NotesList.list:type_name -> Scailo.Note
	13, // 5: Scailo.NotesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	14, // 6: Scailo.NotesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 7: Scailo.NotesServicePaginationReq.sort_key:type_name -> Scailo.NOTE_SORT_KEY
	0,  // 8: Scailo.NotesServicePaginationReq.status:type_name -> Scailo.NOTE_LIFECYCLE
	5,  // 9: Scailo.NotesServicePaginationResponse.payload:type_name -> Scailo.Note
	13, // 10: Scailo.NotesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	14, // 11: Scailo.NotesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 12: Scailo.NotesServiceFilterReq.sort_key:type_name -> Scailo.NOTE_SORT_KEY
	0,  // 13: Scailo.NotesServiceFilterReq.status:type_name -> Scailo.NOTE_LIFECYCLE
	13, // 14: Scailo.NotesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	0,  // 15: Scailo.NotesServiceCountReq.status:type_name -> Scailo.NOTE_LIFECYCLE
	13, // 16: Scailo.NotesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	14, // 17: Scailo.NotesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 18: Scailo.NotesServiceSearchAllReq.sort_key:type_name -> Scailo.NOTE_SORT_KEY
	0,  // 19: Scailo.NotesServiceSearchAllReq.status:type_name -> Scailo.NOTE_LIFECYCLE
	3,  // 20: Scailo.NotesService.Create:input_type -> Scailo.NotesServiceCreateRequest
	4,  // 21: Scailo.NotesService.Update:input_type -> Scailo.NotesServiceUpdateRequest
	15, // 22: Scailo.NotesService.Cancel:input_type -> Scailo.IdentifierUUIDWithUserComment
	15, // 23: Scailo.NotesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	15, // 24: Scailo.NotesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	15, // 25: Scailo.NotesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	15, // 26: Scailo.NotesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 27: Scailo.NotesService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	17, // 28: Scailo.NotesService.ViewByID:input_type -> Scailo.Identifier
	18, // 29: Scailo.NotesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	17, // 30: Scailo.NotesService.ViewEssentialByID:input_type -> Scailo.Identifier
	18, // 31: Scailo.NotesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	19, // 32: Scailo.NotesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	20, // 33: Scailo.NotesService.ViewAll:input_type -> Scailo.ActiveStatus
	18, // 34: Scailo.NotesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	7,  // 35: Scailo.NotesService.ViewWithPagination:input_type -> Scailo.NotesServicePaginationReq
	11, // 36: Scailo.NotesService.SearchAll:input_type -> Scailo.NotesServiceSearchAllReq
	9,  // 37: Scailo.NotesService.Filter:input_type -> Scailo.NotesServiceFilterReq
	10, // 38: Scailo.NotesService.Count:input_type -> Scailo.NotesServiceCountReq
	18, // 39: Scailo.NotesService.Create:output_type -> Scailo.IdentifierUUID
	18, // 40: Scailo.NotesService.Update:output_type -> Scailo.IdentifierUUID
	18, // 41: Scailo.NotesService.Cancel:output_type -> Scailo.IdentifierUUID
	18, // 42: Scailo.NotesService.Complete:output_type -> Scailo.IdentifierUUID
	18, // 43: Scailo.NotesService.Reopen:output_type -> Scailo.IdentifierUUID
	18, // 44: Scailo.NotesService.Repeat:output_type -> Scailo.IdentifierUUID
	18, // 45: Scailo.NotesService.CommentAdd:output_type -> Scailo.IdentifierUUID
	18, // 46: Scailo.NotesService.SendEmail:output_type -> Scailo.IdentifierUUID
	5,  // 47: Scailo.NotesService.ViewByID:output_type -> Scailo.Note
	5,  // 48: Scailo.NotesService.ViewByUUID:output_type -> Scailo.Note
	5,  // 49: Scailo.NotesService.ViewEssentialByID:output_type -> Scailo.Note
	5,  // 50: Scailo.NotesService.ViewEssentialByUUID:output_type -> Scailo.Note
	6,  // 51: Scailo.NotesService.ViewFromIDs:output_type -> Scailo.NotesList
	6,  // 52: Scailo.NotesService.ViewAll:output_type -> Scailo.NotesList
	6,  // 53: Scailo.NotesService.ViewAllForEntityUUID:output_type -> Scailo.NotesList
	8,  // 54: Scailo.NotesService.ViewWithPagination:output_type -> Scailo.NotesServicePaginationResponse
	6,  // 55: Scailo.NotesService.SearchAll:output_type -> Scailo.NotesList
	6,  // 56: Scailo.NotesService.Filter:output_type -> Scailo.NotesList
	21, // 57: Scailo.NotesService.Count:output_type -> Scailo.CountResponse
	39, // [39:58] is the sub-list for method output_type
	20, // [20:39] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_notes_scailo_proto_init() }
func file_notes_scailo_proto_init() {
	if File_notes_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notes_scailo_proto_rawDesc), len(file_notes_scailo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notes_scailo_proto_goTypes,
		DependencyIndexes: file_notes_scailo_proto_depIdxs,
		EnumInfos:         file_notes_scailo_proto_enumTypes,
		MessageInfos:      file_notes_scailo_proto_msgTypes,
	}.Build()
	File_notes_scailo_proto = out.File
	file_notes_scailo_proto_goTypes = nil
	file_notes_scailo_proto_depIdxs = nil
}
