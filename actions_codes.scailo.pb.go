// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: actions_codes.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type ACTION_CODE_SORT_KEY int32

const (
	// Fetch ordered results by id
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_ID_UNSPECIFIED ACTION_CODE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_CREATED_AT ACTION_CODE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_MODIFIED_AT ACTION_CODE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_APPROVED_ON ACTION_CODE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_APPROVED_BY ACTION_CODE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_APPROVER_ROLE_ID ACTION_CODE_SORT_KEY = 5
	// Fetch ordered results by the name
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_NAME ACTION_CODE_SORT_KEY = 10
	// Fetch ordered results by the code
	ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_CODE ACTION_CODE_SORT_KEY = 11
)

// Enum value maps for ACTION_CODE_SORT_KEY.
var (
	ACTION_CODE_SORT_KEY_name = map[int32]string{
		0:  "ACTION_CODE_SORT_KEY_ID_UNSPECIFIED",
		1:  "ACTION_CODE_SORT_KEY_CREATED_AT",
		2:  "ACTION_CODE_SORT_KEY_MODIFIED_AT",
		3:  "ACTION_CODE_SORT_KEY_APPROVED_ON",
		4:  "ACTION_CODE_SORT_KEY_APPROVED_BY",
		5:  "ACTION_CODE_SORT_KEY_APPROVER_ROLE_ID",
		10: "ACTION_CODE_SORT_KEY_NAME",
		11: "ACTION_CODE_SORT_KEY_CODE",
	}
	ACTION_CODE_SORT_KEY_value = map[string]int32{
		"ACTION_CODE_SORT_KEY_ID_UNSPECIFIED":   0,
		"ACTION_CODE_SORT_KEY_CREATED_AT":       1,
		"ACTION_CODE_SORT_KEY_MODIFIED_AT":      2,
		"ACTION_CODE_SORT_KEY_APPROVED_ON":      3,
		"ACTION_CODE_SORT_KEY_APPROVED_BY":      4,
		"ACTION_CODE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"ACTION_CODE_SORT_KEY_NAME":             10,
		"ACTION_CODE_SORT_KEY_CODE":             11,
	}
)

func (x ACTION_CODE_SORT_KEY) Enum() *ACTION_CODE_SORT_KEY {
	p := new(ACTION_CODE_SORT_KEY)
	*p = x
	return p
}

func (x ACTION_CODE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACTION_CODE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_actions_codes_scailo_proto_enumTypes[0].Descriptor()
}

func (ACTION_CODE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_actions_codes_scailo_proto_enumTypes[0]
}

func (x ACTION_CODE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACTION_CODE_SORT_KEY.Descriptor instead.
func (ACTION_CODE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type ActionsCodesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ActionsCodes a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// ActionsCodes any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The name of the action code
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the action code is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The color of the text that is displayed for easy recognition
	FgColor string `protobuf:"bytes,12,opt,name=fg_color,json=fgColor,proto3" json:"fg_color,omitempty"`
	// The background color that is displayed for easy recognition
	BgColor string `protobuf:"bytes,13,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// The ID of the associated non-leaf parent action code (0, if the first action code that is being created is a leaf action code)
	ParentActionCodeId uint64 `protobuf:"varint,16,opt,name=parent_action_code_id,json=parentActionCodeId,proto3" json:"parent_action_code_id,omitempty"`
	// Stores if this is a leaf action code or a non-leaf action code
	IsLeaf bool `protobuf:"varint,17,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the action code
	Description   string `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServiceCreateRequest) Reset() {
	*x = ActionsCodesServiceCreateRequest{}
	mi := &file_actions_codes_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServiceCreateRequest) ProtoMessage() {}

func (x *ActionsCodesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ActionsCodesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *ActionsCodesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetFgColor() string {
	if x != nil {
		return x.FgColor
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActionsCodesServiceCreateRequest) GetParentActionCodeId() uint64 {
	if x != nil {
		return x.ParentActionCodeId
	}
	return 0
}

func (x *ActionsCodesServiceCreateRequest) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *ActionsCodesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type ActionsCodesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ActionsCodes any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that actions codes if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The name of the action code
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The color of the text that is displayed for easy recognition
	FgColor string `protobuf:"bytes,12,opt,name=fg_color,json=fgColor,proto3" json:"fg_color,omitempty"`
	// The background color that is displayed for easy recognition
	BgColor string `protobuf:"bytes,13,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// The description of the action code
	Description   string `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServiceUpdateRequest) Reset() {
	*x = ActionsCodesServiceUpdateRequest{}
	mi := &file_actions_codes_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServiceUpdateRequest) ProtoMessage() {}

func (x *ActionsCodesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ActionsCodesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *ActionsCodesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ActionsCodesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActionsCodesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *ActionsCodesServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionsCodesServiceUpdateRequest) GetFgColor() string {
	if x != nil {
		return x.FgColor
	}
	return ""
}

func (x *ActionsCodesServiceUpdateRequest) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActionsCodesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type ActionCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ActionsCodes a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// ActionsCodes the metadata of this action code
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// ActionsCodes the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this action code
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// ActionsCodes the logs of every operation performed on this action code
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The name of the action code
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the action code is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The color of the text that is displayed for easy recognition
	FgColor string `protobuf:"bytes,12,opt,name=fg_color,json=fgColor,proto3" json:"fg_color,omitempty"`
	// The background color that is displayed for easy recognition
	BgColor string `protobuf:"bytes,13,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// The ID of the associated non-leaf parent action code (0, if the first action code that is being created is a leaf action code)
	ParentActionCodeId uint64 `protobuf:"varint,16,opt,name=parent_action_code_id,json=parentActionCodeId,proto3" json:"parent_action_code_id,omitempty"`
	// Stores if this is a leaf action code or a non-leaf action code
	IsLeaf bool `protobuf:"varint,17,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the action code
	Description   string `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionCode) Reset() {
	*x = ActionCode{}
	mi := &file_actions_codes_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionCode) ProtoMessage() {}

func (x *ActionCode) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionCode.ProtoReflect.Descriptor instead.
func (*ActionCode) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *ActionCode) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ActionCode) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ActionCode) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *ActionCode) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ActionCode) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ActionCode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActionCode) GetFgColor() string {
	if x != nil {
		return x.FgColor
	}
	return ""
}

func (x *ActionCode) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActionCode) GetParentActionCodeId() uint64 {
	if x != nil {
		return x.ParentActionCodeId
	}
	return 0
}

func (x *ActionCode) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *ActionCode) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the message consisting of the list of records
type ActionsCodesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*ActionCode `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesList) Reset() {
	*x = ActionsCodesList{}
	mi := &file_actions_codes_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesList) ProtoMessage() {}

func (x *ActionsCodesList) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesList.ProtoReflect.Descriptor instead.
func (*ActionsCodesList) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *ActionsCodesList) GetList() []*ActionCode {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type ActionsCodesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ACTION_CODE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ACTION_CODE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this action code
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServicePaginationReq) Reset() {
	*x = ActionsCodesServicePaginationReq{}
	mi := &file_actions_codes_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServicePaginationReq) ProtoMessage() {}

func (x *ActionsCodesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*ActionsCodesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *ActionsCodesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ActionsCodesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionsCodesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ActionsCodesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ActionsCodesServicePaginationReq) GetSortKey() ACTION_CODE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ActionsCodesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type ActionsCodesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*ActionCode `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServicePaginationResponse) Reset() {
	*x = ActionsCodesServicePaginationResponse{}
	mi := &file_actions_codes_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServicePaginationResponse) ProtoMessage() {}

func (x *ActionsCodesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*ActionsCodesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *ActionsCodesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionsCodesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ActionsCodesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ActionsCodesServicePaginationResponse) GetPayload() []*ActionCode {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type ActionsCodesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ACTION_CODE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ACTION_CODE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this action code
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the action code
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the action code is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The color of the text that is displayed for easy recognition
	FgColor string `protobuf:"bytes,22,opt,name=fg_color,json=fgColor,proto3" json:"fg_color,omitempty"`
	// The background color that is displayed for easy recognition
	BgColor string `protobuf:"bytes,23,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// The ID of the associated non-leaf parent action code (0, if the first action code that is being created is a leaf action code)
	ParentActionCodeId uint64 `protobuf:"varint,26,opt,name=parent_action_code_id,json=parentActionCodeId,proto3" json:"parent_action_code_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,27,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServiceFilterReq) Reset() {
	*x = ActionsCodesServiceFilterReq{}
	mi := &file_actions_codes_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServiceFilterReq) ProtoMessage() {}

func (x *ActionsCodesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*ActionsCodesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *ActionsCodesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ActionsCodesServiceFilterReq) GetSortKey() ACTION_CODE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ActionsCodesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ActionsCodesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionsCodesServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActionsCodesServiceFilterReq) GetFgColor() string {
	if x != nil {
		return x.FgColor
	}
	return ""
}

func (x *ActionsCodesServiceFilterReq) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActionsCodesServiceFilterReq) GetParentActionCodeId() uint64 {
	if x != nil {
		return x.ParentActionCodeId
	}
	return 0
}

func (x *ActionsCodesServiceFilterReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

// Describes the base request payload of a count search
type ActionsCodesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this action code
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the action code
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the action code is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The color of the text that is displayed for easy recognition
	FgColor string `protobuf:"bytes,22,opt,name=fg_color,json=fgColor,proto3" json:"fg_color,omitempty"`
	// The background color that is displayed for easy recognition
	BgColor string `protobuf:"bytes,23,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// The ID of the associated non-leaf parent action code (0, if the first action code that is being created is a leaf action code)
	ParentActionCodeId uint64 `protobuf:"varint,26,opt,name=parent_action_code_id,json=parentActionCodeId,proto3" json:"parent_action_code_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,27,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServiceCountReq) Reset() {
	*x = ActionsCodesServiceCountReq{}
	mi := &file_actions_codes_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServiceCountReq) ProtoMessage() {}

func (x *ActionsCodesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServiceCountReq.ProtoReflect.Descriptor instead.
func (*ActionsCodesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *ActionsCodesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ActionsCodesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionsCodesServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActionsCodesServiceCountReq) GetFgColor() string {
	if x != nil {
		return x.FgColor
	}
	return ""
}

func (x *ActionsCodesServiceCountReq) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *ActionsCodesServiceCountReq) GetParentActionCodeId() uint64 {
	if x != nil {
		return x.ParentActionCodeId
	}
	return 0
}

func (x *ActionsCodesServiceCountReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

// Describes the request payload for performing a generic search operation on records
type ActionsCodesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ACTION_CODE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ACTION_CODE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the associated non-leaf parent action code (0, if the first action code that is being created is a leaf action code)
	ParentActionCodeId uint64 `protobuf:"varint,25,opt,name=parent_action_code_id,json=parentActionCodeId,proto3" json:"parent_action_code_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,26,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActionsCodesServiceSearchAllReq) Reset() {
	*x = ActionsCodesServiceSearchAllReq{}
	mi := &file_actions_codes_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionsCodesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionsCodesServiceSearchAllReq) ProtoMessage() {}

func (x *ActionsCodesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_actions_codes_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionsCodesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*ActionsCodesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_actions_codes_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *ActionsCodesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ActionsCodesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ActionsCodesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ActionsCodesServiceSearchAllReq) GetSortKey() ACTION_CODE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ACTION_CODE_SORT_KEY_ACTION_CODE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ActionsCodesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ActionsCodesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ActionsCodesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ActionsCodesServiceSearchAllReq) GetParentActionCodeId() uint64 {
	if x != nil {
		return x.ParentActionCodeId
	}
	return 0
}

func (x *ActionsCodesServiceSearchAllReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

var File_actions_codes_scailo_proto protoreflect.FileDescriptor

const file_actions_codes_scailo_proto_rawDesc = "" +
	"\n" +
	"\x1aactions_codes.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xcd\x02\n" +
	" ActionsCodesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12\x19\n" +
	"\bfg_color\x18\f \x01(\tR\afgColor\x12\x19\n" +
	"\bbg_color\x18\r \x01(\tR\abgColor\x12:\n" +
	"\x15parent_action_code_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\x12parentActionCodeId\x12\x17\n" +
	"\ais_leaf\x18\x11 \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x12 \x01(\tR\vdescription\"\xf6\x01\n" +
	" ActionsCodesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x19\n" +
	"\bfg_color\x18\f \x01(\tR\afgColor\x12\x19\n" +
	"\bbg_color\x18\r \x01(\tR\abgColor\x12 \n" +
	"\vdescription\x18\x12 \x01(\tR\vdescription\"\xe3\x03\n" +
	"\n" +
	"ActionCode\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12\x19\n" +
	"\bfg_color\x18\f \x01(\tR\afgColor\x12\x19\n" +
	"\bbg_color\x18\r \x01(\tR\abgColor\x121\n" +
	"\x15parent_action_code_id\x18\x10 \x01(\x04R\x12parentActionCodeId\x12\x17\n" +
	"\ais_leaf\x18\x11 \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x12 \x01(\tR\vdescription\":\n" +
	"\x10ActionsCodesList\x12&\n" +
	"\x04list\x18\x01 \x03(\v2\x12.Scailo.ActionCodeR\x04list\"\xbb\x02\n" +
	" ActionsCodesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.ACTION_CODE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x99\x01\n" +
	"%ActionsCodesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12,\n" +
	"\apayload\x18\x04 \x03(\v2\x12.Scailo.ActionCodeR\apayload\"\xbd\a\n" +
	"\x1cActionsCodesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.ACTION_CODE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12\x19\n" +
	"\bfg_color\x18\x16 \x01(\tR\afgColor\x12\x19\n" +
	"\bbg_color\x18\x17 \x01(\tR\abgColor\x121\n" +
	"\x15parent_action_code_id\x18\x1a \x01(\x04R\x12parentActionCodeId\x12,\n" +
	"\ais_leaf\x18\x1b \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\"\x87\x06\n" +
	"\x1bActionsCodesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12\x19\n" +
	"\bfg_color\x18\x16 \x01(\tR\afgColor\x12\x19\n" +
	"\bbg_color\x18\x17 \x01(\tR\abgColor\x121\n" +
	"\x15parent_action_code_id\x18\x1a \x01(\x04R\x12parentActionCodeId\x12,\n" +
	"\ais_leaf\x18\x1b \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\"\xe4\x03\n" +
	"\x1fActionsCodesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.ACTION_CODE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x121\n" +
	"\x15parent_action_code_id\x18\x19 \x01(\x04R\x12parentActionCodeId\x12,\n" +
	"\ais_leaf\x18\x1a \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf*\xbf\x02\n" +
	"\x14ACTION_CODE_SORT_KEY\x12'\n" +
	"#ACTION_CODE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fACTION_CODE_SORT_KEY_CREATED_AT\x10\x01\x12$\n" +
	" ACTION_CODE_SORT_KEY_MODIFIED_AT\x10\x02\x12$\n" +
	" ACTION_CODE_SORT_KEY_APPROVED_ON\x10\x03\x12$\n" +
	" ACTION_CODE_SORT_KEY_APPROVED_BY\x10\x04\x12)\n" +
	"%ACTION_CODE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x1d\n" +
	"\x19ACTION_CODE_SORT_KEY_NAME\x10\n" +
	"\x12\x1d\n" +
	"\x19ACTION_CODE_SORT_KEY_CODE\x10\v2\xc1\x0f\n" +
	"\x13ActionsCodesService\x12N\n" +
	"\x06Create\x12(.Scailo.ActionsCodesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\x05Draft\x12(.Scailo.ActionsCodesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12S\n" +
	"\vDraftUpdate\x12(.Scailo.ActionsCodesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12V\n" +
	"\x0eRevisionUpdate\x12(.Scailo.ActionsCodesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x122\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.ActionCode\x128\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.ActionCode\x12;\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.ActionCode\x12A\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.ActionCode\x12@\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x18.Scailo.ActionsCodesList\x129\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x18.Scailo.ActionsCodesList\x12H\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x18.Scailo.ActionsCodesList\x12m\n" +
	"\x12ViewWithPagination\x12(.Scailo.ActionsCodesServicePaginationReq\x1a-.Scailo.ActionsCodesServicePaginationResponse\x12N\n" +
	"\tSearchAll\x12'.Scailo.ActionsCodesServiceSearchAllReq\x1a\x18.Scailo.ActionsCodesList\x12H\n" +
	"\x06Filter\x12$.Scailo.ActionsCodesServiceFilterReq\x1a\x18.Scailo.ActionsCodesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12C\n" +
	"\x05Count\x12#.Scailo.ActionsCodesServiceCountReq\x1a\x15.Scailo.CountResponse\x12K\n" +
	"\rDownloadAsCSV\x12$.Scailo.ActionsCodesServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBi\n" +
	"\n" +
	"com.ScailoB\x17ActionsCodesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_actions_codes_scailo_proto_rawDescOnce sync.Once
	file_actions_codes_scailo_proto_rawDescData []byte
)

func file_actions_codes_scailo_proto_rawDescGZIP() []byte {
	file_actions_codes_scailo_proto_rawDescOnce.Do(func() {
		file_actions_codes_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_actions_codes_scailo_proto_rawDesc), len(file_actions_codes_scailo_proto_rawDesc)))
	})
	return file_actions_codes_scailo_proto_rawDescData
}

var file_actions_codes_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_actions_codes_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_actions_codes_scailo_proto_goTypes = []any{
	(ACTION_CODE_SORT_KEY)(0),                     // 0: Scailo.ACTION_CODE_SORT_KEY
	(*ActionsCodesServiceCreateRequest)(nil),      // 1: Scailo.ActionsCodesServiceCreateRequest
	(*ActionsCodesServiceUpdateRequest)(nil),      // 2: Scailo.ActionsCodesServiceUpdateRequest
	(*ActionCode)(nil),                            // 3: Scailo.ActionCode
	(*ActionsCodesList)(nil),                      // 4: Scailo.ActionsCodesList
	(*ActionsCodesServicePaginationReq)(nil),      // 5: Scailo.ActionsCodesServicePaginationReq
	(*ActionsCodesServicePaginationResponse)(nil), // 6: Scailo.ActionsCodesServicePaginationResponse
	(*ActionsCodesServiceFilterReq)(nil),          // 7: Scailo.ActionsCodesServiceFilterReq
	(*ActionsCodesServiceCountReq)(nil),           // 8: Scailo.ActionsCodesServiceCountReq
	(*ActionsCodesServiceSearchAllReq)(nil),       // 9: Scailo.ActionsCodesServiceSearchAllReq
	(*EmployeeMetadata)(nil),                      // 10: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                      // 11: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                // 12: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                  // 13: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                              // 14: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                               // 15: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),         // 16: Scailo.IdentifierUUIDWithUserComment
	(*Identifier)(nil),                            // 17: Scailo.Identifier
	(*IdentifierUUID)(nil),                        // 18: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                       // 19: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                          // 20: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),               // 21: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                          // 22: Scailo.StandardFile
	(*IdentifierResponse)(nil),                    // 23: Scailo.IdentifierResponse
	(*CountResponse)(nil),                         // 24: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),                   // 25: Scailo.IdentifierUUIDsList
}
var file_actions_codes_scailo_proto_depIdxs = []int32{
	10, // 0: Scailo.ActionCode.metadata:type_name -> Scailo.EmployeeMetadata
	11, // 1: Scailo.ActionCode.approval_metadata:type_name -> Scailo.ApprovalMetadata
	12, // 2: Scailo.ActionCode.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	13, // 3: Scailo.ActionCode.logs:type_name -> Scailo.LogbookLogConciseSLC
	3,  // 4: Scailo.ActionsCodesList.list:type_name -> Scailo.ActionCode
	14, // 5: Scailo.ActionsCodesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 6: Scailo.ActionsCodesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 7: Scailo.ActionsCodesServicePaginationReq.sort_key:type_name -> Scailo.ACTION_CODE_SORT_KEY
	12, // 8: Scailo.ActionsCodesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 9: Scailo.ActionsCodesServicePaginationResponse.payload:type_name -> Scailo.ActionCode
	14, // 10: Scailo.ActionsCodesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 11: Scailo.ActionsCodesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 12: Scailo.ActionsCodesServiceFilterReq.sort_key:type_name -> Scailo.ACTION_CODE_SORT_KEY
	12, // 13: Scailo.ActionsCodesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 14: Scailo.ActionsCodesServiceFilterReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 15: Scailo.ActionsCodesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	12, // 16: Scailo.ActionsCodesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 17: Scailo.ActionsCodesServiceCountReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 18: Scailo.ActionsCodesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 19: Scailo.ActionsCodesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 20: Scailo.ActionsCodesServiceSearchAllReq.sort_key:type_name -> Scailo.ACTION_CODE_SORT_KEY
	12, // 21: Scailo.ActionsCodesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 22: Scailo.ActionsCodesServiceSearchAllReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	1,  // 23: Scailo.ActionsCodesService.Create:input_type -> Scailo.ActionsCodesServiceCreateRequest
	1,  // 24: Scailo.ActionsCodesService.Draft:input_type -> Scailo.ActionsCodesServiceCreateRequest
	2,  // 25: Scailo.ActionsCodesService.DraftUpdate:input_type -> Scailo.ActionsCodesServiceUpdateRequest
	16, // 26: Scailo.ActionsCodesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 27: Scailo.ActionsCodesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 28: Scailo.ActionsCodesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 29: Scailo.ActionsCodesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	2,  // 30: Scailo.ActionsCodesService.RevisionUpdate:input_type -> Scailo.ActionsCodesServiceUpdateRequest
	16, // 31: Scailo.ActionsCodesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 32: Scailo.ActionsCodesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 33: Scailo.ActionsCodesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 34: Scailo.ActionsCodesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	17, // 35: Scailo.ActionsCodesService.ViewByID:input_type -> Scailo.Identifier
	18, // 36: Scailo.ActionsCodesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	17, // 37: Scailo.ActionsCodesService.ViewEssentialByID:input_type -> Scailo.Identifier
	18, // 38: Scailo.ActionsCodesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	19, // 39: Scailo.ActionsCodesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	20, // 40: Scailo.ActionsCodesService.ViewAll:input_type -> Scailo.ActiveStatus
	18, // 41: Scailo.ActionsCodesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	5,  // 42: Scailo.ActionsCodesService.ViewWithPagination:input_type -> Scailo.ActionsCodesServicePaginationReq
	9,  // 43: Scailo.ActionsCodesService.SearchAll:input_type -> Scailo.ActionsCodesServiceSearchAllReq
	7,  // 44: Scailo.ActionsCodesService.Filter:input_type -> Scailo.ActionsCodesServiceFilterReq
	21, // 45: Scailo.ActionsCodesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	8,  // 46: Scailo.ActionsCodesService.Count:input_type -> Scailo.ActionsCodesServiceCountReq
	7,  // 47: Scailo.ActionsCodesService.DownloadAsCSV:input_type -> Scailo.ActionsCodesServiceFilterReq
	22, // 48: Scailo.ActionsCodesService.ImportFromCSV:input_type -> Scailo.StandardFile
	23, // 49: Scailo.ActionsCodesService.Create:output_type -> Scailo.IdentifierResponse
	23, // 50: Scailo.ActionsCodesService.Draft:output_type -> Scailo.IdentifierResponse
	23, // 51: Scailo.ActionsCodesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	23, // 52: Scailo.ActionsCodesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	23, // 53: Scailo.ActionsCodesService.Verify:output_type -> Scailo.IdentifierResponse
	23, // 54: Scailo.ActionsCodesService.Approve:output_type -> Scailo.IdentifierResponse
	23, // 55: Scailo.ActionsCodesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	23, // 56: Scailo.ActionsCodesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	23, // 57: Scailo.ActionsCodesService.Halt:output_type -> Scailo.IdentifierResponse
	23, // 58: Scailo.ActionsCodesService.Discard:output_type -> Scailo.IdentifierResponse
	23, // 59: Scailo.ActionsCodesService.Restore:output_type -> Scailo.IdentifierResponse
	23, // 60: Scailo.ActionsCodesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	3,  // 61: Scailo.ActionsCodesService.ViewByID:output_type -> Scailo.ActionCode
	3,  // 62: Scailo.ActionsCodesService.ViewByUUID:output_type -> Scailo.ActionCode
	3,  // 63: Scailo.ActionsCodesService.ViewEssentialByID:output_type -> Scailo.ActionCode
	3,  // 64: Scailo.ActionsCodesService.ViewEssentialByUUID:output_type -> Scailo.ActionCode
	4,  // 65: Scailo.ActionsCodesService.ViewFromIDs:output_type -> Scailo.ActionsCodesList
	4,  // 66: Scailo.ActionsCodesService.ViewAll:output_type -> Scailo.ActionsCodesList
	4,  // 67: Scailo.ActionsCodesService.ViewAllForEntityUUID:output_type -> Scailo.ActionsCodesList
	6,  // 68: Scailo.ActionsCodesService.ViewWithPagination:output_type -> Scailo.ActionsCodesServicePaginationResponse
	4,  // 69: Scailo.ActionsCodesService.SearchAll:output_type -> Scailo.ActionsCodesList
	4,  // 70: Scailo.ActionsCodesService.Filter:output_type -> Scailo.ActionsCodesList
	24, // 71: Scailo.ActionsCodesService.CountInStatus:output_type -> Scailo.CountResponse
	24, // 72: Scailo.ActionsCodesService.Count:output_type -> Scailo.CountResponse
	22, // 73: Scailo.ActionsCodesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	25, // 74: Scailo.ActionsCodesService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	49, // [49:75] is the sub-list for method output_type
	23, // [23:49] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_actions_codes_scailo_proto_init() }
func file_actions_codes_scailo_proto_init() {
	if File_actions_codes_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_actions_codes_scailo_proto_rawDesc), len(file_actions_codes_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_actions_codes_scailo_proto_goTypes,
		DependencyIndexes: file_actions_codes_scailo_proto_depIdxs,
		EnumInfos:         file_actions_codes_scailo_proto_enumTypes,
		MessageInfos:      file_actions_codes_scailo_proto_msgTypes,
	}.Build()
	File_actions_codes_scailo_proto = out.File
	file_actions_codes_scailo_proto_goTypes = nil
	file_actions_codes_scailo_proto_depIdxs = nil
}
