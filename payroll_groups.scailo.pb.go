// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: payroll_groups.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available input types for a payroll group item (with possible vbalues being percentage or fixed)
type PAYROLL_GROUP_ITEM_VALUE_TYPE int32

const (
	// Acceptable value type is any (usefil only for filters and search)
	PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED PAYROLL_GROUP_ITEM_VALUE_TYPE = 0
	// Acceptable value type is a percentage
	PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_PERCENTAGE PAYROLL_GROUP_ITEM_VALUE_TYPE = 1
	// Acceptable value type is fixed
	PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_FIXED PAYROLL_GROUP_ITEM_VALUE_TYPE = 2
)

// Enum value maps for PAYROLL_GROUP_ITEM_VALUE_TYPE.
var (
	PAYROLL_GROUP_ITEM_VALUE_TYPE_name = map[int32]string{
		0: "PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED",
		1: "PAYROLL_GROUP_ITEM_VALUE_TYPE_PERCENTAGE",
		2: "PAYROLL_GROUP_ITEM_VALUE_TYPE_FIXED",
	}
	PAYROLL_GROUP_ITEM_VALUE_TYPE_value = map[string]int32{
		"PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED": 0,
		"PAYROLL_GROUP_ITEM_VALUE_TYPE_PERCENTAGE":      1,
		"PAYROLL_GROUP_ITEM_VALUE_TYPE_FIXED":           2,
	}
)

func (x PAYROLL_GROUP_ITEM_VALUE_TYPE) Enum() *PAYROLL_GROUP_ITEM_VALUE_TYPE {
	p := new(PAYROLL_GROUP_ITEM_VALUE_TYPE)
	*p = x
	return p
}

func (x PAYROLL_GROUP_ITEM_VALUE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PAYROLL_GROUP_ITEM_VALUE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_payroll_groups_scailo_proto_enumTypes[0].Descriptor()
}

func (PAYROLL_GROUP_ITEM_VALUE_TYPE) Type() protoreflect.EnumType {
	return &file_payroll_groups_scailo_proto_enumTypes[0]
}

func (x PAYROLL_GROUP_ITEM_VALUE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PAYROLL_GROUP_ITEM_VALUE_TYPE.Descriptor instead.
func (PAYROLL_GROUP_ITEM_VALUE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type PAYROLL_GROUP_SORT_KEY int32

const (
	// Fetch ordered results by id
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED PAYROLL_GROUP_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_CREATED_AT PAYROLL_GROUP_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_MODIFIED_AT PAYROLL_GROUP_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_APPROVED_ON PAYROLL_GROUP_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_APPROVED_BY PAYROLL_GROUP_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_APPROVER_ROLE_ID PAYROLL_GROUP_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_COMPLETED_ON PAYROLL_GROUP_SORT_KEY = 6
	// Fetch ordered results by the name
	PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_NAME PAYROLL_GROUP_SORT_KEY = 10
)

// Enum value maps for PAYROLL_GROUP_SORT_KEY.
var (
	PAYROLL_GROUP_SORT_KEY_name = map[int32]string{
		0:  "PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED",
		1:  "PAYROLL_GROUP_SORT_KEY_CREATED_AT",
		2:  "PAYROLL_GROUP_SORT_KEY_MODIFIED_AT",
		3:  "PAYROLL_GROUP_SORT_KEY_APPROVED_ON",
		4:  "PAYROLL_GROUP_SORT_KEY_APPROVED_BY",
		5:  "PAYROLL_GROUP_SORT_KEY_APPROVER_ROLE_ID",
		6:  "PAYROLL_GROUP_SORT_KEY_COMPLETED_ON",
		10: "PAYROLL_GROUP_SORT_KEY_NAME",
	}
	PAYROLL_GROUP_SORT_KEY_value = map[string]int32{
		"PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED":   0,
		"PAYROLL_GROUP_SORT_KEY_CREATED_AT":       1,
		"PAYROLL_GROUP_SORT_KEY_MODIFIED_AT":      2,
		"PAYROLL_GROUP_SORT_KEY_APPROVED_ON":      3,
		"PAYROLL_GROUP_SORT_KEY_APPROVED_BY":      4,
		"PAYROLL_GROUP_SORT_KEY_APPROVER_ROLE_ID": 5,
		"PAYROLL_GROUP_SORT_KEY_COMPLETED_ON":     6,
		"PAYROLL_GROUP_SORT_KEY_NAME":             10,
	}
)

func (x PAYROLL_GROUP_SORT_KEY) Enum() *PAYROLL_GROUP_SORT_KEY {
	p := new(PAYROLL_GROUP_SORT_KEY)
	*p = x
	return p
}

func (x PAYROLL_GROUP_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PAYROLL_GROUP_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_payroll_groups_scailo_proto_enumTypes[1].Descriptor()
}

func (PAYROLL_GROUP_SORT_KEY) Type() protoreflect.EnumType {
	return &file_payroll_groups_scailo_proto_enumTypes[1]
}

func (x PAYROLL_GROUP_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PAYROLL_GROUP_SORT_KEY.Descriptor instead.
func (PAYROLL_GROUP_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the parameters necessary to create a record
type PayrollGroupsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The name of the payroll group
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The payroll group code
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the payroll group
	Description   string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceCreateRequest) Reset() {
	*x = PayrollGroupsServiceCreateRequest{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceCreateRequest) ProtoMessage() {}

func (x *PayrollGroupsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *PayrollGroupsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroupsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *PayrollGroupsServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayrollGroupsServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PayrollGroupsServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type PayrollGroupsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The name of the payroll group
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The payroll group code
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the payroll group
	Description   string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceUpdateRequest) Reset() {
	*x = PayrollGroupsServiceUpdateRequest{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceUpdateRequest) ProtoMessage() {}

func (x *PayrollGroupsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *PayrollGroupsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *PayrollGroupsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayrollGroupsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *PayrollGroupsServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayrollGroupsServiceUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PayrollGroupsServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type PayrollGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this payroll group
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this payroll group
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this payroll group
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this payroll group was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The name of the payroll group
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The payroll group code
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the payroll group
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of associated payroll group params
	List          []*PayrollGroupItem `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroup) Reset() {
	*x = PayrollGroup{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroup) ProtoMessage() {}

func (x *PayrollGroup) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroup.ProtoReflect.Descriptor instead.
func (*PayrollGroup) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *PayrollGroup) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroup) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PayrollGroup) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *PayrollGroup) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *PayrollGroup) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *PayrollGroup) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *PayrollGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayrollGroup) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PayrollGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PayrollGroup) GetList() []*PayrollGroupItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters required to add a param to a payroll group
type PayrollGroupsServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the ID of the payroll group
	PayrollGroupId uint64 `protobuf:"varint,10,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The ID of the payroll param that is a part of the payroll group
	PayrollParamId uint64 `protobuf:"varint,11,opt,name=payroll_param_id,json=payrollParamId,proto3" json:"payroll_param_id,omitempty"`
	// The value type of the item
	ValueType PAYROLL_GROUP_ITEM_VALUE_TYPE `protobuf:"varint,20,opt,name=value_type,json=valueType,proto3,enum=Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE" json:"value_type,omitempty"`
	// Stores the base pay addition amount in terms of value_type (if value_type is percentage, then base_pay determines the percentage)
	BasePayAddition uint64 `protobuf:"varint,21,opt,name=base_pay_addition,json=basePayAddition,proto3" json:"base_pay_addition,omitempty"`
	// Stores the divisor with which the base_pay_addition needs to be divided by, in order to get the actual base pay value
	Divisor uint64 `protobuf:"varint,22,opt,name=divisor,proto3" json:"divisor,omitempty"`
	// The minimum amount of applicable tax (will be disregarded if value is -100)
	MinAmount int64 `protobuf:"varint,23,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// The maximum amount of applicable tax (will be disregarded if value is -100)
	MaxAmount int64 `protobuf:"varint,24,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Stores the amount (in terms of percentage) on which any associated payroll tax is applicable
	AmountPercentageOnWhichTaxApplicable uint64 `protobuf:"varint,25,opt,name=amount_percentage_on_which_tax_applicable,json=amountPercentageOnWhichTaxApplicable,proto3" json:"amount_percentage_on_which_tax_applicable,omitempty"`
	// An optional description
	Description   string `protobuf:"bytes,40,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceItemCreateRequest) Reset() {
	*x = PayrollGroupsServiceItemCreateRequest{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceItemCreateRequest) ProtoMessage() {}

func (x *PayrollGroupsServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *PayrollGroupsServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *PayrollGroupsServiceItemCreateRequest) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetPayrollParamId() uint64 {
	if x != nil {
		return x.PayrollParamId
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetValueType() PAYROLL_GROUP_ITEM_VALUE_TYPE {
	if x != nil {
		return x.ValueType
	}
	return PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceItemCreateRequest) GetBasePayAddition() uint64 {
	if x != nil {
		return x.BasePayAddition
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetAmountPercentageOnWhichTaxApplicable() uint64 {
	if x != nil {
		return x.AmountPercentageOnWhichTaxApplicable
	}
	return 0
}

func (x *PayrollGroupsServiceItemCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters required to update a param in a payroll group
type PayrollGroupsServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The value type of the item
	ValueType PAYROLL_GROUP_ITEM_VALUE_TYPE `protobuf:"varint,20,opt,name=value_type,json=valueType,proto3,enum=Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE" json:"value_type,omitempty"`
	// Stores the base pay addition amount in terms of value_type (if value_type is percentage, then base_pay determines the percentage)
	BasePayAddition uint64 `protobuf:"varint,21,opt,name=base_pay_addition,json=basePayAddition,proto3" json:"base_pay_addition,omitempty"`
	// Stores the divisor with which the base_pay_addition needs to be divided by, in order to get the actual base pay value
	Divisor uint64 `protobuf:"varint,22,opt,name=divisor,proto3" json:"divisor,omitempty"`
	// The minimum amount of applicable tax (will be disregarded if value is -100)
	MinAmount int64 `protobuf:"varint,23,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// The maximum amount of applicable tax (will be disregarded if value is -100)
	MaxAmount int64 `protobuf:"varint,24,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Stores the amount (in terms of percentage) on which any associated payroll tax is applicable
	AmountPercentageOnWhichTaxApplicable uint64 `protobuf:"varint,25,opt,name=amount_percentage_on_which_tax_applicable,json=amountPercentageOnWhichTaxApplicable,proto3" json:"amount_percentage_on_which_tax_applicable,omitempty"`
	// An optional description
	Description   string `protobuf:"bytes,40,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceItemUpdateRequest) Reset() {
	*x = PayrollGroupsServiceItemUpdateRequest{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceItemUpdateRequest) ProtoMessage() {}

func (x *PayrollGroupsServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetValueType() PAYROLL_GROUP_ITEM_VALUE_TYPE {
	if x != nil {
		return x.ValueType
	}
	return PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetBasePayAddition() uint64 {
	if x != nil {
		return x.BasePayAddition
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetAmountPercentageOnWhichTaxApplicable() uint64 {
	if x != nil {
		return x.AmountPercentageOnWhichTaxApplicable
	}
	return 0
}

func (x *PayrollGroupsServiceItemUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that constitute a param associated to a payroll group
type PayrollGroupItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this payroll group
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the ID of the payroll group
	PayrollGroupId uint64 `protobuf:"varint,10,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The ID of the payroll param that is a part of the payroll group
	PayrollParamId uint64 `protobuf:"varint,11,opt,name=payroll_param_id,json=payrollParamId,proto3" json:"payroll_param_id,omitempty"`
	// The value type of the item
	ValueType PAYROLL_GROUP_ITEM_VALUE_TYPE `protobuf:"varint,20,opt,name=value_type,json=valueType,proto3,enum=Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE" json:"value_type,omitempty"`
	// Stores the base pay addition amount in terms of value_type (if value_type is percentage, then base_pay determines the percentage)
	BasePayAddition uint64 `protobuf:"varint,21,opt,name=base_pay_addition,json=basePayAddition,proto3" json:"base_pay_addition,omitempty"`
	// Stores the divisor with which the base_pay_addition needs to be divided by, in order to get the actual base pay value
	Divisor uint64 `protobuf:"varint,22,opt,name=divisor,proto3" json:"divisor,omitempty"`
	// The minimum amount of applicable tax (will be disregarded if value is -100)
	MinAmount int64 `protobuf:"varint,23,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// The maximum amount of applicable tax (will be disregarded if value is -100)
	MaxAmount int64 `protobuf:"varint,24,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Stores the amount (in terms of percentage) on which any associated payroll tax is applicable
	AmountPercentageOnWhichTaxApplicable uint64 `protobuf:"varint,25,opt,name=amount_percentage_on_which_tax_applicable,json=amountPercentageOnWhichTaxApplicable,proto3" json:"amount_percentage_on_which_tax_applicable,omitempty"`
	// An optional description
	Description   string `protobuf:"bytes,40,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupItem) Reset() {
	*x = PayrollGroupItem{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupItem) ProtoMessage() {}

func (x *PayrollGroupItem) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupItem.ProtoReflect.Descriptor instead.
func (*PayrollGroupItem) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *PayrollGroupItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroupItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PayrollGroupItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *PayrollGroupItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *PayrollGroupItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *PayrollGroupItem) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *PayrollGroupItem) GetPayrollParamId() uint64 {
	if x != nil {
		return x.PayrollParamId
	}
	return 0
}

func (x *PayrollGroupItem) GetValueType() PAYROLL_GROUP_ITEM_VALUE_TYPE {
	if x != nil {
		return x.ValueType
	}
	return PAYROLL_GROUP_ITEM_VALUE_TYPE_PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED
}

func (x *PayrollGroupItem) GetBasePayAddition() uint64 {
	if x != nil {
		return x.BasePayAddition
	}
	return 0
}

func (x *PayrollGroupItem) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

func (x *PayrollGroupItem) GetMinAmount() int64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *PayrollGroupItem) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *PayrollGroupItem) GetAmountPercentageOnWhichTaxApplicable() uint64 {
	if x != nil {
		return x.AmountPercentageOnWhichTaxApplicable
	}
	return 0
}

func (x *PayrollGroupItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the message consisting of the list of payroll groups
type PayrollGroupsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*PayrollGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsList) Reset() {
	*x = PayrollGroupsList{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsList) ProtoMessage() {}

func (x *PayrollGroupsList) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsList.ProtoReflect.Descriptor instead.
func (*PayrollGroupsList) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *PayrollGroupsList) GetList() []*PayrollGroup {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of payroll group params
type PayrollGroupsItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*PayrollGroupItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsItemsList) Reset() {
	*x = PayrollGroupsItemsList{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsItemsList) ProtoMessage() {}

func (x *PayrollGroupsItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsItemsList.ProtoReflect.Descriptor instead.
func (*PayrollGroupsItemsList) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *PayrollGroupsItemsList) GetList() []*PayrollGroupItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type PayrollGroupItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the ID of the payroll group
	PayrollGroupId uint64 `protobuf:"varint,10,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The ID of the payroll param that is a part of the payroll group
	PayrollParamId uint64 `protobuf:"varint,11,opt,name=payroll_param_id,json=payrollParamId,proto3" json:"payroll_param_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PayrollGroupItemHistoryRequest) Reset() {
	*x = PayrollGroupItemHistoryRequest{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupItemHistoryRequest) ProtoMessage() {}

func (x *PayrollGroupItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*PayrollGroupItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *PayrollGroupItemHistoryRequest) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *PayrollGroupItemHistoryRequest) GetPayrollParamId() uint64 {
	if x != nil {
		return x.PayrollParamId
	}
	return 0
}

// Describes a pagination request to retrieve records
type PayrollGroupsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey PAYROLL_GROUP_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.PAYROLL_GROUP_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this payroll group
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServicePaginationReq) Reset() {
	*x = PayrollGroupsServicePaginationReq{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServicePaginationReq) ProtoMessage() {}

func (x *PayrollGroupsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *PayrollGroupsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayrollGroupsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PayrollGroupsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *PayrollGroupsServicePaginationReq) GetSortKey() PAYROLL_GROUP_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED
}

func (x *PayrollGroupsServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type PayrollGroupsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*PayrollGroup `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServicePaginationResponse) Reset() {
	*x = PayrollGroupsServicePaginationResponse{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServicePaginationResponse) ProtoMessage() {}

func (x *PayrollGroupsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *PayrollGroupsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayrollGroupsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PayrollGroupsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PayrollGroupsServicePaginationResponse) GetPayload() []*PayrollGroup {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type PayrollGroupsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey PAYROLL_GROUP_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.PAYROLL_GROUP_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this payroll group
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the payroll group
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The payroll param code
	Code          string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceFilterReq) Reset() {
	*x = PayrollGroupsServiceFilterReq{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceFilterReq) ProtoMessage() {}

func (x *PayrollGroupsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *PayrollGroupsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *PayrollGroupsServiceFilterReq) GetSortKey() PAYROLL_GROUP_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED
}

func (x *PayrollGroupsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroupsServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *PayrollGroupsServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayrollGroupsServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Describes the base request payload of a count search
type PayrollGroupsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this payroll group
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the payroll group
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The payroll param code
	Code          string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceCountReq) Reset() {
	*x = PayrollGroupsServiceCountReq{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceCountReq) ProtoMessage() {}

func (x *PayrollGroupsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceCountReq.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *PayrollGroupsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroupsServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *PayrollGroupsServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayrollGroupsServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Describes the request payload for performing a generic search operation on records
type PayrollGroupsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey PAYROLL_GROUP_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.PAYROLL_GROUP_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayrollGroupsServiceSearchAllReq) Reset() {
	*x = PayrollGroupsServiceSearchAllReq{}
	mi := &file_payroll_groups_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayrollGroupsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayrollGroupsServiceSearchAllReq) ProtoMessage() {}

func (x *PayrollGroupsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_payroll_groups_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayrollGroupsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*PayrollGroupsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_payroll_groups_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *PayrollGroupsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PayrollGroupsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PayrollGroupsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *PayrollGroupsServiceSearchAllReq) GetSortKey() PAYROLL_GROUP_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return PAYROLL_GROUP_SORT_KEY_PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED
}

func (x *PayrollGroupsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *PayrollGroupsServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *PayrollGroupsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

var File_payroll_groups_scailo_proto protoreflect.FileDescriptor

const file_payroll_groups_scailo_proto_rawDesc = "" +
	"\n" +
	"\x1bpayroll_groups.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xc3\x01\n" +
	"!PayrollGroupsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\"\xde\x01\n" +
	"!PayrollGroupsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\"\xbd\x03\n" +
	"\fPayrollGroup\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x12,\n" +
	"\x04list\x18\x14 \x03(\v2\x18.Scailo.PayrollGroupItemR\x04list\"\xb4\x04\n" +
	"%PayrollGroupsServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x121\n" +
	"\x10payroll_group_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0epayrollGroupId\x121\n" +
	"\x10payroll_param_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x0epayrollParamId\x12D\n" +
	"\n" +
	"value_type\x18\x14 \x01(\x0e2%.Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPER\tvalueType\x123\n" +
	"\x11base_pay_addition\x18\x15 \x01(\x04B\a\xbaH\x042\x02 \x00R\x0fbasePayAddition\x12!\n" +
	"\adivisor\x18\x16 \x01(\x04B\a\xbaH\x042\x02 \x00R\adivisor\x12/\n" +
	"\n" +
	"min_amount\x18\x17 \x01(\x03B\x10\xbaH\r\"\v(\x9c\xff\xff\xff\xff\xff\xff\xff\xff\x01R\tminAmount\x12/\n" +
	"\n" +
	"max_amount\x18\x18 \x01(\x03B\x10\xbaH\r\"\v(\x9c\xff\xff\xff\xff\xff\xff\xff\xff\x01R\tmaxAmount\x12`\n" +
	")amount_percentage_on_which_tax_applicable\x18\x19 \x01(\x04B\a\xbaH\x042\x02 \x00R$amountPercentageOnWhichTaxApplicable\x12 \n" +
	"\vdescription\x18( \x01(\tR\vdescription\"\xe7\x03\n" +
	"%PayrollGroupsServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12D\n" +
	"\n" +
	"value_type\x18\x14 \x01(\x0e2%.Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPER\tvalueType\x123\n" +
	"\x11base_pay_addition\x18\x15 \x01(\x04B\a\xbaH\x042\x02 \x00R\x0fbasePayAddition\x12!\n" +
	"\adivisor\x18\x16 \x01(\x04B\a\xbaH\x042\x02 \x00R\adivisor\x12/\n" +
	"\n" +
	"min_amount\x18\x17 \x01(\x03B\x10\xbaH\r\"\v(\x9c\xff\xff\xff\xff\xff\xff\xff\xff\x01R\tminAmount\x12/\n" +
	"\n" +
	"max_amount\x18\x18 \x01(\x03B\x10\xbaH\r\"\v(\x9c\xff\xff\xff\xff\xff\xff\xff\xff\x01R\tmaxAmount\x12`\n" +
	")amount_percentage_on_which_tax_applicable\x18\x19 \x01(\x04B\a\xbaH\x042\x02 \x00R$amountPercentageOnWhichTaxApplicable\x12 \n" +
	"\vdescription\x18( \x01(\tR\vdescription\"\x91\x05\n" +
	"\x10PayrollGroupItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12(\n" +
	"\x10payroll_group_id\x18\n" +
	" \x01(\x04R\x0epayrollGroupId\x12(\n" +
	"\x10payroll_param_id\x18\v \x01(\x04R\x0epayrollParamId\x12D\n" +
	"\n" +
	"value_type\x18\x14 \x01(\x0e2%.Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPER\tvalueType\x12*\n" +
	"\x11base_pay_addition\x18\x15 \x01(\x04R\x0fbasePayAddition\x12\x18\n" +
	"\adivisor\x18\x16 \x01(\x04R\adivisor\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x17 \x01(\x03R\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x18 \x01(\x03R\tmaxAmount\x12W\n" +
	")amount_percentage_on_which_tax_applicable\x18\x19 \x01(\x04R$amountPercentageOnWhichTaxApplicable\x12 \n" +
	"\vdescription\x18( \x01(\tR\vdescription\"=\n" +
	"\x11PayrollGroupsList\x12(\n" +
	"\x04list\x18\x01 \x03(\v2\x14.Scailo.PayrollGroupR\x04list\"F\n" +
	"\x16PayrollGroupsItemsList\x12,\n" +
	"\x04list\x18\x01 \x03(\v2\x18.Scailo.PayrollGroupItemR\x04list\"\x86\x01\n" +
	"\x1ePayrollGroupItemHistoryRequest\x121\n" +
	"\x10payroll_group_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0epayrollGroupId\x121\n" +
	"\x10payroll_param_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x0epayrollParamId\"\xbe\x02\n" +
	"!PayrollGroupsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.PAYROLL_GROUP_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x9c\x01\n" +
	"&PayrollGroupsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12.\n" +
	"\apayload\x18\x04 \x03(\v2\x14.Scailo.PayrollGroupR\apayload\"\x81\a\n" +
	"\x1dPayrollGroupsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.PAYROLL_GROUP_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\"\xc9\x05\n" +
	"\x1cPayrollGroupsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\"\x86\x03\n" +
	" PayrollGroupsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.PAYROLL_GROUP_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey*\xa9\x01\n" +
	"\x1dPAYROLL_GROUP_ITEM_VALUE_TYPE\x121\n" +
	"-PAYROLL_GROUP_ITEM_VALUE_TYPE_ANY_UNSPECIFIED\x10\x00\x12,\n" +
	"(PAYROLL_GROUP_ITEM_VALUE_TYPE_PERCENTAGE\x10\x01\x12'\n" +
	"#PAYROLL_GROUP_ITEM_VALUE_TYPE_FIXED\x10\x02*\xd9\x02\n" +
	"\x16PAYROLL_GROUP_SORT_KEY\x12)\n" +
	"%PAYROLL_GROUP_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12%\n" +
	"!PAYROLL_GROUP_SORT_KEY_CREATED_AT\x10\x01\x12&\n" +
	"\"PAYROLL_GROUP_SORT_KEY_MODIFIED_AT\x10\x02\x12&\n" +
	"\"PAYROLL_GROUP_SORT_KEY_APPROVED_ON\x10\x03\x12&\n" +
	"\"PAYROLL_GROUP_SORT_KEY_APPROVED_BY\x10\x04\x12+\n" +
	"'PAYROLL_GROUP_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12'\n" +
	"#PAYROLL_GROUP_SORT_KEY_COMPLETED_ON\x10\x06\x12\x1f\n" +
	"\x1bPAYROLL_GROUP_SORT_KEY_NAME\x10\n" +
	"2\xdb\x1a\n" +
	"\x14PayrollGroupsService\x12O\n" +
	"\x06Create\x12).Scailo.PayrollGroupsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\x05Draft\x12).Scailo.PayrollGroupsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\vDraftUpdate\x12).Scailo.PayrollGroupsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12W\n" +
	"\x0eRevisionUpdate\x12).Scailo.PayrollGroupsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x129\n" +
	"\x05Clone\x12\x14.Scailo.CloneRequest\x1a\x1a.Scailo.IdentifierResponse\x12`\n" +
	"\x13AddPayrollGroupItem\x12-.Scailo.PayrollGroupsServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12c\n" +
	"\x16ModifyPayrollGroupItem\x12-.Scailo.PayrollGroupsServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x17ApprovePayrollGroupItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12W\n" +
	"\x16DeletePayrollGroupItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12S\n" +
	"\x18ReorderPayrollGroupItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12H\n" +
	"\x18ViewPayrollGroupItemByID\x12\x12.Scailo.Identifier\x1a\x18.Scailo.PayrollGroupItem\x12`\n" +
	"\x1dViewApprovedPayrollGroupItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1e.Scailo.PayrollGroupsItemsList\x12b\n" +
	"\x1fViewUnapprovedPayrollGroupItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1e.Scailo.PayrollGroupsItemsList\x12e\n" +
	"\x1bViewPayrollGroupItemHistory\x12&.Scailo.PayrollGroupItemHistoryRequest\x1a\x1e.Scailo.PayrollGroupsItemsList\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12R\n" +
	"\x17UploadPayrollGroupItems\x12\x1e.Scailo.IdentifierUUIDWithFile\x1a\x17.Scailo.IdentifiersList\x124\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.PayrollGroup\x12:\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.PayrollGroup\x12;\n" +
	"\n" +
	"ViewByCode\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.PayrollGroup\x12=\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.PayrollGroup\x12C\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.PayrollGroup\x12A\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x19.Scailo.PayrollGroupsList\x12:\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x19.Scailo.PayrollGroupsList\x12I\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x19.Scailo.PayrollGroupsList\x12o\n" +
	"\x12ViewWithPagination\x12).Scailo.PayrollGroupsServicePaginationReq\x1a..Scailo.PayrollGroupsServicePaginationResponse\x12P\n" +
	"\tSearchAll\x12(.Scailo.PayrollGroupsServiceSearchAllReq\x1a\x19.Scailo.PayrollGroupsList\x12J\n" +
	"\x06Filter\x12%.Scailo.PayrollGroupsServiceFilterReq\x1a\x19.Scailo.PayrollGroupsList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12D\n" +
	"\x05Count\x12$.Scailo.PayrollGroupsServiceCountReq\x1a\x15.Scailo.CountResponse\x12L\n" +
	"\rDownloadAsCSV\x12%.Scailo.PayrollGroupsServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBj\n" +
	"\n" +
	"com.ScailoB\x18PayrollGroupsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_payroll_groups_scailo_proto_rawDescOnce sync.Once
	file_payroll_groups_scailo_proto_rawDescData []byte
)

func file_payroll_groups_scailo_proto_rawDescGZIP() []byte {
	file_payroll_groups_scailo_proto_rawDescOnce.Do(func() {
		file_payroll_groups_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payroll_groups_scailo_proto_rawDesc), len(file_payroll_groups_scailo_proto_rawDesc)))
	})
	return file_payroll_groups_scailo_proto_rawDescData
}

var file_payroll_groups_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_payroll_groups_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_payroll_groups_scailo_proto_goTypes = []any{
	(PAYROLL_GROUP_ITEM_VALUE_TYPE)(0),             // 0: Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE
	(PAYROLL_GROUP_SORT_KEY)(0),                    // 1: Scailo.PAYROLL_GROUP_SORT_KEY
	(*PayrollGroupsServiceCreateRequest)(nil),      // 2: Scailo.PayrollGroupsServiceCreateRequest
	(*PayrollGroupsServiceUpdateRequest)(nil),      // 3: Scailo.PayrollGroupsServiceUpdateRequest
	(*PayrollGroup)(nil),                           // 4: Scailo.PayrollGroup
	(*PayrollGroupsServiceItemCreateRequest)(nil),  // 5: Scailo.PayrollGroupsServiceItemCreateRequest
	(*PayrollGroupsServiceItemUpdateRequest)(nil),  // 6: Scailo.PayrollGroupsServiceItemUpdateRequest
	(*PayrollGroupItem)(nil),                       // 7: Scailo.PayrollGroupItem
	(*PayrollGroupsList)(nil),                      // 8: Scailo.PayrollGroupsList
	(*PayrollGroupsItemsList)(nil),                 // 9: Scailo.PayrollGroupsItemsList
	(*PayrollGroupItemHistoryRequest)(nil),         // 10: Scailo.PayrollGroupItemHistoryRequest
	(*PayrollGroupsServicePaginationReq)(nil),      // 11: Scailo.PayrollGroupsServicePaginationReq
	(*PayrollGroupsServicePaginationResponse)(nil), // 12: Scailo.PayrollGroupsServicePaginationResponse
	(*PayrollGroupsServiceFilterReq)(nil),          // 13: Scailo.PayrollGroupsServiceFilterReq
	(*PayrollGroupsServiceCountReq)(nil),           // 14: Scailo.PayrollGroupsServiceCountReq
	(*PayrollGroupsServiceSearchAllReq)(nil),       // 15: Scailo.PayrollGroupsServiceSearchAllReq
	(*EmployeeMetadata)(nil),                       // 16: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                       // 17: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                 // 18: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                   // 19: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                               // 20: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                // 21: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),          // 22: Scailo.IdentifierUUIDWithUserComment
	(*CloneRequest)(nil),                           // 23: Scailo.CloneRequest
	(*IdentifierWithUserComment)(nil),              // 24: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                    // 25: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                             // 26: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                // 27: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                         // 28: Scailo.IdentifierUUID
	(*Empty)(nil),                                  // 29: Scailo.Empty
	(*IdentifierUUIDWithFile)(nil),                 // 30: Scailo.IdentifierUUIDWithFile
	(*SimpleSearchReq)(nil),                        // 31: Scailo.SimpleSearchReq
	(*IdentifiersList)(nil),                        // 32: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                           // 33: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),                // 34: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                           // 35: Scailo.StandardFile
	(*IdentifierResponse)(nil),                     // 36: Scailo.IdentifierResponse
	(*CountResponse)(nil),                          // 37: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),                    // 38: Scailo.IdentifierUUIDsList
}
var file_payroll_groups_scailo_proto_depIdxs = []int32{
	16, // 0: Scailo.PayrollGroup.metadata:type_name -> Scailo.EmployeeMetadata
	17, // 1: Scailo.PayrollGroup.approval_metadata:type_name -> Scailo.ApprovalMetadata
	18, // 2: Scailo.PayrollGroup.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	19, // 3: Scailo.PayrollGroup.logs:type_name -> Scailo.LogbookLogConciseSLC
	7,  // 4: Scailo.PayrollGroup.list:type_name -> Scailo.PayrollGroupItem
	0,  // 5: Scailo.PayrollGroupsServiceItemCreateRequest.value_type:type_name -> Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE
	0,  // 6: Scailo.PayrollGroupsServiceItemUpdateRequest.value_type:type_name -> Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE
	16, // 7: Scailo.PayrollGroupItem.metadata:type_name -> Scailo.EmployeeMetadata
	17, // 8: Scailo.PayrollGroupItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	0,  // 9: Scailo.PayrollGroupItem.value_type:type_name -> Scailo.PAYROLL_GROUP_ITEM_VALUE_TYPE
	4,  // 10: Scailo.PayrollGroupsList.list:type_name -> Scailo.PayrollGroup
	7,  // 11: Scailo.PayrollGroupsItemsList.list:type_name -> Scailo.PayrollGroupItem
	20, // 12: Scailo.PayrollGroupsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	21, // 13: Scailo.PayrollGroupsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 14: Scailo.PayrollGroupsServicePaginationReq.sort_key:type_name -> Scailo.PAYROLL_GROUP_SORT_KEY
	18, // 15: Scailo.PayrollGroupsServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	4,  // 16: Scailo.PayrollGroupsServicePaginationResponse.payload:type_name -> Scailo.PayrollGroup
	20, // 17: Scailo.PayrollGroupsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	21, // 18: Scailo.PayrollGroupsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 19: Scailo.PayrollGroupsServiceFilterReq.sort_key:type_name -> Scailo.PAYROLL_GROUP_SORT_KEY
	18, // 20: Scailo.PayrollGroupsServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	20, // 21: Scailo.PayrollGroupsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	18, // 22: Scailo.PayrollGroupsServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	20, // 23: Scailo.PayrollGroupsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	21, // 24: Scailo.PayrollGroupsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 25: Scailo.PayrollGroupsServiceSearchAllReq.sort_key:type_name -> Scailo.PAYROLL_GROUP_SORT_KEY
	18, // 26: Scailo.PayrollGroupsServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	2,  // 27: Scailo.PayrollGroupsService.Create:input_type -> Scailo.PayrollGroupsServiceCreateRequest
	2,  // 28: Scailo.PayrollGroupsService.Draft:input_type -> Scailo.PayrollGroupsServiceCreateRequest
	3,  // 29: Scailo.PayrollGroupsService.DraftUpdate:input_type -> Scailo.PayrollGroupsServiceUpdateRequest
	22, // 30: Scailo.PayrollGroupsService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 31: Scailo.PayrollGroupsService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 32: Scailo.PayrollGroupsService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 33: Scailo.PayrollGroupsService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	3,  // 34: Scailo.PayrollGroupsService.RevisionUpdate:input_type -> Scailo.PayrollGroupsServiceUpdateRequest
	22, // 35: Scailo.PayrollGroupsService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 36: Scailo.PayrollGroupsService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 37: Scailo.PayrollGroupsService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 38: Scailo.PayrollGroupsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 39: Scailo.PayrollGroupsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 40: Scailo.PayrollGroupsService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 41: Scailo.PayrollGroupsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	23, // 42: Scailo.PayrollGroupsService.Clone:input_type -> Scailo.CloneRequest
	5,  // 43: Scailo.PayrollGroupsService.AddPayrollGroupItem:input_type -> Scailo.PayrollGroupsServiceItemCreateRequest
	6,  // 44: Scailo.PayrollGroupsService.ModifyPayrollGroupItem:input_type -> Scailo.PayrollGroupsServiceItemUpdateRequest
	24, // 45: Scailo.PayrollGroupsService.ApprovePayrollGroupItem:input_type -> Scailo.IdentifierWithUserComment
	24, // 46: Scailo.PayrollGroupsService.DeletePayrollGroupItem:input_type -> Scailo.IdentifierWithUserComment
	25, // 47: Scailo.PayrollGroupsService.ReorderPayrollGroupItems:input_type -> Scailo.ReorderItemsRequest
	26, // 48: Scailo.PayrollGroupsService.ViewPayrollGroupItemByID:input_type -> Scailo.Identifier
	27, // 49: Scailo.PayrollGroupsService.ViewApprovedPayrollGroupItems:input_type -> Scailo.IdentifierWithSearchKey
	27, // 50: Scailo.PayrollGroupsService.ViewUnapprovedPayrollGroupItems:input_type -> Scailo.IdentifierWithSearchKey
	10, // 51: Scailo.PayrollGroupsService.ViewPayrollGroupItemHistory:input_type -> Scailo.PayrollGroupItemHistoryRequest
	28, // 52: Scailo.PayrollGroupsService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	29, // 53: Scailo.PayrollGroupsService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	30, // 54: Scailo.PayrollGroupsService.UploadPayrollGroupItems:input_type -> Scailo.IdentifierUUIDWithFile
	26, // 55: Scailo.PayrollGroupsService.ViewByID:input_type -> Scailo.Identifier
	28, // 56: Scailo.PayrollGroupsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	31, // 57: Scailo.PayrollGroupsService.ViewByCode:input_type -> Scailo.SimpleSearchReq
	26, // 58: Scailo.PayrollGroupsService.ViewEssentialByID:input_type -> Scailo.Identifier
	28, // 59: Scailo.PayrollGroupsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	32, // 60: Scailo.PayrollGroupsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	33, // 61: Scailo.PayrollGroupsService.ViewAll:input_type -> Scailo.ActiveStatus
	28, // 62: Scailo.PayrollGroupsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	11, // 63: Scailo.PayrollGroupsService.ViewWithPagination:input_type -> Scailo.PayrollGroupsServicePaginationReq
	15, // 64: Scailo.PayrollGroupsService.SearchAll:input_type -> Scailo.PayrollGroupsServiceSearchAllReq
	13, // 65: Scailo.PayrollGroupsService.Filter:input_type -> Scailo.PayrollGroupsServiceFilterReq
	34, // 66: Scailo.PayrollGroupsService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	14, // 67: Scailo.PayrollGroupsService.Count:input_type -> Scailo.PayrollGroupsServiceCountReq
	13, // 68: Scailo.PayrollGroupsService.DownloadAsCSV:input_type -> Scailo.PayrollGroupsServiceFilterReq
	35, // 69: Scailo.PayrollGroupsService.ImportFromCSV:input_type -> Scailo.StandardFile
	36, // 70: Scailo.PayrollGroupsService.Create:output_type -> Scailo.IdentifierResponse
	36, // 71: Scailo.PayrollGroupsService.Draft:output_type -> Scailo.IdentifierResponse
	36, // 72: Scailo.PayrollGroupsService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	36, // 73: Scailo.PayrollGroupsService.SendForVerification:output_type -> Scailo.IdentifierResponse
	36, // 74: Scailo.PayrollGroupsService.Verify:output_type -> Scailo.IdentifierResponse
	36, // 75: Scailo.PayrollGroupsService.Approve:output_type -> Scailo.IdentifierResponse
	36, // 76: Scailo.PayrollGroupsService.SendForRevision:output_type -> Scailo.IdentifierResponse
	36, // 77: Scailo.PayrollGroupsService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	36, // 78: Scailo.PayrollGroupsService.Halt:output_type -> Scailo.IdentifierResponse
	36, // 79: Scailo.PayrollGroupsService.Discard:output_type -> Scailo.IdentifierResponse
	36, // 80: Scailo.PayrollGroupsService.Restore:output_type -> Scailo.IdentifierResponse
	36, // 81: Scailo.PayrollGroupsService.Complete:output_type -> Scailo.IdentifierResponse
	36, // 82: Scailo.PayrollGroupsService.Repeat:output_type -> Scailo.IdentifierResponse
	36, // 83: Scailo.PayrollGroupsService.Reopen:output_type -> Scailo.IdentifierResponse
	36, // 84: Scailo.PayrollGroupsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	36, // 85: Scailo.PayrollGroupsService.Clone:output_type -> Scailo.IdentifierResponse
	36, // 86: Scailo.PayrollGroupsService.AddPayrollGroupItem:output_type -> Scailo.IdentifierResponse
	36, // 87: Scailo.PayrollGroupsService.ModifyPayrollGroupItem:output_type -> Scailo.IdentifierResponse
	36, // 88: Scailo.PayrollGroupsService.ApprovePayrollGroupItem:output_type -> Scailo.IdentifierResponse
	36, // 89: Scailo.PayrollGroupsService.DeletePayrollGroupItem:output_type -> Scailo.IdentifierResponse
	36, // 90: Scailo.PayrollGroupsService.ReorderPayrollGroupItems:output_type -> Scailo.IdentifierResponse
	7,  // 91: Scailo.PayrollGroupsService.ViewPayrollGroupItemByID:output_type -> Scailo.PayrollGroupItem
	9,  // 92: Scailo.PayrollGroupsService.ViewApprovedPayrollGroupItems:output_type -> Scailo.PayrollGroupsItemsList
	9,  // 93: Scailo.PayrollGroupsService.ViewUnapprovedPayrollGroupItems:output_type -> Scailo.PayrollGroupsItemsList
	9,  // 94: Scailo.PayrollGroupsService.ViewPayrollGroupItemHistory:output_type -> Scailo.PayrollGroupsItemsList
	35, // 95: Scailo.PayrollGroupsService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	35, // 96: Scailo.PayrollGroupsService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	32, // 97: Scailo.PayrollGroupsService.UploadPayrollGroupItems:output_type -> Scailo.IdentifiersList
	4,  // 98: Scailo.PayrollGroupsService.ViewByID:output_type -> Scailo.PayrollGroup
	4,  // 99: Scailo.PayrollGroupsService.ViewByUUID:output_type -> Scailo.PayrollGroup
	4,  // 100: Scailo.PayrollGroupsService.ViewByCode:output_type -> Scailo.PayrollGroup
	4,  // 101: Scailo.PayrollGroupsService.ViewEssentialByID:output_type -> Scailo.PayrollGroup
	4,  // 102: Scailo.PayrollGroupsService.ViewEssentialByUUID:output_type -> Scailo.PayrollGroup
	8,  // 103: Scailo.PayrollGroupsService.ViewFromIDs:output_type -> Scailo.PayrollGroupsList
	8,  // 104: Scailo.PayrollGroupsService.ViewAll:output_type -> Scailo.PayrollGroupsList
	8,  // 105: Scailo.PayrollGroupsService.ViewAllForEntityUUID:output_type -> Scailo.PayrollGroupsList
	12, // 106: Scailo.PayrollGroupsService.ViewWithPagination:output_type -> Scailo.PayrollGroupsServicePaginationResponse
	8,  // 107: Scailo.PayrollGroupsService.SearchAll:output_type -> Scailo.PayrollGroupsList
	8,  // 108: Scailo.PayrollGroupsService.Filter:output_type -> Scailo.PayrollGroupsList
	37, // 109: Scailo.PayrollGroupsService.CountInStatus:output_type -> Scailo.CountResponse
	37, // 110: Scailo.PayrollGroupsService.Count:output_type -> Scailo.CountResponse
	35, // 111: Scailo.PayrollGroupsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	38, // 112: Scailo.PayrollGroupsService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	70, // [70:113] is the sub-list for method output_type
	27, // [27:70] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_payroll_groups_scailo_proto_init() }
func file_payroll_groups_scailo_proto_init() {
	if File_payroll_groups_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payroll_groups_scailo_proto_rawDesc), len(file_payroll_groups_scailo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payroll_groups_scailo_proto_goTypes,
		DependencyIndexes: file_payroll_groups_scailo_proto_depIdxs,
		EnumInfos:         file_payroll_groups_scailo_proto_enumTypes,
		MessageInfos:      file_payroll_groups_scailo_proto_msgTypes,
	}.Build()
	File_payroll_groups_scailo_proto = out.File
	file_payroll_groups_scailo_proto_goTypes = nil
	file_payroll_groups_scailo_proto_depIdxs = nil
}
