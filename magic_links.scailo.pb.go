// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: magic_links.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available resource types magic links
type MAGIC_LINK_RESOURCE_TYPE int32

const (
	// Used only in filters
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED MAGIC_LINK_RESOURCE_TYPE = 0
	// Denotes that the magic link was created for a vendor
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_VENDOR MAGIC_LINK_RESOURCE_TYPE = 10
	// Denotes that the magic link was created for a purchase enquiry
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ENQUIRY MAGIC_LINK_RESOURCE_TYPE = 20
	// Denotes that the magic link was created for a quotation request
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_QUOTATION_REQUEST MAGIC_LINK_RESOURCE_TYPE = 30
	// Denotes that the magic link was created for a quotation response
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_QUOTATION_RESPONSE MAGIC_LINK_RESOURCE_TYPE = 40
	// Denotes that the magic link was created for a purchase order
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ORDER MAGIC_LINK_RESOURCE_TYPE = 100
	// Denotes that the magic link was created for a goods receipt
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_GOODS_RECEIPT MAGIC_LINK_RESOURCE_TYPE = 110
	// Denotes that the magic link was created for a vendor invoice
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_VENDOR_INVOICE MAGIC_LINK_RESOURCE_TYPE = 120
	// Denotes that the magic link was created for a debit note
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_DEBIT_NOTE MAGIC_LINK_RESOURCE_TYPE = 130
	// Denotes that the magic link was created for a purchase return
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PURCHASE_RETURN MAGIC_LINK_RESOURCE_TYPE = 140
	// Denotes that the magic link was created for a purchase payment
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PURCHASE_PAYMENT MAGIC_LINK_RESOURCE_TYPE = 150
	// Denotes that the magic link was created for a supply offer
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SUPPLY_OFFER MAGIC_LINK_RESOURCE_TYPE = 160
	// Denotes that the magic link was created for a sales enquiry
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_ENQUIRY MAGIC_LINK_RESOURCE_TYPE = 200
	// Denotes that the magic link was created for a sales quotation;
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_QUOTATION MAGIC_LINK_RESOURCE_TYPE = 205
	// Denotes that the magic link was created for a sales order
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_ORDER MAGIC_LINK_RESOURCE_TYPE = 210
	// Denotes that the magic link was created for a goods dispatch
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_GOODS_DISPATCH MAGIC_LINK_RESOURCE_TYPE = 220
	// Denotes that the magic link was created for a proforma invoice
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PROFORMA_INVOICE MAGIC_LINK_RESOURCE_TYPE = 225
	// Denotes that the magic link was created for a sales invoice
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_INVOICE MAGIC_LINK_RESOURCE_TYPE = 230
	// Denotes that the magic link was created for a credit note
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_CREDIT_NOTE MAGIC_LINK_RESOURCE_TYPE = 240
	// Denotes that the magic link was created for a sales return
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_RETURN MAGIC_LINK_RESOURCE_TYPE = 250
	// Denotes that the magic link was created for a sales receipt
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_SALES_RECEIPT MAGIC_LINK_RESOURCE_TYPE = 260
	// Denotes that the magic link was created for an inward job
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB MAGIC_LINK_RESOURCE_TYPE = 300
	// Denotes that the magic link was created for an inward job free issue material
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL MAGIC_LINK_RESOURCE_TYPE = 310
	// Denotes that the magic link was created for an inward job free issue material return
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL_RETURN MAGIC_LINK_RESOURCE_TYPE = 320
	// Denotes that the magic link was created for an outward job
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB MAGIC_LINK_RESOURCE_TYPE = 400
	// Denotes that the magic link was created for an outward job free issue material
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL MAGIC_LINK_RESOURCE_TYPE = 410
	// Denotes that the magic link was created for an outward job free issue material return
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL_RETURN MAGIC_LINK_RESOURCE_TYPE = 420
	// Denotes that the magic link was created for a family equation
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EQUATION_FAMILY MAGIC_LINK_RESOURCE_TYPE = 600
	// Denotes that the magic link was created for a sales bundle equation
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EQUATION_SALES_BUNDLE MAGIC_LINK_RESOURCE_TYPE = 610
	// Denotes that the magic link was created for a work order equation
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EQUATION_WORK_ORDER MAGIC_LINK_RESOURCE_TYPE = 620
	// Denotes that the magic link was created for a replaceable equation
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EQUATION_REPLACEABLE MAGIC_LINK_RESOURCE_TYPE = 630
	// Denotes that the magic link was created for a work order
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_WORK_ORDER MAGIC_LINK_RESOURCE_TYPE = 700
	// Denotes that the magic link was created for a production plan
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_PLAN MAGIC_LINK_RESOURCE_TYPE = 710
	// Denotes that the magic link was created for a replaceable indent
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_REPLACEABLE_INDENT MAGIC_LINK_RESOURCE_TYPE = 800
	// Denotes that the magic link was created for a purchase indent
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PURCHASE_INDENT MAGIC_LINK_RESOURCE_TYPE = 810
	// Denotes that the magic link was created for a production indent
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_INDENT MAGIC_LINK_RESOURCE_TYPE = 820
	// Denotes that the magic link was created for an asset indent
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ASSET_INDENT MAGIC_LINK_RESOURCE_TYPE = 830
	// Denotes that the magic link was created for a stock issuance
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_STOCK_ISSUANCE MAGIC_LINK_RESOURCE_TYPE = 900
	// Denotes that the magic link was created for a stock return
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_STOCK_RETURN MAGIC_LINK_RESOURCE_TYPE = 910
	// Denotes that the magic link was created for a stock audit
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_STOCK_AUDIT MAGIC_LINK_RESOURCE_TYPE = 920
	// Denotes that the magic link was created for a qc sample
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_QC_SAMPLE MAGIC_LINK_RESOURCE_TYPE = 1000
	// Denotes that the magic link was created for a component
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_COMPONENT MAGIC_LINK_RESOURCE_TYPE = 1100
	// Denotes that the magic link was created for a product
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_PRODUCT MAGIC_LINK_RESOURCE_TYPE = 1110
	// Denotes that the magic link was created for a feedstock
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_FEEDSTOCK MAGIC_LINK_RESOURCE_TYPE = 1120
	// Denotes that the magic link was created for a merchandise
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_MERCHANDISE MAGIC_LINK_RESOURCE_TYPE = 1130
	// Denotes that the magic link was created for an equipment
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EQUIPMENT MAGIC_LINK_RESOURCE_TYPE = 1140
	// Denotes that the magic link was created for an infrastructure
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_INFRASTRUCTURE MAGIC_LINK_RESOURCE_TYPE = 1150
	// Denotes that the magic link was created for an attendance
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ATTENDANCE MAGIC_LINK_RESOURCE_TYPE = 1200
	// Denotes that the magic link was created for an absence
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ABSENCE MAGIC_LINK_RESOURCE_TYPE = 1210
	// Denotes that the magic link was created for an on duty
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ON_DUTY MAGIC_LINK_RESOURCE_TYPE = 1220
	// Denotes that the magic link was created for a visitation
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_VISITATION MAGIC_LINK_RESOURCE_TYPE = 1230
	// Denotes that the magic link was created for an expense
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_EXPENSE MAGIC_LINK_RESOURCE_TYPE = 1500
	// Denotes that the magic link was created for accepting a user's signature
	MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_USER_SIGNATURE MAGIC_LINK_RESOURCE_TYPE = 1600
)

// Enum value maps for MAGIC_LINK_RESOURCE_TYPE.
var (
	MAGIC_LINK_RESOURCE_TYPE_name = map[int32]string{
		0:    "MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED",
		10:   "MAGIC_LINK_RESOURCE_TYPE_VENDOR",
		20:   "MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ENQUIRY",
		30:   "MAGIC_LINK_RESOURCE_TYPE_QUOTATION_REQUEST",
		40:   "MAGIC_LINK_RESOURCE_TYPE_QUOTATION_RESPONSE",
		100:  "MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ORDER",
		110:  "MAGIC_LINK_RESOURCE_TYPE_GOODS_RECEIPT",
		120:  "MAGIC_LINK_RESOURCE_TYPE_VENDOR_INVOICE",
		130:  "MAGIC_LINK_RESOURCE_TYPE_DEBIT_NOTE",
		140:  "MAGIC_LINK_RESOURCE_TYPE_PURCHASE_RETURN",
		150:  "MAGIC_LINK_RESOURCE_TYPE_PURCHASE_PAYMENT",
		160:  "MAGIC_LINK_RESOURCE_TYPE_SUPPLY_OFFER",
		200:  "MAGIC_LINK_RESOURCE_TYPE_SALES_ENQUIRY",
		205:  "MAGIC_LINK_RESOURCE_TYPE_SALES_QUOTATION",
		210:  "MAGIC_LINK_RESOURCE_TYPE_SALES_ORDER",
		220:  "MAGIC_LINK_RESOURCE_TYPE_GOODS_DISPATCH",
		225:  "MAGIC_LINK_RESOURCE_TYPE_PROFORMA_INVOICE",
		230:  "MAGIC_LINK_RESOURCE_TYPE_SALES_INVOICE",
		240:  "MAGIC_LINK_RESOURCE_TYPE_CREDIT_NOTE",
		250:  "MAGIC_LINK_RESOURCE_TYPE_SALES_RETURN",
		260:  "MAGIC_LINK_RESOURCE_TYPE_SALES_RECEIPT",
		300:  "MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB",
		310:  "MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL",
		320:  "MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL_RETURN",
		400:  "MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB",
		410:  "MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL",
		420:  "MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL_RETURN",
		600:  "MAGIC_LINK_RESOURCE_TYPE_EQUATION_FAMILY",
		610:  "MAGIC_LINK_RESOURCE_TYPE_EQUATION_SALES_BUNDLE",
		620:  "MAGIC_LINK_RESOURCE_TYPE_EQUATION_WORK_ORDER",
		630:  "MAGIC_LINK_RESOURCE_TYPE_EQUATION_REPLACEABLE",
		700:  "MAGIC_LINK_RESOURCE_TYPE_WORK_ORDER",
		710:  "MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_PLAN",
		800:  "MAGIC_LINK_RESOURCE_TYPE_REPLACEABLE_INDENT",
		810:  "MAGIC_LINK_RESOURCE_TYPE_PURCHASE_INDENT",
		820:  "MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_INDENT",
		830:  "MAGIC_LINK_RESOURCE_TYPE_ASSET_INDENT",
		900:  "MAGIC_LINK_RESOURCE_TYPE_STOCK_ISSUANCE",
		910:  "MAGIC_LINK_RESOURCE_TYPE_STOCK_RETURN",
		920:  "MAGIC_LINK_RESOURCE_TYPE_STOCK_AUDIT",
		1000: "MAGIC_LINK_RESOURCE_TYPE_QC_SAMPLE",
		1100: "MAGIC_LINK_RESOURCE_TYPE_COMPONENT",
		1110: "MAGIC_LINK_RESOURCE_TYPE_PRODUCT",
		1120: "MAGIC_LINK_RESOURCE_TYPE_FEEDSTOCK",
		1130: "MAGIC_LINK_RESOURCE_TYPE_MERCHANDISE",
		1140: "MAGIC_LINK_RESOURCE_TYPE_EQUIPMENT",
		1150: "MAGIC_LINK_RESOURCE_TYPE_INFRASTRUCTURE",
		1200: "MAGIC_LINK_RESOURCE_TYPE_ATTENDANCE",
		1210: "MAGIC_LINK_RESOURCE_TYPE_ABSENCE",
		1220: "MAGIC_LINK_RESOURCE_TYPE_ON_DUTY",
		1230: "MAGIC_LINK_RESOURCE_TYPE_VISITATION",
		1500: "MAGIC_LINK_RESOURCE_TYPE_EXPENSE",
		1600: "MAGIC_LINK_RESOURCE_TYPE_USER_SIGNATURE",
	}
	MAGIC_LINK_RESOURCE_TYPE_value = map[string]int32{
		"MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED":                        0,
		"MAGIC_LINK_RESOURCE_TYPE_VENDOR":                                 10,
		"MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ENQUIRY":                       20,
		"MAGIC_LINK_RESOURCE_TYPE_QUOTATION_REQUEST":                      30,
		"MAGIC_LINK_RESOURCE_TYPE_QUOTATION_RESPONSE":                     40,
		"MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ORDER":                         100,
		"MAGIC_LINK_RESOURCE_TYPE_GOODS_RECEIPT":                          110,
		"MAGIC_LINK_RESOURCE_TYPE_VENDOR_INVOICE":                         120,
		"MAGIC_LINK_RESOURCE_TYPE_DEBIT_NOTE":                             130,
		"MAGIC_LINK_RESOURCE_TYPE_PURCHASE_RETURN":                        140,
		"MAGIC_LINK_RESOURCE_TYPE_PURCHASE_PAYMENT":                       150,
		"MAGIC_LINK_RESOURCE_TYPE_SUPPLY_OFFER":                           160,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_ENQUIRY":                          200,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_QUOTATION":                        205,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_ORDER":                            210,
		"MAGIC_LINK_RESOURCE_TYPE_GOODS_DISPATCH":                         220,
		"MAGIC_LINK_RESOURCE_TYPE_PROFORMA_INVOICE":                       225,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_INVOICE":                          230,
		"MAGIC_LINK_RESOURCE_TYPE_CREDIT_NOTE":                            240,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_RETURN":                           250,
		"MAGIC_LINK_RESOURCE_TYPE_SALES_RECEIPT":                          260,
		"MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB":                             300,
		"MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL":         310,
		"MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL_RETURN":  320,
		"MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB":                            400,
		"MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL":        410,
		"MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL_RETURN": 420,
		"MAGIC_LINK_RESOURCE_TYPE_EQUATION_FAMILY":                        600,
		"MAGIC_LINK_RESOURCE_TYPE_EQUATION_SALES_BUNDLE":                  610,
		"MAGIC_LINK_RESOURCE_TYPE_EQUATION_WORK_ORDER":                    620,
		"MAGIC_LINK_RESOURCE_TYPE_EQUATION_REPLACEABLE":                   630,
		"MAGIC_LINK_RESOURCE_TYPE_WORK_ORDER":                             700,
		"MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_PLAN":                        710,
		"MAGIC_LINK_RESOURCE_TYPE_REPLACEABLE_INDENT":                     800,
		"MAGIC_LINK_RESOURCE_TYPE_PURCHASE_INDENT":                        810,
		"MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_INDENT":                      820,
		"MAGIC_LINK_RESOURCE_TYPE_ASSET_INDENT":                           830,
		"MAGIC_LINK_RESOURCE_TYPE_STOCK_ISSUANCE":                         900,
		"MAGIC_LINK_RESOURCE_TYPE_STOCK_RETURN":                           910,
		"MAGIC_LINK_RESOURCE_TYPE_STOCK_AUDIT":                            920,
		"MAGIC_LINK_RESOURCE_TYPE_QC_SAMPLE":                              1000,
		"MAGIC_LINK_RESOURCE_TYPE_COMPONENT":                              1100,
		"MAGIC_LINK_RESOURCE_TYPE_PRODUCT":                                1110,
		"MAGIC_LINK_RESOURCE_TYPE_FEEDSTOCK":                              1120,
		"MAGIC_LINK_RESOURCE_TYPE_MERCHANDISE":                            1130,
		"MAGIC_LINK_RESOURCE_TYPE_EQUIPMENT":                              1140,
		"MAGIC_LINK_RESOURCE_TYPE_INFRASTRUCTURE":                         1150,
		"MAGIC_LINK_RESOURCE_TYPE_ATTENDANCE":                             1200,
		"MAGIC_LINK_RESOURCE_TYPE_ABSENCE":                                1210,
		"MAGIC_LINK_RESOURCE_TYPE_ON_DUTY":                                1220,
		"MAGIC_LINK_RESOURCE_TYPE_VISITATION":                             1230,
		"MAGIC_LINK_RESOURCE_TYPE_EXPENSE":                                1500,
		"MAGIC_LINK_RESOURCE_TYPE_USER_SIGNATURE":                         1600,
	}
)

func (x MAGIC_LINK_RESOURCE_TYPE) Enum() *MAGIC_LINK_RESOURCE_TYPE {
	p := new(MAGIC_LINK_RESOURCE_TYPE)
	*p = x
	return p
}

func (x MAGIC_LINK_RESOURCE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MAGIC_LINK_RESOURCE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_magic_links_scailo_proto_enumTypes[0].Descriptor()
}

func (MAGIC_LINK_RESOURCE_TYPE) Type() protoreflect.EnumType {
	return &file_magic_links_scailo_proto_enumTypes[0]
}

func (x MAGIC_LINK_RESOURCE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MAGIC_LINK_RESOURCE_TYPE.Descriptor instead.
func (MAGIC_LINK_RESOURCE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys for retrieving magic links
type MAGIC_LINK_SORT_KEY int32

const (
	// Fetch ordered results by id
	MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED MAGIC_LINK_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_CREATED_AT MAGIC_LINK_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_MODIFIED_AT MAGIC_LINK_SORT_KEY = 2
	// Fetch ordered results by expiry timestamp
	MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_EXPIRES_AT MAGIC_LINK_SORT_KEY = 10
)

// Enum value maps for MAGIC_LINK_SORT_KEY.
var (
	MAGIC_LINK_SORT_KEY_name = map[int32]string{
		0:  "MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED",
		1:  "MAGIC_LINK_SORT_KEY_CREATED_AT",
		2:  "MAGIC_LINK_SORT_KEY_MODIFIED_AT",
		10: "MAGIC_LINK_SORT_KEY_EXPIRES_AT",
	}
	MAGIC_LINK_SORT_KEY_value = map[string]int32{
		"MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED": 0,
		"MAGIC_LINK_SORT_KEY_CREATED_AT":     1,
		"MAGIC_LINK_SORT_KEY_MODIFIED_AT":    2,
		"MAGIC_LINK_SORT_KEY_EXPIRES_AT":     10,
	}
)

func (x MAGIC_LINK_SORT_KEY) Enum() *MAGIC_LINK_SORT_KEY {
	p := new(MAGIC_LINK_SORT_KEY)
	*p = x
	return p
}

func (x MAGIC_LINK_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MAGIC_LINK_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_magic_links_scailo_proto_enumTypes[1].Descriptor()
}

func (MAGIC_LINK_SORT_KEY) Type() protoreflect.EnumType {
	return &file_magic_links_scailo_proto_enumTypes[1]
}

func (x MAGIC_LINK_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MAGIC_LINK_SORT_KEY.Descriptor instead.
func (MAGIC_LINK_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the data structure of each magic link on the platform
type MagicLink struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this resource
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UUID of the resource
	ResourceUuid string `protobuf:"bytes,10,opt,name=resource_uuid,json=resourceUuid,proto3" json:"resource_uuid,omitempty"`
	// The type of the resource
	ResourceType MAGIC_LINK_RESOURCE_TYPE `protobuf:"varint,21,opt,name=resource_type,json=resourceType,proto3,enum=Scailo.MAGIC_LINK_RESOURCE_TYPE" json:"resource_type,omitempty"`
	// Stores the UNIX timestamp of when the link expires. If 0, then the link never expires
	ExpiresAt uint64 `protobuf:"varint,30,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Stores an optional description of the magic link
	Description string `protobuf:"bytes,35,opt,name=description,proto3" json:"description,omitempty"`
	// Stores the code of the magic link that can be used to uniquely identify the magic link. This code will be used in the associated links, and will be used to uniquely identify the resource.
	Code string `protobuf:"bytes,40,opt,name=code,proto3" json:"code,omitempty"`
	// Stores the generated URL of the magic link
	Url           string `protobuf:"bytes,100,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLink) Reset() {
	*x = MagicLink{}
	mi := &file_magic_links_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLink) ProtoMessage() {}

func (x *MagicLink) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLink.ProtoReflect.Descriptor instead.
func (*MagicLink) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *MagicLink) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLink) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MagicLink) GetResourceUuid() string {
	if x != nil {
		return x.ResourceUuid
	}
	return ""
}

func (x *MagicLink) GetResourceType() MAGIC_LINK_RESOURCE_TYPE {
	if x != nil {
		return x.ResourceType
	}
	return MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED
}

func (x *MagicLink) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *MagicLink) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MagicLink) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MagicLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Describes the data structure that stores a list of magic links
type MagicLinksList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of magic links
	List          []*MagicLink `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksList) Reset() {
	*x = MagicLinksList{}
	mi := &file_magic_links_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksList) ProtoMessage() {}

func (x *MagicLinksList) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksList.ProtoReflect.Descriptor instead.
func (*MagicLinksList) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *MagicLinksList) GetList() []*MagicLink {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the data structure that responds to a pagination request
type MagicLinkPaginationResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*MagicLink `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinkPaginationResp) Reset() {
	*x = MagicLinkPaginationResp{}
	mi := &file_magic_links_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinkPaginationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinkPaginationResp) ProtoMessage() {}

func (x *MagicLinkPaginationResp) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinkPaginationResp.ProtoReflect.Descriptor instead.
func (*MagicLinkPaginationResp) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *MagicLinkPaginationResp) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MagicLinkPaginationResp) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MagicLinkPaginationResp) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MagicLinkPaginationResp) GetPayload() []*MagicLink {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the necessary data structure during creation of a magic link
type MagicLinksServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the resource
	ResourceUuid string `protobuf:"bytes,10,opt,name=resource_uuid,json=resourceUuid,proto3" json:"resource_uuid,omitempty"`
	// The type of the resource
	ResourceType MAGIC_LINK_RESOURCE_TYPE `protobuf:"varint,21,opt,name=resource_type,json=resourceType,proto3,enum=Scailo.MAGIC_LINK_RESOURCE_TYPE" json:"resource_type,omitempty"`
	// Stores the UNIX timestamp of when the link expires. If 0, then the link never expires
	ExpiresAt uint64 `protobuf:"varint,30,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Stores an optional description of the magic link
	Description   string `protobuf:"bytes,35,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceCreateRequest) Reset() {
	*x = MagicLinksServiceCreateRequest{}
	mi := &file_magic_links_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceCreateRequest) ProtoMessage() {}

func (x *MagicLinksServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *MagicLinksServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLinksServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MagicLinksServiceCreateRequest) GetResourceUuid() string {
	if x != nil {
		return x.ResourceUuid
	}
	return ""
}

func (x *MagicLinksServiceCreateRequest) GetResourceType() MAGIC_LINK_RESOURCE_TYPE {
	if x != nil {
		return x.ResourceType
	}
	return MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceCreateRequest) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *MagicLinksServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the necessary data structure for creation of a magic link. This data structure is used within other services, while creating magic links for the given resource
type MagicLinksServiceCreateRequestForSpecificResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the resource
	ResourceUuid string `protobuf:"bytes,10,opt,name=resource_uuid,json=resourceUuid,proto3" json:"resource_uuid,omitempty"`
	// Stores the UNIX timestamp of when the link expires. If 0, then the link never expires
	ExpiresAt uint64 `protobuf:"varint,30,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Stores an optional description of the magic link
	Description   string `protobuf:"bytes,35,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) Reset() {
	*x = MagicLinksServiceCreateRequestForSpecificResource{}
	mi := &file_magic_links_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceCreateRequestForSpecificResource) ProtoMessage() {}

func (x *MagicLinksServiceCreateRequestForSpecificResource) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceCreateRequestForSpecificResource.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceCreateRequestForSpecificResource) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) GetResourceUuid() string {
	if x != nil {
		return x.ResourceUuid
	}
	return ""
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *MagicLinksServiceCreateRequestForSpecificResource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the data structure to perform the update (draft/revision) operation on a magic link
type MagicLinksServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the magic link that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Stores the UNIX timestamp of when the link expires. If 0, then the link never expires
	ExpiresAt uint64 `protobuf:"varint,30,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// Stores an optional description of the magic link
	Description   string `protobuf:"bytes,35,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceUpdateRequest) Reset() {
	*x = MagicLinksServiceUpdateRequest{}
	mi := &file_magic_links_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceUpdateRequest) ProtoMessage() {}

func (x *MagicLinksServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *MagicLinksServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MagicLinksServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MagicLinksServiceUpdateRequest) GetExpiresAt() uint64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *MagicLinksServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes a pagination request to retrieve records
type MagicLinksServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey       MAGIC_LINK_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MAGIC_LINK_SORT_KEY" json:"sort_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServicePaginationReq) Reset() {
	*x = MagicLinksServicePaginationReq{}
	mi := &file_magic_links_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServicePaginationReq) ProtoMessage() {}

func (x *MagicLinksServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServicePaginationReq.ProtoReflect.Descriptor instead.
func (*MagicLinksServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *MagicLinksServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MagicLinksServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MagicLinksServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MagicLinksServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MagicLinksServicePaginationReq) GetSortKey() MAGIC_LINK_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED
}

// Describes the base request payload of a filter search
type MagicLinksServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey MAGIC_LINK_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MAGIC_LINK_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The type of the resource
	ResourceType MAGIC_LINK_RESOURCE_TYPE `protobuf:"varint,21,opt,name=resource_type,json=resourceType,proto3,enum=Scailo.MAGIC_LINK_RESOURCE_TYPE" json:"resource_type,omitempty"`
	// The UUID of the resource
	ResourceUuid string `protobuf:"bytes,22,opt,name=resource_uuid,json=resourceUuid,proto3" json:"resource_uuid,omitempty"`
	// The start timestamp that needs to be considered to filter by expiry
	ExpiresAtStart uint64 `protobuf:"varint,30,opt,name=expires_at_start,json=expiresAtStart,proto3" json:"expires_at_start,omitempty"`
	// The end timestamp that needs to be considered to filter by expiry
	ExpiresAtEnd  uint64 `protobuf:"varint,31,opt,name=expires_at_end,json=expiresAtEnd,proto3" json:"expires_at_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceFilterReq) Reset() {
	*x = MagicLinksServiceFilterReq{}
	mi := &file_magic_links_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceFilterReq) ProtoMessage() {}

func (x *MagicLinksServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceFilterReq.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *MagicLinksServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MagicLinksServiceFilterReq) GetSortKey() MAGIC_LINK_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED
}

func (x *MagicLinksServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLinksServiceFilterReq) GetResourceType() MAGIC_LINK_RESOURCE_TYPE {
	if x != nil {
		return x.ResourceType
	}
	return MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceFilterReq) GetResourceUuid() string {
	if x != nil {
		return x.ResourceUuid
	}
	return ""
}

func (x *MagicLinksServiceFilterReq) GetExpiresAtStart() uint64 {
	if x != nil {
		return x.ExpiresAtStart
	}
	return 0
}

func (x *MagicLinksServiceFilterReq) GetExpiresAtEnd() uint64 {
	if x != nil {
		return x.ExpiresAtEnd
	}
	return 0
}

// Describes the base request payload of a count search
type MagicLinksServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The type of the resource
	ResourceType MAGIC_LINK_RESOURCE_TYPE `protobuf:"varint,21,opt,name=resource_type,json=resourceType,proto3,enum=Scailo.MAGIC_LINK_RESOURCE_TYPE" json:"resource_type,omitempty"`
	// The UUID of the resource
	ResourceUuid string `protobuf:"bytes,22,opt,name=resource_uuid,json=resourceUuid,proto3" json:"resource_uuid,omitempty"`
	// The start timestamp that needs to be considered to filter by expiry
	ExpiresAtStart uint64 `protobuf:"varint,30,opt,name=expires_at_start,json=expiresAtStart,proto3" json:"expires_at_start,omitempty"`
	// The end timestamp that needs to be considered to filter by expiry
	ExpiresAtEnd  uint64 `protobuf:"varint,31,opt,name=expires_at_end,json=expiresAtEnd,proto3" json:"expires_at_end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceCountReq) Reset() {
	*x = MagicLinksServiceCountReq{}
	mi := &file_magic_links_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceCountReq) ProtoMessage() {}

func (x *MagicLinksServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceCountReq.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceCountReq) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *MagicLinksServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *MagicLinksServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *MagicLinksServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *MagicLinksServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *MagicLinksServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLinksServiceCountReq) GetResourceType() MAGIC_LINK_RESOURCE_TYPE {
	if x != nil {
		return x.ResourceType
	}
	return MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceCountReq) GetResourceUuid() string {
	if x != nil {
		return x.ResourceUuid
	}
	return ""
}

func (x *MagicLinksServiceCountReq) GetExpiresAtStart() uint64 {
	if x != nil {
		return x.ExpiresAtStart
	}
	return 0
}

func (x *MagicLinksServiceCountReq) GetExpiresAtEnd() uint64 {
	if x != nil {
		return x.ExpiresAtEnd
	}
	return 0
}

// Describes the request payload for performing a generic search operation on magic links
type MagicLinksServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the response
	SortKey MAGIC_LINK_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MAGIC_LINK_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter magic links
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,10,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The type of the resource
	ResourceType  MAGIC_LINK_RESOURCE_TYPE `protobuf:"varint,21,opt,name=resource_type,json=resourceType,proto3,enum=Scailo.MAGIC_LINK_RESOURCE_TYPE" json:"resource_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinksServiceSearchAllReq) Reset() {
	*x = MagicLinksServiceSearchAllReq{}
	mi := &file_magic_links_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinksServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinksServiceSearchAllReq) ProtoMessage() {}

func (x *MagicLinksServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinksServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*MagicLinksServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *MagicLinksServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MagicLinksServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MagicLinksServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MagicLinksServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MagicLinksServiceSearchAllReq) GetSortKey() MAGIC_LINK_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MAGIC_LINK_SORT_KEY_MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED
}

func (x *MagicLinksServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLinksServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *MagicLinksServiceSearchAllReq) GetResourceType() MAGIC_LINK_RESOURCE_TYPE {
	if x != nil {
		return x.ResourceType
	}
	return MAGIC_LINK_RESOURCE_TYPE_MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED
}

// Describes the request payload for retrieving the magic link information using the code
type MagicLinkServiceSearchByCodeReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The code that needs to be used to retrieve the magic link
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// The IP address that is requesting the search (must be a valid IPv4 or IPv6 address)
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// The user agent information
	UserAgent     string `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinkServiceSearchByCodeReq) Reset() {
	*x = MagicLinkServiceSearchByCodeReq{}
	mi := &file_magic_links_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinkServiceSearchByCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinkServiceSearchByCodeReq) ProtoMessage() {}

func (x *MagicLinkServiceSearchByCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinkServiceSearchByCodeReq.ProtoReflect.Descriptor instead.
func (*MagicLinkServiceSearchByCodeReq) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *MagicLinkServiceSearchByCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MagicLinkServiceSearchByCodeReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *MagicLinkServiceSearchByCodeReq) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

// Describes the access log of each magic link
type MagicLinkAccessLog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this user
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the UUID of the magic link that was accessed
	MagicLinkUuid string `protobuf:"bytes,12,opt,name=magic_link_uuid,json=magicLinkUuid,proto3" json:"magic_link_uuid,omitempty"`
	// Stores the IP address from where the resource was accessed
	IpAddr string `protobuf:"bytes,13,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	// The user agent information
	UserAgent     string `protobuf:"bytes,14,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinkAccessLog) Reset() {
	*x = MagicLinkAccessLog{}
	mi := &file_magic_links_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinkAccessLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinkAccessLog) ProtoMessage() {}

func (x *MagicLinkAccessLog) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinkAccessLog.ProtoReflect.Descriptor instead.
func (*MagicLinkAccessLog) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *MagicLinkAccessLog) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MagicLinkAccessLog) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MagicLinkAccessLog) GetMagicLinkUuid() string {
	if x != nil {
		return x.MagicLinkUuid
	}
	return ""
}

func (x *MagicLinkAccessLog) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *MagicLinkAccessLog) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

// Describes the message consisting of the list of access logs
type MagicLinkAccessLogsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of access logs
	List          []*MagicLinkAccessLog `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MagicLinkAccessLogsList) Reset() {
	*x = MagicLinkAccessLogsList{}
	mi := &file_magic_links_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MagicLinkAccessLogsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicLinkAccessLogsList) ProtoMessage() {}

func (x *MagicLinkAccessLogsList) ProtoReflect() protoreflect.Message {
	mi := &file_magic_links_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicLinkAccessLogsList.ProtoReflect.Descriptor instead.
func (*MagicLinkAccessLogsList) Descriptor() ([]byte, []int) {
	return file_magic_links_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *MagicLinkAccessLogsList) GetList() []*MagicLinkAccessLog {
	if x != nil {
		return x.List
	}
	return nil
}

var File_magic_links_scailo_proto protoreflect.FileDescriptor

const file_magic_links_scailo_proto_rawDesc = "" +
	"\n" +
	"\x18magic_links.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xb5\x02\n" +
	"\tMagicLink\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12#\n" +
	"\rresource_uuid\x18\n" +
	" \x01(\tR\fresourceUuid\x12E\n" +
	"\rresource_type\x18\x15 \x01(\x0e2 .Scailo.MAGIC_LINK_RESOURCE_TYPER\fresourceType\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x1e \x01(\x04R\texpiresAt\x12 \n" +
	"\vdescription\x18# \x01(\tR\vdescription\x12\x12\n" +
	"\x04code\x18( \x01(\tR\x04code\x12\x10\n" +
	"\x03url\x18d \x01(\tR\x03url\"7\n" +
	"\x0eMagicLinksList\x12%\n" +
	"\x04list\x18\x01 \x03(\v2\x11.Scailo.MagicLinkR\x04list\"\x8a\x01\n" +
	"\x17MagicLinkPaginationResp\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12+\n" +
	"\apayload\x18\x04 \x03(\v2\x11.Scailo.MagicLinkR\apayload\"\x9b\x02\n" +
	"\x1eMagicLinksServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12-\n" +
	"\rresource_uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fresourceUuid\x12E\n" +
	"\rresource_type\x18\x15 \x01(\x0e2 .Scailo.MAGIC_LINK_RESOURCE_TYPER\fresourceType\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x1e \x01(\x04R\texpiresAt\x12 \n" +
	"\vdescription\x18# \x01(\tR\vdescription\"\xc6\x01\n" +
	"1MagicLinksServiceCreateRequestForSpecificResource\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12-\n" +
	"\rresource_uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\fresourceUuid\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x1e \x01(\x04R\texpiresAt\x12 \n" +
	"\vdescription\x18# \x01(\tR\vdescription\"\x9d\x01\n" +
	"\x1eMagicLinksServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x1e \x01(\x04R\texpiresAt\x12 \n" +
	"\vdescription\x18# \x01(\tR\vdescription\"\xfd\x01\n" +
	"\x1eMagicLinksServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.MAGIC_LINK_SORT_KEYR\asortKey\"\xcf\x05\n" +
	"\x1aMagicLinksServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.MAGIC_LINK_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x12E\n" +
	"\rresource_type\x18\x15 \x01(\x0e2 .Scailo.MAGIC_LINK_RESOURCE_TYPER\fresourceType\x12#\n" +
	"\rresource_uuid\x18\x16 \x01(\tR\fresourceUuid\x12(\n" +
	"\x10expires_at_start\x18\x1e \x01(\x04R\x0eexpiresAtStart\x12$\n" +
	"\x0eexpires_at_end\x18\x1f \x01(\x04R\fexpiresAtEnd\"\x9a\x04\n" +
	"\x19MagicLinksServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x12E\n" +
	"\rresource_type\x18\x15 \x01(\x0e2 .Scailo.MAGIC_LINK_RESOURCE_TYPER\fresourceType\x12#\n" +
	"\rresource_uuid\x18\x16 \x01(\tR\fresourceUuid\x12(\n" +
	"\x10expires_at_start\x18\x1e \x01(\x04R\x0eexpiresAtStart\x12$\n" +
	"\x0eexpires_at_end\x18\x1f \x01(\x04R\fexpiresAtEnd\"\x8c\x03\n" +
	"\x1dMagicLinksServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.MAGIC_LINK_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12\x1d\n" +
	"\n" +
	"search_key\x18\n" +
	" \x01(\tR\tsearchKey\x12E\n" +
	"\rresource_type\x18\x15 \x01(\x0e2 .Scailo.MAGIC_LINK_RESOURCE_TYPER\fresourceType\"|\n" +
	"\x1fMagicLinkServiceSearchByCodeReq\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12&\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tB\a\xbaH\x04r\x02p\x01R\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x03 \x01(\tR\tuserAgent\"\xcb\x01\n" +
	"\x12MagicLinkAccessLog\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12&\n" +
	"\x0fmagic_link_uuid\x18\f \x01(\tR\rmagicLinkUuid\x12\x17\n" +
	"\aip_addr\x18\r \x01(\tR\x06ipAddr\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x0e \x01(\tR\tuserAgent\"I\n" +
	"\x17MagicLinkAccessLogsList\x12.\n" +
	"\x04list\x18\x01 \x03(\v2\x1a.Scailo.MagicLinkAccessLogR\x04list*\xad\x13\n" +
	"\x18MAGIC_LINK_RESOURCE_TYPE\x12,\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_ANY_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fMAGIC_LINK_RESOURCE_TYPE_VENDOR\x10\n" +
	"\x12-\n" +
	")MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ENQUIRY\x10\x14\x12.\n" +
	"*MAGIC_LINK_RESOURCE_TYPE_QUOTATION_REQUEST\x10\x1e\x12/\n" +
	"+MAGIC_LINK_RESOURCE_TYPE_QUOTATION_RESPONSE\x10(\x12+\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_PURCHASE_ORDER\x10d\x12*\n" +
	"&MAGIC_LINK_RESOURCE_TYPE_GOODS_RECEIPT\x10n\x12+\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_VENDOR_INVOICE\x10x\x12(\n" +
	"#MAGIC_LINK_RESOURCE_TYPE_DEBIT_NOTE\x10\x82\x01\x12-\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_PURCHASE_RETURN\x10\x8c\x01\x12.\n" +
	")MAGIC_LINK_RESOURCE_TYPE_PURCHASE_PAYMENT\x10\x96\x01\x12*\n" +
	"%MAGIC_LINK_RESOURCE_TYPE_SUPPLY_OFFER\x10\xa0\x01\x12+\n" +
	"&MAGIC_LINK_RESOURCE_TYPE_SALES_ENQUIRY\x10\xc8\x01\x12-\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_SALES_QUOTATION\x10\xcd\x01\x12)\n" +
	"$MAGIC_LINK_RESOURCE_TYPE_SALES_ORDER\x10\xd2\x01\x12,\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_GOODS_DISPATCH\x10\xdc\x01\x12.\n" +
	")MAGIC_LINK_RESOURCE_TYPE_PROFORMA_INVOICE\x10\xe1\x01\x12+\n" +
	"&MAGIC_LINK_RESOURCE_TYPE_SALES_INVOICE\x10\xe6\x01\x12)\n" +
	"$MAGIC_LINK_RESOURCE_TYPE_CREDIT_NOTE\x10\xf0\x01\x12*\n" +
	"%MAGIC_LINK_RESOURCE_TYPE_SALES_RETURN\x10\xfa\x01\x12+\n" +
	"&MAGIC_LINK_RESOURCE_TYPE_SALES_RECEIPT\x10\x84\x02\x12(\n" +
	"#MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB\x10\xac\x02\x12<\n" +
	"7MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL\x10\xb6\x02\x12C\n" +
	">MAGIC_LINK_RESOURCE_TYPE_INWARD_JOB_FREE_ISSUE_MATERIAL_RETURN\x10\xc0\x02\x12)\n" +
	"$MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB\x10\x90\x03\x12=\n" +
	"8MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL\x10\x9a\x03\x12D\n" +
	"?MAGIC_LINK_RESOURCE_TYPE_OUTWARD_JOB_FREE_ISSUE_MATERIAL_RETURN\x10\xa4\x03\x12-\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_EQUATION_FAMILY\x10\xd8\x04\x123\n" +
	".MAGIC_LINK_RESOURCE_TYPE_EQUATION_SALES_BUNDLE\x10\xe2\x04\x121\n" +
	",MAGIC_LINK_RESOURCE_TYPE_EQUATION_WORK_ORDER\x10\xec\x04\x122\n" +
	"-MAGIC_LINK_RESOURCE_TYPE_EQUATION_REPLACEABLE\x10\xf6\x04\x12(\n" +
	"#MAGIC_LINK_RESOURCE_TYPE_WORK_ORDER\x10\xbc\x05\x12-\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_PLAN\x10\xc6\x05\x120\n" +
	"+MAGIC_LINK_RESOURCE_TYPE_REPLACEABLE_INDENT\x10\xa0\x06\x12-\n" +
	"(MAGIC_LINK_RESOURCE_TYPE_PURCHASE_INDENT\x10\xaa\x06\x12/\n" +
	"*MAGIC_LINK_RESOURCE_TYPE_PRODUCTION_INDENT\x10\xb4\x06\x12*\n" +
	"%MAGIC_LINK_RESOURCE_TYPE_ASSET_INDENT\x10\xbe\x06\x12,\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_STOCK_ISSUANCE\x10\x84\a\x12*\n" +
	"%MAGIC_LINK_RESOURCE_TYPE_STOCK_RETURN\x10\x8e\a\x12)\n" +
	"$MAGIC_LINK_RESOURCE_TYPE_STOCK_AUDIT\x10\x98\a\x12'\n" +
	"\"MAGIC_LINK_RESOURCE_TYPE_QC_SAMPLE\x10\xe8\a\x12'\n" +
	"\"MAGIC_LINK_RESOURCE_TYPE_COMPONENT\x10\xcc\b\x12%\n" +
	" MAGIC_LINK_RESOURCE_TYPE_PRODUCT\x10\xd6\b\x12'\n" +
	"\"MAGIC_LINK_RESOURCE_TYPE_FEEDSTOCK\x10\xe0\b\x12)\n" +
	"$MAGIC_LINK_RESOURCE_TYPE_MERCHANDISE\x10\xea\b\x12'\n" +
	"\"MAGIC_LINK_RESOURCE_TYPE_EQUIPMENT\x10\xf4\b\x12,\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_INFRASTRUCTURE\x10\xfe\b\x12(\n" +
	"#MAGIC_LINK_RESOURCE_TYPE_ATTENDANCE\x10\xb0\t\x12%\n" +
	" MAGIC_LINK_RESOURCE_TYPE_ABSENCE\x10\xba\t\x12%\n" +
	" MAGIC_LINK_RESOURCE_TYPE_ON_DUTY\x10\xc4\t\x12(\n" +
	"#MAGIC_LINK_RESOURCE_TYPE_VISITATION\x10\xce\t\x12%\n" +
	" MAGIC_LINK_RESOURCE_TYPE_EXPENSE\x10\xdc\v\x12,\n" +
	"'MAGIC_LINK_RESOURCE_TYPE_USER_SIGNATURE\x10\xc0\f*\xaa\x01\n" +
	"\x13MAGIC_LINK_SORT_KEY\x12&\n" +
	"\"MAGIC_LINK_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eMAGIC_LINK_SORT_KEY_CREATED_AT\x10\x01\x12#\n" +
	"\x1fMAGIC_LINK_SORT_KEY_MODIFIED_AT\x10\x02\x12\"\n" +
	"\x1eMAGIC_LINK_SORT_KEY_EXPIRES_AT\x10\n" +
	"2\xfa\b\n" +
	"\x11MagicLinksService\x12C\n" +
	"\x06Create\x12&.Scailo.MagicLinksServiceCreateRequest\x1a\x11.Scailo.MagicLink\x12C\n" +
	"\x06Update\x12&.Scailo.MagicLinksServiceUpdateRequest\x1a\x11.Scailo.MagicLink\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x121\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x11.Scailo.MagicLink\x127\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.MagicLink\x12H\n" +
	"\n" +
	"ViewByCode\x12'.Scailo.MagicLinkServiceSearchByCodeReq\x1a\x11.Scailo.MagicLink\x12>\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x16.Scailo.MagicLinksList\x127\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x16.Scailo.MagicLinksList\x12F\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x16.Scailo.MagicLinksList\x12]\n" +
	"\x12ViewWithPagination\x12&.Scailo.MagicLinksServicePaginationReq\x1a\x1f.Scailo.MagicLinkPaginationResp\x12I\n" +
	"\x0eViewAccessLogs\x12\x16.Scailo.IdentifierUUID\x1a\x1f.Scailo.MagicLinkAccessLogsList\x12J\n" +
	"\tSearchAll\x12%.Scailo.MagicLinksServiceSearchAllReq\x1a\x16.Scailo.MagicLinksList\x12D\n" +
	"\x06Filter\x12\".Scailo.MagicLinksServiceFilterReq\x1a\x16.Scailo.MagicLinksList\x12A\n" +
	"\x05Count\x12!.Scailo.MagicLinksServiceCountReq\x1a\x15.Scailo.CountResponse\x12I\n" +
	"\rDownloadAsCSV\x12\".Scailo.MagicLinksServiceFilterReq\x1a\x14.Scailo.StandardFileBg\n" +
	"\n" +
	"com.ScailoB\x15MagicLinksScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_magic_links_scailo_proto_rawDescOnce sync.Once
	file_magic_links_scailo_proto_rawDescData []byte
)

func file_magic_links_scailo_proto_rawDescGZIP() []byte {
	file_magic_links_scailo_proto_rawDescOnce.Do(func() {
		file_magic_links_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_magic_links_scailo_proto_rawDesc), len(file_magic_links_scailo_proto_rawDesc)))
	})
	return file_magic_links_scailo_proto_rawDescData
}

var file_magic_links_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_magic_links_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_magic_links_scailo_proto_goTypes = []any{
	(MAGIC_LINK_RESOURCE_TYPE)(0),                             // 0: Scailo.MAGIC_LINK_RESOURCE_TYPE
	(MAGIC_LINK_SORT_KEY)(0),                                  // 1: Scailo.MAGIC_LINK_SORT_KEY
	(*MagicLink)(nil),                                         // 2: Scailo.MagicLink
	(*MagicLinksList)(nil),                                    // 3: Scailo.MagicLinksList
	(*MagicLinkPaginationResp)(nil),                           // 4: Scailo.MagicLinkPaginationResp
	(*MagicLinksServiceCreateRequest)(nil),                    // 5: Scailo.MagicLinksServiceCreateRequest
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil), // 6: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*MagicLinksServiceUpdateRequest)(nil),                    // 7: Scailo.MagicLinksServiceUpdateRequest
	(*MagicLinksServicePaginationReq)(nil),                    // 8: Scailo.MagicLinksServicePaginationReq
	(*MagicLinksServiceFilterReq)(nil),                        // 9: Scailo.MagicLinksServiceFilterReq
	(*MagicLinksServiceCountReq)(nil),                         // 10: Scailo.MagicLinksServiceCountReq
	(*MagicLinksServiceSearchAllReq)(nil),                     // 11: Scailo.MagicLinksServiceSearchAllReq
	(*MagicLinkServiceSearchByCodeReq)(nil),                   // 12: Scailo.MagicLinkServiceSearchByCodeReq
	(*MagicLinkAccessLog)(nil),                                // 13: Scailo.MagicLinkAccessLog
	(*MagicLinkAccessLogsList)(nil),                           // 14: Scailo.MagicLinkAccessLogsList
	(*EmployeeMetadata)(nil),                                  // 15: Scailo.EmployeeMetadata
	(BOOL_FILTER)(0),                                          // 16: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                           // 17: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),                     // 18: Scailo.IdentifierUUIDWithUserComment
	(*Identifier)(nil),                                        // 19: Scailo.Identifier
	(*IdentifierUUID)(nil),                                    // 20: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                                   // 21: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                      // 22: Scailo.ActiveStatus
	(*IdentifierResponse)(nil),                                // 23: Scailo.IdentifierResponse
	(*CountResponse)(nil),                                     // 24: Scailo.CountResponse
	(*StandardFile)(nil),                                      // 25: Scailo.StandardFile
}
var file_magic_links_scailo_proto_depIdxs = []int32{
	15, // 0: Scailo.MagicLink.metadata:type_name -> Scailo.EmployeeMetadata
	0,  // 1: Scailo.MagicLink.resource_type:type_name -> Scailo.MAGIC_LINK_RESOURCE_TYPE
	2,  // 2: Scailo.MagicLinksList.list:type_name -> Scailo.MagicLink
	2,  // 3: Scailo.MagicLinkPaginationResp.payload:type_name -> Scailo.MagicLink
	0,  // 4: Scailo.MagicLinksServiceCreateRequest.resource_type:type_name -> Scailo.MAGIC_LINK_RESOURCE_TYPE
	16, // 5: Scailo.MagicLinksServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 6: Scailo.MagicLinksServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 7: Scailo.MagicLinksServicePaginationReq.sort_key:type_name -> Scailo.MAGIC_LINK_SORT_KEY
	16, // 8: Scailo.MagicLinksServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 9: Scailo.MagicLinksServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 10: Scailo.MagicLinksServiceFilterReq.sort_key:type_name -> Scailo.MAGIC_LINK_SORT_KEY
	0,  // 11: Scailo.MagicLinksServiceFilterReq.resource_type:type_name -> Scailo.MAGIC_LINK_RESOURCE_TYPE
	16, // 12: Scailo.MagicLinksServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	0,  // 13: Scailo.MagicLinksServiceCountReq.resource_type:type_name -> Scailo.MAGIC_LINK_RESOURCE_TYPE
	16, // 14: Scailo.MagicLinksServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 15: Scailo.MagicLinksServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 16: Scailo.MagicLinksServiceSearchAllReq.sort_key:type_name -> Scailo.MAGIC_LINK_SORT_KEY
	0,  // 17: Scailo.MagicLinksServiceSearchAllReq.resource_type:type_name -> Scailo.MAGIC_LINK_RESOURCE_TYPE
	15, // 18: Scailo.MagicLinkAccessLog.metadata:type_name -> Scailo.EmployeeMetadata
	13, // 19: Scailo.MagicLinkAccessLogsList.list:type_name -> Scailo.MagicLinkAccessLog
	5,  // 20: Scailo.MagicLinksService.Create:input_type -> Scailo.MagicLinksServiceCreateRequest
	7,  // 21: Scailo.MagicLinksService.Update:input_type -> Scailo.MagicLinksServiceUpdateRequest
	18, // 22: Scailo.MagicLinksService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	18, // 23: Scailo.MagicLinksService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 24: Scailo.MagicLinksService.ViewByID:input_type -> Scailo.Identifier
	20, // 25: Scailo.MagicLinksService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	12, // 26: Scailo.MagicLinksService.ViewByCode:input_type -> Scailo.MagicLinkServiceSearchByCodeReq
	21, // 27: Scailo.MagicLinksService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	22, // 28: Scailo.MagicLinksService.ViewAll:input_type -> Scailo.ActiveStatus
	20, // 29: Scailo.MagicLinksService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	8,  // 30: Scailo.MagicLinksService.ViewWithPagination:input_type -> Scailo.MagicLinksServicePaginationReq
	20, // 31: Scailo.MagicLinksService.ViewAccessLogs:input_type -> Scailo.IdentifierUUID
	11, // 32: Scailo.MagicLinksService.SearchAll:input_type -> Scailo.MagicLinksServiceSearchAllReq
	9,  // 33: Scailo.MagicLinksService.Filter:input_type -> Scailo.MagicLinksServiceFilterReq
	10, // 34: Scailo.MagicLinksService.Count:input_type -> Scailo.MagicLinksServiceCountReq
	9,  // 35: Scailo.MagicLinksService.DownloadAsCSV:input_type -> Scailo.MagicLinksServiceFilterReq
	2,  // 36: Scailo.MagicLinksService.Create:output_type -> Scailo.MagicLink
	2,  // 37: Scailo.MagicLinksService.Update:output_type -> Scailo.MagicLink
	23, // 38: Scailo.MagicLinksService.Discard:output_type -> Scailo.IdentifierResponse
	23, // 39: Scailo.MagicLinksService.Restore:output_type -> Scailo.IdentifierResponse
	2,  // 40: Scailo.MagicLinksService.ViewByID:output_type -> Scailo.MagicLink
	2,  // 41: Scailo.MagicLinksService.ViewByUUID:output_type -> Scailo.MagicLink
	2,  // 42: Scailo.MagicLinksService.ViewByCode:output_type -> Scailo.MagicLink
	3,  // 43: Scailo.MagicLinksService.ViewFromIDs:output_type -> Scailo.MagicLinksList
	3,  // 44: Scailo.MagicLinksService.ViewAll:output_type -> Scailo.MagicLinksList
	3,  // 45: Scailo.MagicLinksService.ViewAllForEntityUUID:output_type -> Scailo.MagicLinksList
	4,  // 46: Scailo.MagicLinksService.ViewWithPagination:output_type -> Scailo.MagicLinkPaginationResp
	14, // 47: Scailo.MagicLinksService.ViewAccessLogs:output_type -> Scailo.MagicLinkAccessLogsList
	3,  // 48: Scailo.MagicLinksService.SearchAll:output_type -> Scailo.MagicLinksList
	3,  // 49: Scailo.MagicLinksService.Filter:output_type -> Scailo.MagicLinksList
	24, // 50: Scailo.MagicLinksService.Count:output_type -> Scailo.CountResponse
	25, // 51: Scailo.MagicLinksService.DownloadAsCSV:output_type -> Scailo.StandardFile
	36, // [36:52] is the sub-list for method output_type
	20, // [20:36] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_magic_links_scailo_proto_init() }
func file_magic_links_scailo_proto_init() {
	if File_magic_links_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_magic_links_scailo_proto_rawDesc), len(file_magic_links_scailo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_magic_links_scailo_proto_goTypes,
		DependencyIndexes: file_magic_links_scailo_proto_depIdxs,
		EnumInfos:         file_magic_links_scailo_proto_enumTypes,
		MessageInfos:      file_magic_links_scailo_proto_msgTypes,
	}.Build()
	File_magic_links_scailo_proto = out.File
	file_magic_links_scailo_proto_goTypes = nil
	file_magic_links_scailo_proto_depIdxs = nil
}
