// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: vendor_streams.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the lifecycle status of each vendor stream
type VENDOR_STREAM_LIFECYCLE int32

const (
	// Used only in filters
	VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED VENDOR_STREAM_LIFECYCLE = 0
	// Denotes that the vendor stream is open
	VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_OPEN VENDOR_STREAM_LIFECYCLE = 1
	// Denotes that the vendor stream has completed
	VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_COMPLETED VENDOR_STREAM_LIFECYCLE = 2
	// Denotes that the vendor stream has been cancelled
	VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_CANCELLED VENDOR_STREAM_LIFECYCLE = 3
)

// Enum value maps for VENDOR_STREAM_LIFECYCLE.
var (
	VENDOR_STREAM_LIFECYCLE_name = map[int32]string{
		0: "VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED",
		1: "VENDOR_STREAM_LIFECYCLE_OPEN",
		2: "VENDOR_STREAM_LIFECYCLE_COMPLETED",
		3: "VENDOR_STREAM_LIFECYCLE_CANCELLED",
	}
	VENDOR_STREAM_LIFECYCLE_value = map[string]int32{
		"VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED": 0,
		"VENDOR_STREAM_LIFECYCLE_OPEN":            1,
		"VENDOR_STREAM_LIFECYCLE_COMPLETED":       2,
		"VENDOR_STREAM_LIFECYCLE_CANCELLED":       3,
	}
)

func (x VENDOR_STREAM_LIFECYCLE) Enum() *VENDOR_STREAM_LIFECYCLE {
	p := new(VENDOR_STREAM_LIFECYCLE)
	*p = x
	return p
}

func (x VENDOR_STREAM_LIFECYCLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VENDOR_STREAM_LIFECYCLE) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_streams_scailo_proto_enumTypes[0].Descriptor()
}

func (VENDOR_STREAM_LIFECYCLE) Type() protoreflect.EnumType {
	return &file_vendor_streams_scailo_proto_enumTypes[0]
}

func (x VENDOR_STREAM_LIFECYCLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VENDOR_STREAM_LIFECYCLE.Descriptor instead.
func (VENDOR_STREAM_LIFECYCLE) EnumDescriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available vendor stream references
type VENDOR_STREAM_REF_FROM int32

const (
	// Used only in filters
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED VENDOR_STREAM_REF_FROM = 0
	// Denotes that the reference is from a purchase order
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_PURCHASE_ORDER VENDOR_STREAM_REF_FROM = 1
	// Denotes that the reference is from a goods receipt
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_GOODS_RECEIPT VENDOR_STREAM_REF_FROM = 10
	// Denotes that the reference is from a vendor invoice
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_VENDOR_INVOICE VENDOR_STREAM_REF_FROM = 11
	// Denotes that the reference is from a purchase return
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_PURCHASE_RETURN VENDOR_STREAM_REF_FROM = 20
	// Denotes that the reference is from a debit note
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_DEBIT_NOTE VENDOR_STREAM_REF_FROM = 21
	// Denotes that the reference is from a purchase payment
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_PURCHASE_PAYMENT VENDOR_STREAM_REF_FROM = 30
	// Denotes that the reference is from a supply offer
	VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_SUPPLY_OFFER VENDOR_STREAM_REF_FROM = 40
)

// Enum value maps for VENDOR_STREAM_REF_FROM.
var (
	VENDOR_STREAM_REF_FROM_name = map[int32]string{
		0:  "VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED",
		1:  "VENDOR_STREAM_REF_FROM_PURCHASE_ORDER",
		10: "VENDOR_STREAM_REF_FROM_GOODS_RECEIPT",
		11: "VENDOR_STREAM_REF_FROM_VENDOR_INVOICE",
		20: "VENDOR_STREAM_REF_FROM_PURCHASE_RETURN",
		21: "VENDOR_STREAM_REF_FROM_DEBIT_NOTE",
		30: "VENDOR_STREAM_REF_FROM_PURCHASE_PAYMENT",
		40: "VENDOR_STREAM_REF_FROM_SUPPLY_OFFER",
	}
	VENDOR_STREAM_REF_FROM_value = map[string]int32{
		"VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED":  0,
		"VENDOR_STREAM_REF_FROM_PURCHASE_ORDER":   1,
		"VENDOR_STREAM_REF_FROM_GOODS_RECEIPT":    10,
		"VENDOR_STREAM_REF_FROM_VENDOR_INVOICE":   11,
		"VENDOR_STREAM_REF_FROM_PURCHASE_RETURN":  20,
		"VENDOR_STREAM_REF_FROM_DEBIT_NOTE":       21,
		"VENDOR_STREAM_REF_FROM_PURCHASE_PAYMENT": 30,
		"VENDOR_STREAM_REF_FROM_SUPPLY_OFFER":     40,
	}
)

func (x VENDOR_STREAM_REF_FROM) Enum() *VENDOR_STREAM_REF_FROM {
	p := new(VENDOR_STREAM_REF_FROM)
	*p = x
	return p
}

func (x VENDOR_STREAM_REF_FROM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VENDOR_STREAM_REF_FROM) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_streams_scailo_proto_enumTypes[1].Descriptor()
}

func (VENDOR_STREAM_REF_FROM) Type() protoreflect.EnumType {
	return &file_vendor_streams_scailo_proto_enumTypes[1]
}

func (x VENDOR_STREAM_REF_FROM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VENDOR_STREAM_REF_FROM.Descriptor instead.
func (VENDOR_STREAM_REF_FROM) EnumDescriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the available sort keys
type VENDOR_STREAM_SORT_KEY int32

const (
	// Fetch ordered results by id
	VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED VENDOR_STREAM_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_CREATED_AT VENDOR_STREAM_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_MODIFIED_AT VENDOR_STREAM_SORT_KEY = 2
	// Fetch ordered results by the approver's completed on timestamp
	VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_COMPLETED_ON VENDOR_STREAM_SORT_KEY = 6
	// Fetch ordered results by the title
	VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_TITLE VENDOR_STREAM_SORT_KEY = 10
)

// Enum value maps for VENDOR_STREAM_SORT_KEY.
var (
	VENDOR_STREAM_SORT_KEY_name = map[int32]string{
		0:  "VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED",
		1:  "VENDOR_STREAM_SORT_KEY_CREATED_AT",
		2:  "VENDOR_STREAM_SORT_KEY_MODIFIED_AT",
		6:  "VENDOR_STREAM_SORT_KEY_COMPLETED_ON",
		10: "VENDOR_STREAM_SORT_KEY_TITLE",
	}
	VENDOR_STREAM_SORT_KEY_value = map[string]int32{
		"VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED": 0,
		"VENDOR_STREAM_SORT_KEY_CREATED_AT":     1,
		"VENDOR_STREAM_SORT_KEY_MODIFIED_AT":    2,
		"VENDOR_STREAM_SORT_KEY_COMPLETED_ON":   6,
		"VENDOR_STREAM_SORT_KEY_TITLE":          10,
	}
)

func (x VENDOR_STREAM_SORT_KEY) Enum() *VENDOR_STREAM_SORT_KEY {
	p := new(VENDOR_STREAM_SORT_KEY)
	*p = x
	return p
}

func (x VENDOR_STREAM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VENDOR_STREAM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_streams_scailo_proto_enumTypes[2].Descriptor()
}

func (VENDOR_STREAM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_vendor_streams_scailo_proto_enumTypes[2]
}

func (x VENDOR_STREAM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VENDOR_STREAM_SORT_KEY.Descriptor instead.
func (VENDOR_STREAM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the available message types for a vendor stream message
type VENDOR_STREAM_MESSAGE_TYPE int32

const (
	// Used only for filters
	VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED VENDOR_STREAM_MESSAGE_TYPE = 0
	// Denotes that the message was sent by a user
	VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_USER VENDOR_STREAM_MESSAGE_TYPE = 1
	// Denotes that the message was sent by the system
	VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_SYSTEM VENDOR_STREAM_MESSAGE_TYPE = 2
)

// Enum value maps for VENDOR_STREAM_MESSAGE_TYPE.
var (
	VENDOR_STREAM_MESSAGE_TYPE_name = map[int32]string{
		0: "VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED",
		1: "VENDOR_STREAM_MESSAGE_TYPE_USER",
		2: "VENDOR_STREAM_MESSAGE_TYPE_SYSTEM",
	}
	VENDOR_STREAM_MESSAGE_TYPE_value = map[string]int32{
		"VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED": 0,
		"VENDOR_STREAM_MESSAGE_TYPE_USER":            1,
		"VENDOR_STREAM_MESSAGE_TYPE_SYSTEM":          2,
	}
)

func (x VENDOR_STREAM_MESSAGE_TYPE) Enum() *VENDOR_STREAM_MESSAGE_TYPE {
	p := new(VENDOR_STREAM_MESSAGE_TYPE)
	*p = x
	return p
}

func (x VENDOR_STREAM_MESSAGE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VENDOR_STREAM_MESSAGE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_streams_scailo_proto_enumTypes[3].Descriptor()
}

func (VENDOR_STREAM_MESSAGE_TYPE) Type() protoreflect.EnumType {
	return &file_vendor_streams_scailo_proto_enumTypes[3]
}

func (x VENDOR_STREAM_MESSAGE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VENDOR_STREAM_MESSAGE_TYPE.Descriptor instead.
func (VENDOR_STREAM_MESSAGE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{3}
}

// Describes the available sort keys
type VENDOR_STREAM_MESSAGE_SORT_KEY int32

const (
	// Fetch ordered results by id
	VENDOR_STREAM_MESSAGE_SORT_KEY_VENDOR_STREAM_MESSAGE_SORT_KEY_ID_UNSPECIFIED VENDOR_STREAM_MESSAGE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	VENDOR_STREAM_MESSAGE_SORT_KEY_VENDOR_STREAM_MESSAGE_SORT_KEY_CREATED_AT VENDOR_STREAM_MESSAGE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	VENDOR_STREAM_MESSAGE_SORT_KEY_VENDOR_STREAM_MESSAGE_SORT_KEY_MODIFIED_AT VENDOR_STREAM_MESSAGE_SORT_KEY = 2
)

// Enum value maps for VENDOR_STREAM_MESSAGE_SORT_KEY.
var (
	VENDOR_STREAM_MESSAGE_SORT_KEY_name = map[int32]string{
		0: "VENDOR_STREAM_MESSAGE_SORT_KEY_ID_UNSPECIFIED",
		1: "VENDOR_STREAM_MESSAGE_SORT_KEY_CREATED_AT",
		2: "VENDOR_STREAM_MESSAGE_SORT_KEY_MODIFIED_AT",
	}
	VENDOR_STREAM_MESSAGE_SORT_KEY_value = map[string]int32{
		"VENDOR_STREAM_MESSAGE_SORT_KEY_ID_UNSPECIFIED": 0,
		"VENDOR_STREAM_MESSAGE_SORT_KEY_CREATED_AT":     1,
		"VENDOR_STREAM_MESSAGE_SORT_KEY_MODIFIED_AT":    2,
	}
)

func (x VENDOR_STREAM_MESSAGE_SORT_KEY) Enum() *VENDOR_STREAM_MESSAGE_SORT_KEY {
	p := new(VENDOR_STREAM_MESSAGE_SORT_KEY)
	*p = x
	return p
}

func (x VENDOR_STREAM_MESSAGE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VENDOR_STREAM_MESSAGE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_vendor_streams_scailo_proto_enumTypes[4].Descriptor()
}

func (VENDOR_STREAM_MESSAGE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_vendor_streams_scailo_proto_enumTypes[4]
}

func (x VENDOR_STREAM_MESSAGE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VENDOR_STREAM_MESSAGE_SORT_KEY.Descriptor instead.
func (VENDOR_STREAM_MESSAGE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{4}
}

// Describes each parameter that's part of the logbook (does not include historical data of the object) with the operation being an vendor stream lifecycle status
type LogbookLogVendorStreamLC struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the resource
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Stores if the resource is active
	IsActive bool `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Stores the timestamp of when this resource was created
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The UUID of the resource
	RefUuid string `protobuf:"bytes,10,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// The operation that was performed
	Operation VENDOR_STREAM_LIFECYCLE `protobuf:"varint,11,opt,name=operation,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"operation,omitempty"`
	// The username of the user who performed this operation
	Username string `protobuf:"bytes,12,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the person who made this entry
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the user who made this entry
	UserId uint64 `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The comment generated by the application
	AppComment string `protobuf:"bytes,15,opt,name=app_comment,json=appComment,proto3" json:"app_comment,omitempty"`
	// The comment entered by the user
	UserComment   string `protobuf:"bytes,16,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogbookLogVendorStreamLC) Reset() {
	*x = LogbookLogVendorStreamLC{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogbookLogVendorStreamLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogbookLogVendorStreamLC) ProtoMessage() {}

func (x *LogbookLogVendorStreamLC) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogbookLogVendorStreamLC.ProtoReflect.Descriptor instead.
func (*LogbookLogVendorStreamLC) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *LogbookLogVendorStreamLC) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogbookLogVendorStreamLC) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LogbookLogVendorStreamLC) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogbookLogVendorStreamLC) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *LogbookLogVendorStreamLC) GetOperation() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Operation
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *LogbookLogVendorStreamLC) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LogbookLogVendorStreamLC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogbookLogVendorStreamLC) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LogbookLogVendorStreamLC) GetAppComment() string {
	if x != nil {
		return x.AppComment
	}
	return ""
}

func (x *LogbookLogVendorStreamLC) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

// Describes the parameters necessary to create a record
type VendorStreamsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,7,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The title of the vendor stream
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The ID of the vendor
	VendorId uint64 `protobuf:"varint,11,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// The associated reference
	RefFrom VENDOR_STREAM_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.VENDOR_STREAM_REF_FROM" json:"ref_from,omitempty"`
	// The associated reference ID
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Assign self (the user creating the stream) as an internal subscriber
	AssignSelfAsInternalSubscriber bool `protobuf:"varint,80,opt,name=assign_self_as_internal_subscriber,json=assignSelfAsInternalSubscriber,proto3" json:"assign_self_as_internal_subscriber,omitempty"`
	// Assign self (the user creating the stream) as a vendor subscriber (this would allow vendor users to also create a stream)
	AssignSelfAsVendorSubscriber bool `protobuf:"varint,81,opt,name=assign_self_as_vendor_subscriber,json=assignSelfAsVendorSubscriber,proto3" json:"assign_self_as_vendor_subscriber,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *VendorStreamsServiceCreateRequest) Reset() {
	*x = VendorStreamsServiceCreateRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceCreateRequest) ProtoMessage() {}

func (x *VendorStreamsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *VendorStreamsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *VendorStreamsServiceCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VendorStreamsServiceCreateRequest) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *VendorStreamsServiceCreateRequest) GetRefFrom() VENDOR_STREAM_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *VendorStreamsServiceCreateRequest) GetAssignSelfAsInternalSubscriber() bool {
	if x != nil {
		return x.AssignSelfAsInternalSubscriber
	}
	return false
}

func (x *VendorStreamsServiceCreateRequest) GetAssignSelfAsVendorSubscriber() bool {
	if x != nil {
		return x.AssignSelfAsVendorSubscriber
	}
	return false
}

// Describes the parameters necessary to update a record
type VendorStreamsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,7,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The title of the vendor stream
	Title         string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServiceUpdateRequest) Reset() {
	*x = VendorStreamsServiceUpdateRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceUpdateRequest) ProtoMessage() {}

func (x *VendorStreamsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *VendorStreamsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VendorStreamsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *VendorStreamsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *VendorStreamsServiceUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// Describes the parameters that are part of a standard response
type VendorStream struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this vendor stream
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The status of this vendor stream
	Status VENDOR_STREAM_LIFECYCLE `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"status,omitempty"`
	// Stores the logs of every operation performed on this vendor stream
	Logs []*LogbookLogVendorStreamLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this vendor stream was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,7,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated vault folder UUID (will be empty if vault_folder_id is 0)
	VaultFolderUuid string `protobuf:"bytes,107,opt,name=vault_folder_uuid,json=vaultFolderUuid,proto3" json:"vault_folder_uuid,omitempty"`
	// The title of the vendor stream
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The ID of the vendor
	VendorId uint64 `protobuf:"varint,11,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// The associated reference
	RefFrom VENDOR_STREAM_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.VENDOR_STREAM_REF_FROM" json:"ref_from,omitempty"`
	// The associated reference ID
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated reference UUID
	RefUuid string `protobuf:"bytes,14,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// Stores the internal reference that is automatically generated
	InternalRef string `protobuf:"bytes,50,opt,name=internal_ref,json=internalRef,proto3" json:"internal_ref,omitempty"`
	// Stores the number of unread messages in this stream for the specific user (on the basis of the auth token)
	UnreadCount uint64 `protobuf:"varint,60,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// Stores the total number of messages in the stream
	MessageCount uint64 `protobuf:"varint,61,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	// Stores the username of the user who added the last message
	LastMessageBy string `protobuf:"bytes,62,opt,name=last_message_by,json=lastMessageBy,proto3" json:"last_message_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStream) Reset() {
	*x = VendorStream{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStream) ProtoMessage() {}

func (x *VendorStream) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStream.ProtoReflect.Descriptor instead.
func (*VendorStream) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *VendorStream) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStream) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VendorStream) GetStatus() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *VendorStream) GetLogs() []*LogbookLogVendorStreamLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *VendorStream) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *VendorStream) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *VendorStream) GetVaultFolderUuid() string {
	if x != nil {
		return x.VaultFolderUuid
	}
	return ""
}

func (x *VendorStream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VendorStream) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *VendorStream) GetRefFrom() VENDOR_STREAM_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED
}

func (x *VendorStream) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *VendorStream) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *VendorStream) GetInternalRef() string {
	if x != nil {
		return x.InternalRef
	}
	return ""
}

func (x *VendorStream) GetUnreadCount() uint64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *VendorStream) GetMessageCount() uint64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

func (x *VendorStream) GetLastMessageBy() string {
	if x != nil {
		return x.LastMessageBy
	}
	return ""
}

// Describes the message consisting of the list of records
type VendorStreamsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*VendorStream `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsList) Reset() {
	*x = VendorStreamsList{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsList) ProtoMessage() {}

func (x *VendorStreamsList) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsList.ProtoReflect.Descriptor instead.
func (*VendorStreamsList) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *VendorStreamsList) GetList() []*VendorStream {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type VendorStreamsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey VENDOR_STREAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.VENDOR_STREAM_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this vendor stream
	Status        VENDOR_STREAM_LIFECYCLE `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServicePaginationReq) Reset() {
	*x = VendorStreamsServicePaginationReq{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServicePaginationReq) ProtoMessage() {}

func (x *VendorStreamsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*VendorStreamsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *VendorStreamsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *VendorStreamsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *VendorStreamsServicePaginationReq) GetSortKey() VENDOR_STREAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *VendorStreamsServicePaginationReq) GetStatus() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type VendorStreamsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*VendorStream `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServicePaginationResponse) Reset() {
	*x = VendorStreamsServicePaginationResponse{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServicePaginationResponse) ProtoMessage() {}

func (x *VendorStreamsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*VendorStreamsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *VendorStreamsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *VendorStreamsServicePaginationResponse) GetPayload() []*VendorStream {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type VendorStreamsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey VENDOR_STREAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.VENDOR_STREAM_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this vendor stream
	Status VENDOR_STREAM_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// Stores the internal reference that is automatically generated
	InternalRef string `protobuf:"bytes,18,opt,name=internal_ref,json=internalRef,proto3" json:"internal_ref,omitempty"`
	// The title of the vendor stream
	Title string `protobuf:"bytes,30,opt,name=title,proto3" json:"title,omitempty"`
	// ------------------------------------------------
	// Filter by the associated vendor ID
	VendorId uint64 `protobuf:"varint,40,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// Filter by the associated reference
	RefFrom VENDOR_STREAM_REF_FROM `protobuf:"varint,41,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.VENDOR_STREAM_REF_FROM" json:"ref_from,omitempty"`
	// Filter by the associated reference ID
	RefId uint64 `protobuf:"varint,42,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"` // ------------------------------------------------
	// Filter by the associated internal subscriber user ID
	InternalSubscriberUserId uint64 `protobuf:"varint,60,opt,name=internal_subscriber_user_id,json=internalSubscriberUserId,proto3" json:"internal_subscriber_user_id,omitempty"`
	// Filter by the associated vendor subscriber user ID
	VendorSubscriberUserId uint64 `protobuf:"varint,61,opt,name=vendor_subscriber_user_id,json=vendorSubscriberUserId,proto3" json:"vendor_subscriber_user_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VendorStreamsServiceFilterReq) Reset() {
	*x = VendorStreamsServiceFilterReq{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceFilterReq) ProtoMessage() {}

func (x *VendorStreamsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *VendorStreamsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *VendorStreamsServiceFilterReq) GetSortKey() VENDOR_STREAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *VendorStreamsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamsServiceFilterReq) GetStatus() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetInternalRef() string {
	if x != nil {
		return x.InternalRef
	}
	return ""
}

func (x *VendorStreamsServiceFilterReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VendorStreamsServiceFilterReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetRefFrom() VENDOR_STREAM_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceFilterReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetInternalSubscriberUserId() uint64 {
	if x != nil {
		return x.InternalSubscriberUserId
	}
	return 0
}

func (x *VendorStreamsServiceFilterReq) GetVendorSubscriberUserId() uint64 {
	if x != nil {
		return x.VendorSubscriberUserId
	}
	return 0
}

// Describes the base request payload of a count search
type VendorStreamsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this vendor stream
	Status VENDOR_STREAM_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// Stores the internal reference that is automatically generated
	InternalRef string `protobuf:"bytes,18,opt,name=internal_ref,json=internalRef,proto3" json:"internal_ref,omitempty"`
	// The title of the vendor stream
	Title string `protobuf:"bytes,30,opt,name=title,proto3" json:"title,omitempty"`
	// ------------------------------------------------
	// Filter by the associated vendor ID
	VendorId uint64 `protobuf:"varint,40,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// Filter by the associated reference
	RefFrom VENDOR_STREAM_REF_FROM `protobuf:"varint,41,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.VENDOR_STREAM_REF_FROM" json:"ref_from,omitempty"`
	// Filter by the associated reference ID
	RefId uint64 `protobuf:"varint,42,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"` // ------------------------------------------------
	// Filter by the associated internal subscriber user ID
	InternalSubscriberUserId uint64 `protobuf:"varint,60,opt,name=internal_subscriber_user_id,json=internalSubscriberUserId,proto3" json:"internal_subscriber_user_id,omitempty"`
	// Filter by the associated vendor subscriber user ID
	VendorSubscriberUserId uint64 `protobuf:"varint,61,opt,name=vendor_subscriber_user_id,json=vendorSubscriberUserId,proto3" json:"vendor_subscriber_user_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VendorStreamsServiceCountReq) Reset() {
	*x = VendorStreamsServiceCountReq{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceCountReq) ProtoMessage() {}

func (x *VendorStreamsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceCountReq.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *VendorStreamsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamsServiceCountReq) GetStatus() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetInternalRef() string {
	if x != nil {
		return x.InternalRef
	}
	return ""
}

func (x *VendorStreamsServiceCountReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VendorStreamsServiceCountReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetRefFrom() VENDOR_STREAM_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return VENDOR_STREAM_REF_FROM_VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceCountReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetInternalSubscriberUserId() uint64 {
	if x != nil {
		return x.InternalSubscriberUserId
	}
	return 0
}

func (x *VendorStreamsServiceCountReq) GetVendorSubscriberUserId() uint64 {
	if x != nil {
		return x.VendorSubscriberUserId
	}
	return 0
}

// Describes the request payload for performing a generic search operation on records
type VendorStreamsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey VENDOR_STREAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.VENDOR_STREAM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status VENDOR_STREAM_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.VENDOR_STREAM_LIFECYCLE" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// ------------------------------------------------
	// Filter by the associated vendor ID
	VendorId uint64 `protobuf:"varint,40,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"` // ------------------------------------------------
	// Filter by the associated internal subscriber user ID
	InternalSubscriberUserId uint64 `protobuf:"varint,60,opt,name=internal_subscriber_user_id,json=internalSubscriberUserId,proto3" json:"internal_subscriber_user_id,omitempty"`
	// Filter by the associated vendor subscriber user ID
	VendorSubscriberUserId uint64 `protobuf:"varint,61,opt,name=vendor_subscriber_user_id,json=vendorSubscriberUserId,proto3" json:"vendor_subscriber_user_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VendorStreamsServiceSearchAllReq) Reset() {
	*x = VendorStreamsServiceSearchAllReq{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceSearchAllReq) ProtoMessage() {}

func (x *VendorStreamsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *VendorStreamsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *VendorStreamsServiceSearchAllReq) GetSortKey() VENDOR_STREAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return VENDOR_STREAM_SORT_KEY_VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *VendorStreamsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamsServiceSearchAllReq) GetStatus() VENDOR_STREAM_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return VENDOR_STREAM_LIFECYCLE_VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *VendorStreamsServiceSearchAllReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *VendorStreamsServiceSearchAllReq) GetInternalSubscriberUserId() uint64 {
	if x != nil {
		return x.InternalSubscriberUserId
	}
	return 0
}

func (x *VendorStreamsServiceSearchAllReq) GetVendorSubscriberUserId() uint64 {
	if x != nil {
		return x.VendorSubscriberUserId
	}
	return 0
}

// Describes the parameters required to add a message to an vendor stream
type VendorStreamsServiceMessageCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the message
	MessageType VENDOR_STREAM_MESSAGE_TYPE `protobuf:"varint,8,opt,name=message_type,json=messageType,proto3,enum=Scailo.VENDOR_STREAM_MESSAGE_TYPE" json:"message_type,omitempty"`
	// Stores the vendor stream UUID
	VendorStreamUuid string `protobuf:"bytes,10,opt,name=vendor_stream_uuid,json=vendorStreamUuid,proto3" json:"vendor_stream_uuid,omitempty"`
	// Stores the optional UUID of the message that this message is a response to
	ResponseToMessageUuid string `protobuf:"bytes,11,opt,name=response_to_message_uuid,json=responseToMessageUuid,proto3" json:"response_to_message_uuid,omitempty"`
	// The content of the message
	Content       string `protobuf:"bytes,20,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServiceMessageCreateRequest) Reset() {
	*x = VendorStreamsServiceMessageCreateRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceMessageCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceMessageCreateRequest) ProtoMessage() {}

func (x *VendorStreamsServiceMessageCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceMessageCreateRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceMessageCreateRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *VendorStreamsServiceMessageCreateRequest) GetMessageType() VENDOR_STREAM_MESSAGE_TYPE {
	if x != nil {
		return x.MessageType
	}
	return VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED
}

func (x *VendorStreamsServiceMessageCreateRequest) GetVendorStreamUuid() string {
	if x != nil {
		return x.VendorStreamUuid
	}
	return ""
}

func (x *VendorStreamsServiceMessageCreateRequest) GetResponseToMessageUuid() string {
	if x != nil {
		return x.ResponseToMessageUuid
	}
	return ""
}

func (x *VendorStreamsServiceMessageCreateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Describes the parameters that constitute a message associated to an vendor stream
type VendorStreamMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this vendor stream
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The type of the message
	MessageType VENDOR_STREAM_MESSAGE_TYPE `protobuf:"varint,8,opt,name=message_type,json=messageType,proto3,enum=Scailo.VENDOR_STREAM_MESSAGE_TYPE" json:"message_type,omitempty"`
	// Stores the vendor stream ID
	VendorStreamId uint64 `protobuf:"varint,10,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the optional UUID of the message that this message is a response to
	ResponseToMessageUuid string `protobuf:"bytes,11,opt,name=response_to_message_uuid,json=responseToMessageUuid,proto3" json:"response_to_message_uuid,omitempty"`
	// The content of the message
	Content string `protobuf:"bytes,20,opt,name=content,proto3" json:"content,omitempty"`
	// Stores the internal reference that is automatically generated
	InternalRef string `protobuf:"bytes,50,opt,name=internal_ref,json=internalRef,proto3" json:"internal_ref,omitempty"`
	// Stores if the message has been read by the user
	IsRead        bool `protobuf:"varint,60,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamMessage) Reset() {
	*x = VendorStreamMessage{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamMessage) ProtoMessage() {}

func (x *VendorStreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamMessage.ProtoReflect.Descriptor instead.
func (*VendorStreamMessage) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *VendorStreamMessage) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamMessage) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VendorStreamMessage) GetMessageType() VENDOR_STREAM_MESSAGE_TYPE {
	if x != nil {
		return x.MessageType
	}
	return VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED
}

func (x *VendorStreamMessage) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamMessage) GetResponseToMessageUuid() string {
	if x != nil {
		return x.ResponseToMessageUuid
	}
	return ""
}

func (x *VendorStreamMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *VendorStreamMessage) GetInternalRef() string {
	if x != nil {
		return x.InternalRef
	}
	return ""
}

func (x *VendorStreamMessage) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

// Describes the message consisting of the list of vendor stream messages
type VendorStreamMessagesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*VendorStreamMessage `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamMessagesList) Reset() {
	*x = VendorStreamMessagesList{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamMessagesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamMessagesList) ProtoMessage() {}

func (x *VendorStreamMessagesList) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamMessagesList.ProtoReflect.Descriptor instead.
func (*VendorStreamMessagesList) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *VendorStreamMessagesList) GetList() []*VendorStreamMessage {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the request payload to retrieve messages.
type VendorStreamMessagesSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey VENDOR_STREAM_MESSAGE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.VENDOR_STREAM_MESSAGE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The type of the message
	MessageType VENDOR_STREAM_MESSAGE_TYPE `protobuf:"varint,8,opt,name=message_type,json=messageType,proto3,enum=Scailo.VENDOR_STREAM_MESSAGE_TYPE" json:"message_type,omitempty"`
	// The ID of the vendor stream
	VendorStreamId uint64 `protobuf:"varint,20,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the optional UUID of the message that this message is a response to
	ResponseToMessageUuid string `protobuf:"bytes,30,opt,name=response_to_message_uuid,json=responseToMessageUuid,proto3" json:"response_to_message_uuid,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamMessagesSearchRequest) Reset() {
	*x = VendorStreamMessagesSearchRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamMessagesSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamMessagesSearchRequest) ProtoMessage() {}

func (x *VendorStreamMessagesSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamMessagesSearchRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamMessagesSearchRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *VendorStreamMessagesSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *VendorStreamMessagesSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamMessagesSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamMessagesSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *VendorStreamMessagesSearchRequest) GetSortKey() VENDOR_STREAM_MESSAGE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return VENDOR_STREAM_MESSAGE_SORT_KEY_VENDOR_STREAM_MESSAGE_SORT_KEY_ID_UNSPECIFIED
}

func (x *VendorStreamMessagesSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamMessagesSearchRequest) GetMessageType() VENDOR_STREAM_MESSAGE_TYPE {
	if x != nil {
		return x.MessageType
	}
	return VENDOR_STREAM_MESSAGE_TYPE_VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED
}

func (x *VendorStreamMessagesSearchRequest) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamMessagesSearchRequest) GetResponseToMessageUuid() string {
	if x != nil {
		return x.ResponseToMessageUuid
	}
	return ""
}

func (x *VendorStreamMessagesSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination messages request
type VendorStreamsServicePaginatedMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*VendorStreamMessage `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServicePaginatedMessagesResponse) Reset() {
	*x = VendorStreamsServicePaginatedMessagesResponse{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServicePaginatedMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServicePaginatedMessagesResponse) ProtoMessage() {}

func (x *VendorStreamsServicePaginatedMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServicePaginatedMessagesResponse.ProtoReflect.Descriptor instead.
func (*VendorStreamsServicePaginatedMessagesResponse) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *VendorStreamsServicePaginatedMessagesResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *VendorStreamsServicePaginatedMessagesResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *VendorStreamsServicePaginatedMessagesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *VendorStreamsServicePaginatedMessagesResponse) GetPayload() []*VendorStreamMessage {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the parameters that constitute a message receipt
type VendorStreamMessageReceipt struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this vendor stream
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the vendor stream message UUID
	VendorStreamMessageUuid string `protobuf:"bytes,10,opt,name=vendor_stream_message_uuid,json=vendorStreamMessageUuid,proto3" json:"vendor_stream_message_uuid,omitempty"`
	// The ID of the user who read this
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Stores if the message has been read by the user
	IsRead bool `protobuf:"varint,12,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	// Stores the timestamp of when the message was read
	ReadAt        uint64 `protobuf:"varint,13,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamMessageReceipt) Reset() {
	*x = VendorStreamMessageReceipt{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamMessageReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamMessageReceipt) ProtoMessage() {}

func (x *VendorStreamMessageReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamMessageReceipt.ProtoReflect.Descriptor instead.
func (*VendorStreamMessageReceipt) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *VendorStreamMessageReceipt) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamMessageReceipt) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VendorStreamMessageReceipt) GetVendorStreamMessageUuid() string {
	if x != nil {
		return x.VendorStreamMessageUuid
	}
	return ""
}

func (x *VendorStreamMessageReceipt) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VendorStreamMessageReceipt) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *VendorStreamMessageReceipt) GetReadAt() uint64 {
	if x != nil {
		return x.ReadAt
	}
	return 0
}

// Describes the message consisting of the list of vendor stream message receipts
type VendorStreamMessageReceiptsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*VendorStreamMessageReceipt `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamMessageReceiptsList) Reset() {
	*x = VendorStreamMessageReceiptsList{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamMessageReceiptsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamMessageReceiptsList) ProtoMessage() {}

func (x *VendorStreamMessageReceiptsList) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamMessageReceiptsList.ProtoReflect.Descriptor instead.
func (*VendorStreamMessageReceiptsList) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *VendorStreamMessageReceiptsList) GetList() []*VendorStreamMessageReceipt {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to create an internal subscriber
type VendorStreamsServiceInternalSubscriberCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the vendor stream ID
	VendorStreamId uint64 `protobuf:"varint,10,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the user ID
	UserId        uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) Reset() {
	*x = VendorStreamsServiceInternalSubscriberCreateRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceInternalSubscriberCreateRequest) ProtoMessage() {}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceInternalSubscriberCreateRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceInternalSubscriberCreateRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamsServiceInternalSubscriberCreateRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the parameters that constitute an internal subscriber
type VendorStreamInternalSubscriber struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this vendor stream internal subscriber
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the vendor stream ID
	VendorStreamId uint64 `protobuf:"varint,10,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the user ID
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Stores the user UUID (determined by the user_id)
	UserUuid      string `protobuf:"bytes,30,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamInternalSubscriber) Reset() {
	*x = VendorStreamInternalSubscriber{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamInternalSubscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamInternalSubscriber) ProtoMessage() {}

func (x *VendorStreamInternalSubscriber) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamInternalSubscriber.ProtoReflect.Descriptor instead.
func (*VendorStreamInternalSubscriber) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *VendorStreamInternalSubscriber) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamInternalSubscriber) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VendorStreamInternalSubscriber) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamInternalSubscriber) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamInternalSubscriber) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VendorStreamInternalSubscriber) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// Describes the message consisting of the list of internal subscribers
type VendorStreamInternalSubscribersList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*VendorStreamInternalSubscriber `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamInternalSubscribersList) Reset() {
	*x = VendorStreamInternalSubscribersList{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamInternalSubscribersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamInternalSubscribersList) ProtoMessage() {}

func (x *VendorStreamInternalSubscribersList) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamInternalSubscribersList.ProtoReflect.Descriptor instead.
func (*VendorStreamInternalSubscribersList) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{19}
}

func (x *VendorStreamInternalSubscribersList) GetList() []*VendorStreamInternalSubscriber {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the data model to handle importing of internal subscribers from the given identifier representing a team or a department
type VendorStreamsServiceImportInternalSubscribersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the vendor stream
	VendorStreamId uint64 `protobuf:"varint,2,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// The ID of the team or the department from which internal subscribers need to be added to the vendor stream
	ResourceId uint64 `protobuf:"varint,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Stores if the existing internal subscribers in the vendor stream need to be deleted before adding from the source record
	DeleteExisting bool `protobuf:"varint,4,opt,name=delete_existing,json=deleteExisting,proto3" json:"delete_existing,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) Reset() {
	*x = VendorStreamsServiceImportInternalSubscribersRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceImportInternalSubscribersRequest) ProtoMessage() {}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceImportInternalSubscribersRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceImportInternalSubscribersRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{20}
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *VendorStreamsServiceImportInternalSubscribersRequest) GetDeleteExisting() bool {
	if x != nil {
		return x.DeleteExisting
	}
	return false
}

// Describes the parameters necessary to create a vendor stream vendor subscriber
type VendorStreamsServiceVendorSubscriberCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the vendor stream ID
	VendorStreamId uint64 `protobuf:"varint,10,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the user ID
	UserId        uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) Reset() {
	*x = VendorStreamsServiceVendorSubscriberCreateRequest{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamsServiceVendorSubscriberCreateRequest) ProtoMessage() {}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamsServiceVendorSubscriberCreateRequest.ProtoReflect.Descriptor instead.
func (*VendorStreamsServiceVendorSubscriberCreateRequest) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{21}
}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamsServiceVendorSubscriberCreateRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the parameters that constitute a vendor stream vendor subscriber
type VendorStreamVendorSubscriber struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this vendor stream vendor subscriber
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the vendor stream ID
	VendorStreamId uint64 `protobuf:"varint,10,opt,name=vendor_stream_id,json=vendorStreamId,proto3" json:"vendor_stream_id,omitempty"`
	// Stores the user ID
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Stores the user UUID (determined by the user_id)
	UserUuid      string `protobuf:"bytes,30,opt,name=user_uuid,json=userUuid,proto3" json:"user_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamVendorSubscriber) Reset() {
	*x = VendorStreamVendorSubscriber{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamVendorSubscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamVendorSubscriber) ProtoMessage() {}

func (x *VendorStreamVendorSubscriber) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamVendorSubscriber.ProtoReflect.Descriptor instead.
func (*VendorStreamVendorSubscriber) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{22}
}

func (x *VendorStreamVendorSubscriber) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *VendorStreamVendorSubscriber) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *VendorStreamVendorSubscriber) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *VendorStreamVendorSubscriber) GetVendorStreamId() uint64 {
	if x != nil {
		return x.VendorStreamId
	}
	return 0
}

func (x *VendorStreamVendorSubscriber) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VendorStreamVendorSubscriber) GetUserUuid() string {
	if x != nil {
		return x.UserUuid
	}
	return ""
}

// Describes the message consisting of the list of vendor stream vendor subscribers
type VendorStreamVendorSubscribersList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*VendorStreamVendorSubscriber `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VendorStreamVendorSubscribersList) Reset() {
	*x = VendorStreamVendorSubscribersList{}
	mi := &file_vendor_streams_scailo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VendorStreamVendorSubscribersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorStreamVendorSubscribersList) ProtoMessage() {}

func (x *VendorStreamVendorSubscribersList) ProtoReflect() protoreflect.Message {
	mi := &file_vendor_streams_scailo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorStreamVendorSubscribersList.ProtoReflect.Descriptor instead.
func (*VendorStreamVendorSubscribersList) Descriptor() ([]byte, []int) {
	return file_vendor_streams_scailo_proto_rawDescGZIP(), []int{23}
}

func (x *VendorStreamVendorSubscribersList) GetList() []*VendorStreamVendorSubscriber {
	if x != nil {
		return x.List
	}
	return nil
}

var File_vendor_streams_scailo_proto protoreflect.FileDescriptor

const file_vendor_streams_scailo_proto_rawDesc = "" +
	"\n" +
	"\x1bvendor_streams.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xcc\x02\n" +
	"\x18LogbookLogVendorStreamLC\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12\x19\n" +
	"\bref_uuid\x18\n" +
	" \x01(\tR\arefUuid\x12=\n" +
	"\toperation\x18\v \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\toperation\x12\x1a\n" +
	"\busername\x18\f \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\r \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x0e \x01(\x04R\x06userId\x12\x1f\n" +
	"\vapp_comment\x18\x0f \x01(\tR\n" +
	"appComment\x12!\n" +
	"\fuser_comment\x18\x10 \x01(\tR\vuserComment\"\xcc\x03\n" +
	"!VendorStreamsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\a \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12$\n" +
	"\tvendor_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bvendorId\x129\n" +
	"\bref_from\x18\f \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12J\n" +
	"\"assign_self_as_internal_subscriber\x18P \x01(\bR\x1eassignSelfAsInternalSubscriber\x12F\n" +
	" assign_self_as_vendor_subscriber\x18Q \x01(\bR\x1cassignSelfAsVendorSubscriber\"\xd2\x01\n" +
	"!VendorStreamsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\a \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\"\xfe\x04\n" +
	"\fVendorStream\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x127\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\x06status\x124\n" +
	"\x04logs\x18\x05 \x03(\v2 .Scailo.LogbookLogVendorStreamLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\a \x01(\x04R\rvaultFolderId\x12*\n" +
	"\x11vault_folder_uuid\x18k \x01(\tR\x0fvaultFolderUuid\x12\x14\n" +
	"\x05title\x18\n" +
	" \x01(\tR\x05title\x12\x1b\n" +
	"\tvendor_id\x18\v \x01(\x04R\bvendorId\x129\n" +
	"\bref_from\x18\f \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\r \x01(\x04R\x05refId\x12\x19\n" +
	"\bref_uuid\x18\x0e \x01(\tR\arefUuid\x12!\n" +
	"\finternal_ref\x182 \x01(\tR\vinternalRef\x12!\n" +
	"\funread_count\x18< \x01(\x04R\vunreadCount\x12#\n" +
	"\rmessage_count\x18= \x01(\x04R\fmessageCount\x12&\n" +
	"\x0flast_message_by\x18> \x01(\tR\rlastMessageBy\"=\n" +
	"\x11VendorStreamsList\x12(\n" +
	"\x04list\x18\x01 \x03(\v2\x14.Scailo.VendorStreamR\x04list\"\xbc\x02\n" +
	"!VendorStreamsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_SORT_KEYR\asortKey\x127\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\x06status\"\x9c\x01\n" +
	"&VendorStreamsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12.\n" +
	"\apayload\x18\x04 \x03(\v2\x14.Scailo.VendorStreamR\apayload\"\xcc\a\n" +
	"\x1dVendorStreamsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x127\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\finternal_ref\x18\x12 \x01(\tR\vinternalRef\x12\x14\n" +
	"\x05title\x18\x1e \x01(\tR\x05title\x12\x1b\n" +
	"\tvendor_id\x18( \x01(\x04R\bvendorId\x129\n" +
	"\bref_from\x18) \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18* \x01(\x04R\x05refId\x12=\n" +
	"\x1binternal_subscriber_user_id\x18< \x01(\x04R\x18internalSubscriberUserId\x129\n" +
	"\x19vendor_subscriber_user_id\x18= \x01(\x04R\x16vendorSubscriberUserId\"\x94\x06\n" +
	"\x1cVendorStreamsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x127\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\finternal_ref\x18\x12 \x01(\tR\vinternalRef\x12\x14\n" +
	"\x05title\x18\x1e \x01(\tR\x05title\x12\x1b\n" +
	"\tvendor_id\x18( \x01(\x04R\bvendorId\x129\n" +
	"\bref_from\x18) \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18* \x01(\x04R\x05refId\x12=\n" +
	"\x1binternal_subscriber_user_id\x18< \x01(\x04R\x18internalSubscriberUserId\x129\n" +
	"\x19vendor_subscriber_user_id\x18= \x01(\x04R\x16vendorSubscriberUserId\"\x9b\x04\n" +
	" VendorStreamsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x129\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1e.Scailo.VENDOR_STREAM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x127\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1f.Scailo.VENDOR_STREAM_LIFECYCLER\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x1b\n" +
	"\tvendor_id\x18( \x01(\x04R\bvendorId\x12=\n" +
	"\x1binternal_subscriber_user_id\x18< \x01(\x04R\x18internalSubscriberUserId\x129\n" +
	"\x19vendor_subscriber_user_id\x18= \x01(\x04R\x16vendorSubscriberUserId\"\x85\x02\n" +
	"(VendorStreamsServiceMessageCreateRequest\x12E\n" +
	"\fmessage_type\x18\b \x01(\x0e2\".Scailo.VENDOR_STREAM_MESSAGE_TYPER\vmessageType\x126\n" +
	"\x12vendor_stream_uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x10vendorStreamUuid\x127\n" +
	"\x18response_to_message_uuid\x18\v \x01(\tR\x15responseToMessageUuid\x12!\n" +
	"\acontent\x18\x14 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\acontent\"\xec\x02\n" +
	"\x13VendorStreamMessage\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\fmessage_type\x18\b \x01(\x0e2\".Scailo.VENDOR_STREAM_MESSAGE_TYPER\vmessageType\x12(\n" +
	"\x10vendor_stream_id\x18\n" +
	" \x01(\x04R\x0evendorStreamId\x127\n" +
	"\x18response_to_message_uuid\x18\v \x01(\tR\x15responseToMessageUuid\x12\x18\n" +
	"\acontent\x18\x14 \x01(\tR\acontent\x12!\n" +
	"\finternal_ref\x182 \x01(\tR\vinternalRef\x12\x17\n" +
	"\ais_read\x18< \x01(\bR\x06isRead\"K\n" +
	"\x18VendorStreamMessagesList\x12/\n" +
	"\x04list\x18\x01 \x03(\v2\x1b.Scailo.VendorStreamMessageR\x04list\"\xfe\x03\n" +
	"!VendorStreamMessagesSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12A\n" +
	"\bsort_key\x18\x05 \x01(\x0e2&.Scailo.VENDOR_STREAM_MESSAGE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12E\n" +
	"\fmessage_type\x18\b \x01(\x0e2\".Scailo.VENDOR_STREAM_MESSAGE_TYPER\vmessageType\x12(\n" +
	"\x10vendor_stream_id\x18\x14 \x01(\x04R\x0evendorStreamId\x127\n" +
	"\x18response_to_message_uuid\x18\x1e \x01(\tR\x15responseToMessageUuid\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xaa\x01\n" +
	"-VendorStreamsServicePaginatedMessagesResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x125\n" +
	"\apayload\x18\x04 \x03(\v2\x1b.Scailo.VendorStreamMessageR\apayload\"\xfb\x01\n" +
	"\x1aVendorStreamMessageReceipt\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12;\n" +
	"\x1avendor_stream_message_uuid\x18\n" +
	" \x01(\tR\x17vendorStreamMessageUuid\x12\x17\n" +
	"\auser_id\x18\v \x01(\x04R\x06userId\x12\x17\n" +
	"\ais_read\x18\f \x01(\bR\x06isRead\x12\x17\n" +
	"\aread_at\x18\r \x01(\x04R\x06readAt\"Y\n" +
	"\x1fVendorStreamMessageReceiptsList\x126\n" +
	"\x04list\x18\x01 \x03(\v2\".Scailo.VendorStreamMessageReceiptR\x04list\"\xad\x01\n" +
	"3VendorStreamsServiceInternalSubscriberCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x121\n" +
	"\x10vendor_stream_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorStreamId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\"\x84\x02\n" +
	"\x1eVendorStreamInternalSubscriber\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12(\n" +
	"\x10vendor_stream_id\x18\n" +
	" \x01(\x04R\x0evendorStreamId\x12\x17\n" +
	"\auser_id\x18\v \x01(\x04R\x06userId\x12%\n" +
	"\tuser_uuid\x18\x1e \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\buserUuid\"a\n" +
	"#VendorStreamInternalSubscribersList\x12:\n" +
	"\x04list\x18\x01 \x03(\v2&.Scailo.VendorStreamInternalSubscriberR\x04list\"\xdf\x01\n" +
	"4VendorStreamsServiceImportInternalSubscribersRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x121\n" +
	"\x10vendor_stream_id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorStreamId\x12(\n" +
	"\vresource_id\x18\x03 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"resourceId\x12'\n" +
	"\x0fdelete_existing\x18\x04 \x01(\bR\x0edeleteExisting\"\xab\x01\n" +
	"1VendorStreamsServiceVendorSubscriberCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x121\n" +
	"\x10vendor_stream_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorStreamId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\"\x8b\x02\n" +
	"\x1cVendorStreamVendorSubscriber\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12(\n" +
	"\x10vendor_stream_id\x18\n" +
	" \x01(\x04R\x0evendorStreamId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\x12%\n" +
	"\tuser_uuid\x18\x1e \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\buserUuid\"]\n" +
	"!VendorStreamVendorSubscribersList\x128\n" +
	"\x04list\x18\x01 \x03(\v2$.Scailo.VendorStreamVendorSubscriberR\x04list*\xb6\x01\n" +
	"\x17VENDOR_STREAM_LIFECYCLE\x12+\n" +
	"'VENDOR_STREAM_LIFECYCLE_ANY_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cVENDOR_STREAM_LIFECYCLE_OPEN\x10\x01\x12%\n" +
	"!VENDOR_STREAM_LIFECYCLE_COMPLETED\x10\x02\x12%\n" +
	"!VENDOR_STREAM_LIFECYCLE_CANCELLED\x10\x03*\xed\x02\n" +
	"\x16VENDOR_STREAM_REF_FROM\x12*\n" +
	"&VENDOR_STREAM_REF_FROM_ANY_UNSPECIFIED\x10\x00\x12)\n" +
	"%VENDOR_STREAM_REF_FROM_PURCHASE_ORDER\x10\x01\x12(\n" +
	"$VENDOR_STREAM_REF_FROM_GOODS_RECEIPT\x10\n" +
	"\x12)\n" +
	"%VENDOR_STREAM_REF_FROM_VENDOR_INVOICE\x10\v\x12*\n" +
	"&VENDOR_STREAM_REF_FROM_PURCHASE_RETURN\x10\x14\x12%\n" +
	"!VENDOR_STREAM_REF_FROM_DEBIT_NOTE\x10\x15\x12+\n" +
	"'VENDOR_STREAM_REF_FROM_PURCHASE_PAYMENT\x10\x1e\x12'\n" +
	"#VENDOR_STREAM_REF_FROM_SUPPLY_OFFER\x10(*\xdd\x01\n" +
	"\x16VENDOR_STREAM_SORT_KEY\x12)\n" +
	"%VENDOR_STREAM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12%\n" +
	"!VENDOR_STREAM_SORT_KEY_CREATED_AT\x10\x01\x12&\n" +
	"\"VENDOR_STREAM_SORT_KEY_MODIFIED_AT\x10\x02\x12'\n" +
	"#VENDOR_STREAM_SORT_KEY_COMPLETED_ON\x10\x06\x12 \n" +
	"\x1cVENDOR_STREAM_SORT_KEY_TITLE\x10\n" +
	"*\x98\x01\n" +
	"\x1aVENDOR_STREAM_MESSAGE_TYPE\x12.\n" +
	"*VENDOR_STREAM_MESSAGE_TYPE_ANY_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fVENDOR_STREAM_MESSAGE_TYPE_USER\x10\x01\x12%\n" +
	"!VENDOR_STREAM_MESSAGE_TYPE_SYSTEM\x10\x02*\xb2\x01\n" +
	"\x1eVENDOR_STREAM_MESSAGE_SORT_KEY\x121\n" +
	"-VENDOR_STREAM_MESSAGE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12-\n" +
	")VENDOR_STREAM_MESSAGE_SORT_KEY_CREATED_AT\x10\x01\x12.\n" +
	"*VENDOR_STREAM_MESSAGE_SORT_KEY_MODIFIED_AT\x10\x022\xd5\x18\n" +
	"\x14VendorStreamsService\x12K\n" +
	"\x06Create\x12).Scailo.VendorStreamsServiceCreateRequest\x1a\x16.Scailo.IdentifierUUID\x12K\n" +
	"\x06Update\x12).Scailo.VendorStreamsServiceUpdateRequest\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Cancel\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12I\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12G\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12K\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x16.Scailo.IdentifierUUID\x12V\n" +
	"\n" +
	"AddMessage\x120.Scailo.VendorStreamsServiceMessageCreateRequest\x1a\x16.Scailo.IdentifierUUID\x12E\n" +
	"\x13SaveMessageForLater\x12\x16.Scailo.IdentifierUUID\x1a\x16.Scailo.IdentifierUUID\x12?\n" +
	"\rDeleteMessage\x12\x16.Scailo.IdentifierUUID\x1a\x16.Scailo.IdentifierUUID\x12H\n" +
	"\x11ViewMessageByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x1b.Scailo.VendorStreamMessage\x12H\n" +
	"\fViewMessages\x12\x16.Scailo.IdentifierUUID\x1a .Scailo.VendorStreamMessagesList\x12y\n" +
	"\x15ViewPaginatedMessages\x12).Scailo.VendorStreamMessagesSearchRequest\x1a5.Scailo.VendorStreamsServicePaginatedMessagesResponse\x12\x80\x01\n" +
	"\x1cSearchMessagesWithPagination\x12).Scailo.VendorStreamMessagesSearchRequest\x1a5.Scailo.VendorStreamsServicePaginatedMessagesResponse\x12V\n" +
	"\x13ViewMessageReceipts\x12\x16.Scailo.IdentifierUUID\x1a'.Scailo.VendorStreamMessageReceiptsList\x12p\n" +
	"\x15AddInternalSubscriber\x12;.Scailo.VendorStreamsServiceInternalSubscriberCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Y\n" +
	"\x18DeleteInternalSubscriber\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x1aViewInternalSubscriberByID\x12\x12.Scailo.Identifier\x1a&.Scailo.VendorStreamInternalSubscriber\x12^\n" +
	"\x17ViewInternalSubscribers\x12\x16.Scailo.IdentifierUUID\x1a+.Scailo.VendorStreamInternalSubscribersList\x12}\n" +
	"!ImportInternalSubscribersFromTeam\x12<.Scailo.VendorStreamsServiceImportInternalSubscribersRequest\x1a\x1a.Scailo.IdentifierResponse\x12\x83\x01\n" +
	"'ImportInternalSubscribersFromDepartment\x12<.Scailo.VendorStreamsServiceImportInternalSubscribersRequest\x1a\x1a.Scailo.IdentifierResponse\x12l\n" +
	"\x13AddVendorSubscriber\x129.Scailo.VendorStreamsServiceVendorSubscriberCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12W\n" +
	"\x16DeleteVendorSubscriber\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x18ViewVendorSubscriberByID\x12\x12.Scailo.Identifier\x1a$.Scailo.VendorStreamVendorSubscriber\x12Z\n" +
	"\x15ViewVendorSubscribers\x12\x16.Scailo.IdentifierUUID\x1a).Scailo.VendorStreamVendorSubscribersList\x124\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.VendorStream\x12:\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.VendorStream\x12=\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.VendorStream\x12C\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.VendorStream\x12A\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x19.Scailo.VendorStreamsList\x12:\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x19.Scailo.VendorStreamsList\x12I\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x19.Scailo.VendorStreamsList\x12o\n" +
	"\x12ViewWithPagination\x12).Scailo.VendorStreamsServicePaginationReq\x1a..Scailo.VendorStreamsServicePaginationResponse\x12P\n" +
	"\tSearchAll\x12(.Scailo.VendorStreamsServiceSearchAllReq\x1a\x19.Scailo.VendorStreamsList\x12J\n" +
	"\x06Filter\x12%.Scailo.VendorStreamsServiceFilterReq\x1a\x19.Scailo.VendorStreamsList\x12D\n" +
	"\x05Count\x12$.Scailo.VendorStreamsServiceCountReq\x1a\x15.Scailo.CountResponse\x12L\n" +
	"\rDownloadAsCSV\x12%.Scailo.VendorStreamsServiceFilterReq\x1a\x14.Scailo.StandardFileBj\n" +
	"\n" +
	"com.ScailoB\x18VendorStreamsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_vendor_streams_scailo_proto_rawDescOnce sync.Once
	file_vendor_streams_scailo_proto_rawDescData []byte
)

func file_vendor_streams_scailo_proto_rawDescGZIP() []byte {
	file_vendor_streams_scailo_proto_rawDescOnce.Do(func() {
		file_vendor_streams_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vendor_streams_scailo_proto_rawDesc), len(file_vendor_streams_scailo_proto_rawDesc)))
	})
	return file_vendor_streams_scailo_proto_rawDescData
}

var file_vendor_streams_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_vendor_streams_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_vendor_streams_scailo_proto_goTypes = []any{
	(VENDOR_STREAM_LIFECYCLE)(0),                                 // 0: Scailo.VENDOR_STREAM_LIFECYCLE
	(VENDOR_STREAM_REF_FROM)(0),                                  // 1: Scailo.VENDOR_STREAM_REF_FROM
	(VENDOR_STREAM_SORT_KEY)(0),                                  // 2: Scailo.VENDOR_STREAM_SORT_KEY
	(VENDOR_STREAM_MESSAGE_TYPE)(0),                              // 3: Scailo.VENDOR_STREAM_MESSAGE_TYPE
	(VENDOR_STREAM_MESSAGE_SORT_KEY)(0),                          // 4: Scailo.VENDOR_STREAM_MESSAGE_SORT_KEY
	(*LogbookLogVendorStreamLC)(nil),                             // 5: Scailo.LogbookLogVendorStreamLC
	(*VendorStreamsServiceCreateRequest)(nil),                    // 6: Scailo.VendorStreamsServiceCreateRequest
	(*VendorStreamsServiceUpdateRequest)(nil),                    // 7: Scailo.VendorStreamsServiceUpdateRequest
	(*VendorStream)(nil),                                         // 8: Scailo.VendorStream
	(*VendorStreamsList)(nil),                                    // 9: Scailo.VendorStreamsList
	(*VendorStreamsServicePaginationReq)(nil),                    // 10: Scailo.VendorStreamsServicePaginationReq
	(*VendorStreamsServicePaginationResponse)(nil),               // 11: Scailo.VendorStreamsServicePaginationResponse
	(*VendorStreamsServiceFilterReq)(nil),                        // 12: Scailo.VendorStreamsServiceFilterReq
	(*VendorStreamsServiceCountReq)(nil),                         // 13: Scailo.VendorStreamsServiceCountReq
	(*VendorStreamsServiceSearchAllReq)(nil),                     // 14: Scailo.VendorStreamsServiceSearchAllReq
	(*VendorStreamsServiceMessageCreateRequest)(nil),             // 15: Scailo.VendorStreamsServiceMessageCreateRequest
	(*VendorStreamMessage)(nil),                                  // 16: Scailo.VendorStreamMessage
	(*VendorStreamMessagesList)(nil),                             // 17: Scailo.VendorStreamMessagesList
	(*VendorStreamMessagesSearchRequest)(nil),                    // 18: Scailo.VendorStreamMessagesSearchRequest
	(*VendorStreamsServicePaginatedMessagesResponse)(nil),        // 19: Scailo.VendorStreamsServicePaginatedMessagesResponse
	(*VendorStreamMessageReceipt)(nil),                           // 20: Scailo.VendorStreamMessageReceipt
	(*VendorStreamMessageReceiptsList)(nil),                      // 21: Scailo.VendorStreamMessageReceiptsList
	(*VendorStreamsServiceInternalSubscriberCreateRequest)(nil),  // 22: Scailo.VendorStreamsServiceInternalSubscriberCreateRequest
	(*VendorStreamInternalSubscriber)(nil),                       // 23: Scailo.VendorStreamInternalSubscriber
	(*VendorStreamInternalSubscribersList)(nil),                  // 24: Scailo.VendorStreamInternalSubscribersList
	(*VendorStreamsServiceImportInternalSubscribersRequest)(nil), // 25: Scailo.VendorStreamsServiceImportInternalSubscribersRequest
	(*VendorStreamsServiceVendorSubscriberCreateRequest)(nil),    // 26: Scailo.VendorStreamsServiceVendorSubscriberCreateRequest
	(*VendorStreamVendorSubscriber)(nil),                         // 27: Scailo.VendorStreamVendorSubscriber
	(*VendorStreamVendorSubscribersList)(nil),                    // 28: Scailo.VendorStreamVendorSubscribersList
	(*EmployeeMetadata)(nil),                                     // 29: Scailo.EmployeeMetadata
	(BOOL_FILTER)(0),                                             // 30: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                              // 31: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),                        // 32: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierUUID)(nil),                                       // 33: Scailo.IdentifierUUID
	(*IdentifierWithUserComment)(nil),                            // 34: Scailo.IdentifierWithUserComment
	(*Identifier)(nil),                                           // 35: Scailo.Identifier
	(*IdentifiersList)(nil),                                      // 36: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                         // 37: Scailo.ActiveStatus
	(*IdentifierResponse)(nil),                                   // 38: Scailo.IdentifierResponse
	(*CountResponse)(nil),                                        // 39: Scailo.CountResponse
	(*StandardFile)(nil),                                         // 40: Scailo.StandardFile
}
var file_vendor_streams_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.LogbookLogVendorStreamLC.operation:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	1,  // 1: Scailo.VendorStreamsServiceCreateRequest.ref_from:type_name -> Scailo.VENDOR_STREAM_REF_FROM
	29, // 2: Scailo.VendorStream.metadata:type_name -> Scailo.EmployeeMetadata
	0,  // 3: Scailo.VendorStream.status:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	5,  // 4: Scailo.VendorStream.logs:type_name -> Scailo.LogbookLogVendorStreamLC
	1,  // 5: Scailo.VendorStream.ref_from:type_name -> Scailo.VENDOR_STREAM_REF_FROM
	8,  // 6: Scailo.VendorStreamsList.list:type_name -> Scailo.VendorStream
	30, // 7: Scailo.VendorStreamsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	31, // 8: Scailo.VendorStreamsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 9: Scailo.VendorStreamsServicePaginationReq.sort_key:type_name -> Scailo.VENDOR_STREAM_SORT_KEY
	0,  // 10: Scailo.VendorStreamsServicePaginationReq.status:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	8,  // 11: Scailo.VendorStreamsServicePaginationResponse.payload:type_name -> Scailo.VendorStream
	30, // 12: Scailo.VendorStreamsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	31, // 13: Scailo.VendorStreamsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 14: Scailo.VendorStreamsServiceFilterReq.sort_key:type_name -> Scailo.VENDOR_STREAM_SORT_KEY
	0,  // 15: Scailo.VendorStreamsServiceFilterReq.status:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	1,  // 16: Scailo.VendorStreamsServiceFilterReq.ref_from:type_name -> Scailo.VENDOR_STREAM_REF_FROM
	30, // 17: Scailo.VendorStreamsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	0,  // 18: Scailo.VendorStreamsServiceCountReq.status:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	1,  // 19: Scailo.VendorStreamsServiceCountReq.ref_from:type_name -> Scailo.VENDOR_STREAM_REF_FROM
	30, // 20: Scailo.VendorStreamsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	31, // 21: Scailo.VendorStreamsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 22: Scailo.VendorStreamsServiceSearchAllReq.sort_key:type_name -> Scailo.VENDOR_STREAM_SORT_KEY
	0,  // 23: Scailo.VendorStreamsServiceSearchAllReq.status:type_name -> Scailo.VENDOR_STREAM_LIFECYCLE
	3,  // 24: Scailo.VendorStreamsServiceMessageCreateRequest.message_type:type_name -> Scailo.VENDOR_STREAM_MESSAGE_TYPE
	29, // 25: Scailo.VendorStreamMessage.metadata:type_name -> Scailo.EmployeeMetadata
	3,  // 26: Scailo.VendorStreamMessage.message_type:type_name -> Scailo.VENDOR_STREAM_MESSAGE_TYPE
	16, // 27: Scailo.VendorStreamMessagesList.list:type_name -> Scailo.VendorStreamMessage
	30, // 28: Scailo.VendorStreamMessagesSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	31, // 29: Scailo.VendorStreamMessagesSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	4,  // 30: Scailo.VendorStreamMessagesSearchRequest.sort_key:type_name -> Scailo.VENDOR_STREAM_MESSAGE_SORT_KEY
	3,  // 31: Scailo.VendorStreamMessagesSearchRequest.message_type:type_name -> Scailo.VENDOR_STREAM_MESSAGE_TYPE
	16, // 32: Scailo.VendorStreamsServicePaginatedMessagesResponse.payload:type_name -> Scailo.VendorStreamMessage
	29, // 33: Scailo.VendorStreamMessageReceipt.metadata:type_name -> Scailo.EmployeeMetadata
	20, // 34: Scailo.VendorStreamMessageReceiptsList.list:type_name -> Scailo.VendorStreamMessageReceipt
	29, // 35: Scailo.VendorStreamInternalSubscriber.metadata:type_name -> Scailo.EmployeeMetadata
	23, // 36: Scailo.VendorStreamInternalSubscribersList.list:type_name -> Scailo.VendorStreamInternalSubscriber
	29, // 37: Scailo.VendorStreamVendorSubscriber.metadata:type_name -> Scailo.EmployeeMetadata
	27, // 38: Scailo.VendorStreamVendorSubscribersList.list:type_name -> Scailo.VendorStreamVendorSubscriber
	6,  // 39: Scailo.VendorStreamsService.Create:input_type -> Scailo.VendorStreamsServiceCreateRequest
	7,  // 40: Scailo.VendorStreamsService.Update:input_type -> Scailo.VendorStreamsServiceUpdateRequest
	32, // 41: Scailo.VendorStreamsService.Cancel:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 42: Scailo.VendorStreamsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 43: Scailo.VendorStreamsService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 44: Scailo.VendorStreamsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 45: Scailo.VendorStreamsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	15, // 46: Scailo.VendorStreamsService.AddMessage:input_type -> Scailo.VendorStreamsServiceMessageCreateRequest
	33, // 47: Scailo.VendorStreamsService.SaveMessageForLater:input_type -> Scailo.IdentifierUUID
	33, // 48: Scailo.VendorStreamsService.DeleteMessage:input_type -> Scailo.IdentifierUUID
	33, // 49: Scailo.VendorStreamsService.ViewMessageByUUID:input_type -> Scailo.IdentifierUUID
	33, // 50: Scailo.VendorStreamsService.ViewMessages:input_type -> Scailo.IdentifierUUID
	18, // 51: Scailo.VendorStreamsService.ViewPaginatedMessages:input_type -> Scailo.VendorStreamMessagesSearchRequest
	18, // 52: Scailo.VendorStreamsService.SearchMessagesWithPagination:input_type -> Scailo.VendorStreamMessagesSearchRequest
	33, // 53: Scailo.VendorStreamsService.ViewMessageReceipts:input_type -> Scailo.IdentifierUUID
	22, // 54: Scailo.VendorStreamsService.AddInternalSubscriber:input_type -> Scailo.VendorStreamsServiceInternalSubscriberCreateRequest
	34, // 55: Scailo.VendorStreamsService.DeleteInternalSubscriber:input_type -> Scailo.IdentifierWithUserComment
	35, // 56: Scailo.VendorStreamsService.ViewInternalSubscriberByID:input_type -> Scailo.Identifier
	33, // 57: Scailo.VendorStreamsService.ViewInternalSubscribers:input_type -> Scailo.IdentifierUUID
	25, // 58: Scailo.VendorStreamsService.ImportInternalSubscribersFromTeam:input_type -> Scailo.VendorStreamsServiceImportInternalSubscribersRequest
	25, // 59: Scailo.VendorStreamsService.ImportInternalSubscribersFromDepartment:input_type -> Scailo.VendorStreamsServiceImportInternalSubscribersRequest
	26, // 60: Scailo.VendorStreamsService.AddVendorSubscriber:input_type -> Scailo.VendorStreamsServiceVendorSubscriberCreateRequest
	34, // 61: Scailo.VendorStreamsService.DeleteVendorSubscriber:input_type -> Scailo.IdentifierWithUserComment
	35, // 62: Scailo.VendorStreamsService.ViewVendorSubscriberByID:input_type -> Scailo.Identifier
	33, // 63: Scailo.VendorStreamsService.ViewVendorSubscribers:input_type -> Scailo.IdentifierUUID
	35, // 64: Scailo.VendorStreamsService.ViewByID:input_type -> Scailo.Identifier
	33, // 65: Scailo.VendorStreamsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	35, // 66: Scailo.VendorStreamsService.ViewEssentialByID:input_type -> Scailo.Identifier
	33, // 67: Scailo.VendorStreamsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	36, // 68: Scailo.VendorStreamsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	37, // 69: Scailo.VendorStreamsService.ViewAll:input_type -> Scailo.ActiveStatus
	33, // 70: Scailo.VendorStreamsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	10, // 71: Scailo.VendorStreamsService.ViewWithPagination:input_type -> Scailo.VendorStreamsServicePaginationReq
	14, // 72: Scailo.VendorStreamsService.SearchAll:input_type -> Scailo.VendorStreamsServiceSearchAllReq
	12, // 73: Scailo.VendorStreamsService.Filter:input_type -> Scailo.VendorStreamsServiceFilterReq
	13, // 74: Scailo.VendorStreamsService.Count:input_type -> Scailo.VendorStreamsServiceCountReq
	12, // 75: Scailo.VendorStreamsService.DownloadAsCSV:input_type -> Scailo.VendorStreamsServiceFilterReq
	33, // 76: Scailo.VendorStreamsService.Create:output_type -> Scailo.IdentifierUUID
	33, // 77: Scailo.VendorStreamsService.Update:output_type -> Scailo.IdentifierUUID
	33, // 78: Scailo.VendorStreamsService.Cancel:output_type -> Scailo.IdentifierUUID
	33, // 79: Scailo.VendorStreamsService.Complete:output_type -> Scailo.IdentifierUUID
	33, // 80: Scailo.VendorStreamsService.Reopen:output_type -> Scailo.IdentifierUUID
	33, // 81: Scailo.VendorStreamsService.Repeat:output_type -> Scailo.IdentifierUUID
	33, // 82: Scailo.VendorStreamsService.CommentAdd:output_type -> Scailo.IdentifierUUID
	33, // 83: Scailo.VendorStreamsService.AddMessage:output_type -> Scailo.IdentifierUUID
	33, // 84: Scailo.VendorStreamsService.SaveMessageForLater:output_type -> Scailo.IdentifierUUID
	33, // 85: Scailo.VendorStreamsService.DeleteMessage:output_type -> Scailo.IdentifierUUID
	16, // 86: Scailo.VendorStreamsService.ViewMessageByUUID:output_type -> Scailo.VendorStreamMessage
	17, // 87: Scailo.VendorStreamsService.ViewMessages:output_type -> Scailo.VendorStreamMessagesList
	19, // 88: Scailo.VendorStreamsService.ViewPaginatedMessages:output_type -> Scailo.VendorStreamsServicePaginatedMessagesResponse
	19, // 89: Scailo.VendorStreamsService.SearchMessagesWithPagination:output_type -> Scailo.VendorStreamsServicePaginatedMessagesResponse
	21, // 90: Scailo.VendorStreamsService.ViewMessageReceipts:output_type -> Scailo.VendorStreamMessageReceiptsList
	38, // 91: Scailo.VendorStreamsService.AddInternalSubscriber:output_type -> Scailo.IdentifierResponse
	38, // 92: Scailo.VendorStreamsService.DeleteInternalSubscriber:output_type -> Scailo.IdentifierResponse
	23, // 93: Scailo.VendorStreamsService.ViewInternalSubscriberByID:output_type -> Scailo.VendorStreamInternalSubscriber
	24, // 94: Scailo.VendorStreamsService.ViewInternalSubscribers:output_type -> Scailo.VendorStreamInternalSubscribersList
	38, // 95: Scailo.VendorStreamsService.ImportInternalSubscribersFromTeam:output_type -> Scailo.IdentifierResponse
	38, // 96: Scailo.VendorStreamsService.ImportInternalSubscribersFromDepartment:output_type -> Scailo.IdentifierResponse
	38, // 97: Scailo.VendorStreamsService.AddVendorSubscriber:output_type -> Scailo.IdentifierResponse
	38, // 98: Scailo.VendorStreamsService.DeleteVendorSubscriber:output_type -> Scailo.IdentifierResponse
	27, // 99: Scailo.VendorStreamsService.ViewVendorSubscriberByID:output_type -> Scailo.VendorStreamVendorSubscriber
	28, // 100: Scailo.VendorStreamsService.ViewVendorSubscribers:output_type -> Scailo.VendorStreamVendorSubscribersList
	8,  // 101: Scailo.VendorStreamsService.ViewByID:output_type -> Scailo.VendorStream
	8,  // 102: Scailo.VendorStreamsService.ViewByUUID:output_type -> Scailo.VendorStream
	8,  // 103: Scailo.VendorStreamsService.ViewEssentialByID:output_type -> Scailo.VendorStream
	8,  // 104: Scailo.VendorStreamsService.ViewEssentialByUUID:output_type -> Scailo.VendorStream
	9,  // 105: Scailo.VendorStreamsService.ViewFromIDs:output_type -> Scailo.VendorStreamsList
	9,  // 106: Scailo.VendorStreamsService.ViewAll:output_type -> Scailo.VendorStreamsList
	9,  // 107: Scailo.VendorStreamsService.ViewAllForEntityUUID:output_type -> Scailo.VendorStreamsList
	11, // 108: Scailo.VendorStreamsService.ViewWithPagination:output_type -> Scailo.VendorStreamsServicePaginationResponse
	9,  // 109: Scailo.VendorStreamsService.SearchAll:output_type -> Scailo.VendorStreamsList
	9,  // 110: Scailo.VendorStreamsService.Filter:output_type -> Scailo.VendorStreamsList
	39, // 111: Scailo.VendorStreamsService.Count:output_type -> Scailo.CountResponse
	40, // 112: Scailo.VendorStreamsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	76, // [76:113] is the sub-list for method output_type
	39, // [39:76] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_vendor_streams_scailo_proto_init() }
func file_vendor_streams_scailo_proto_init() {
	if File_vendor_streams_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vendor_streams_scailo_proto_rawDesc), len(file_vendor_streams_scailo_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vendor_streams_scailo_proto_goTypes,
		DependencyIndexes: file_vendor_streams_scailo_proto_depIdxs,
		EnumInfos:         file_vendor_streams_scailo_proto_enumTypes,
		MessageInfos:      file_vendor_streams_scailo_proto_msgTypes,
	}.Build()
	File_vendor_streams_scailo_proto = out.File
	file_vendor_streams_scailo_proto_goTypes = nil
	file_vendor_streams_scailo_proto_depIdxs = nil
}
