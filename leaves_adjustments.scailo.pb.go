// addLeaveAdjustmentRecord
// modifyLeaveAdjustmentRecord
// reorderLeaveAdjustmentRecords
// deleteLeaveAdjustmentRecord
// approveLeaveAdjustmentRecord

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: leaves_adjustments.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type LEAVE_ADJUSTMENT_SORT_KEY int32

const (
	// Fetch ordered results by id
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED LEAVE_ADJUSTMENT_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_CREATED_AT LEAVE_ADJUSTMENT_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_MODIFIED_AT LEAVE_ADJUSTMENT_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_ON LEAVE_ADJUSTMENT_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_BY LEAVE_ADJUSTMENT_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_APPROVER_ROLE_ID LEAVE_ADJUSTMENT_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_COMPLETED_ON LEAVE_ADJUSTMENT_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_REFERENCE_ID LEAVE_ADJUSTMENT_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_FINAL_REF_NUMBER LEAVE_ADJUSTMENT_SORT_KEY = 11
	// Fetch ordered results by the user ID
	LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_USER_ID LEAVE_ADJUSTMENT_SORT_KEY = 12
)

// Enum value maps for LEAVE_ADJUSTMENT_SORT_KEY.
var (
	LEAVE_ADJUSTMENT_SORT_KEY_name = map[int32]string{
		0:  "LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED",
		1:  "LEAVE_ADJUSTMENT_SORT_KEY_CREATED_AT",
		2:  "LEAVE_ADJUSTMENT_SORT_KEY_MODIFIED_AT",
		3:  "LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_ON",
		4:  "LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_BY",
		5:  "LEAVE_ADJUSTMENT_SORT_KEY_APPROVER_ROLE_ID",
		6:  "LEAVE_ADJUSTMENT_SORT_KEY_COMPLETED_ON",
		10: "LEAVE_ADJUSTMENT_SORT_KEY_REFERENCE_ID",
		11: "LEAVE_ADJUSTMENT_SORT_KEY_FINAL_REF_NUMBER",
		12: "LEAVE_ADJUSTMENT_SORT_KEY_USER_ID",
	}
	LEAVE_ADJUSTMENT_SORT_KEY_value = map[string]int32{
		"LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED":   0,
		"LEAVE_ADJUSTMENT_SORT_KEY_CREATED_AT":       1,
		"LEAVE_ADJUSTMENT_SORT_KEY_MODIFIED_AT":      2,
		"LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_ON":      3,
		"LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_BY":      4,
		"LEAVE_ADJUSTMENT_SORT_KEY_APPROVER_ROLE_ID": 5,
		"LEAVE_ADJUSTMENT_SORT_KEY_COMPLETED_ON":     6,
		"LEAVE_ADJUSTMENT_SORT_KEY_REFERENCE_ID":     10,
		"LEAVE_ADJUSTMENT_SORT_KEY_FINAL_REF_NUMBER": 11,
		"LEAVE_ADJUSTMENT_SORT_KEY_USER_ID":          12,
	}
)

func (x LEAVE_ADJUSTMENT_SORT_KEY) Enum() *LEAVE_ADJUSTMENT_SORT_KEY {
	p := new(LEAVE_ADJUSTMENT_SORT_KEY)
	*p = x
	return p
}

func (x LEAVE_ADJUSTMENT_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LEAVE_ADJUSTMENT_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_leaves_adjustments_scailo_proto_enumTypes[0].Descriptor()
}

func (LEAVE_ADJUSTMENT_SORT_KEY) Type() protoreflect.EnumType {
	return &file_leaves_adjustments_scailo_proto_enumTypes[0]
}

func (x LEAVE_ADJUSTMENT_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LEAVE_ADJUSTMENT_SORT_KEY.Descriptor instead.
func (LEAVE_ADJUSTMENT_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type LEAVE_ADJUSTMENT_RECORD_SORT_KEY int32

const (
	// Fetch results by id
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_ID_UNSPECIFIED LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 0
	// Fetch results by the creation timestamp
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_CREATED_AT LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 1
	// Fetch results by the modified timestamp
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_MODIFIED_AT LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 2
	// Fetch results by the approved on timestamp
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_ON LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 3
	// Fetch results by the approved by field
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_BY LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 4
	// Fetch results by the approver's role ID
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVER_ROLE_ID LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 5
	// Fetch results by the leave type ID
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_TYPE_ID LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 10
	// Fetch results by the uom ID
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_UOM_ID LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 11
	// Fetch results by the quantity
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_QUANTITY LEAVE_ADJUSTMENT_RECORD_SORT_KEY = 12
)

// Enum value maps for LEAVE_ADJUSTMENT_RECORD_SORT_KEY.
var (
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_name = map[int32]string{
		0:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_ID_UNSPECIFIED",
		1:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_CREATED_AT",
		2:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_MODIFIED_AT",
		3:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_ON",
		4:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_BY",
		5:  "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVER_ROLE_ID",
		10: "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_TYPE_ID",
		11: "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_UOM_ID",
		12: "LEAVE_ADJUSTMENT_RECORD_SORT_KEY_QUANTITY",
	}
	LEAVE_ADJUSTMENT_RECORD_SORT_KEY_value = map[string]int32{
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_ID_UNSPECIFIED":   0,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_CREATED_AT":       1,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_MODIFIED_AT":      2,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_ON":      3,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_BY":      4,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVER_ROLE_ID": 5,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_TYPE_ID":    10,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_UOM_ID":           11,
		"LEAVE_ADJUSTMENT_RECORD_SORT_KEY_QUANTITY":         12,
	}
)

func (x LEAVE_ADJUSTMENT_RECORD_SORT_KEY) Enum() *LEAVE_ADJUSTMENT_RECORD_SORT_KEY {
	p := new(LEAVE_ADJUSTMENT_RECORD_SORT_KEY)
	*p = x
	return p
}

func (x LEAVE_ADJUSTMENT_RECORD_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LEAVE_ADJUSTMENT_RECORD_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_leaves_adjustments_scailo_proto_enumTypes[1].Descriptor()
}

func (LEAVE_ADJUSTMENT_RECORD_SORT_KEY) Type() protoreflect.EnumType {
	return &file_leaves_adjustments_scailo_proto_enumTypes[1]
}

func (x LEAVE_ADJUSTMENT_RECORD_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LEAVE_ADJUSTMENT_RECORD_SORT_KEY.Descriptor instead.
func (LEAVE_ADJUSTMENT_RECORD_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the applicable statuses of leave adjustment records
type LEAVE_ADJUSTMENT_RECORD_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	LEAVE_ADJUSTMENT_RECORD_STATUS_LEAVE_ADJUSTMENT_RECORD_STATUS_ANY_UNSPECIFIED LEAVE_ADJUSTMENT_RECORD_STATUS = 0
	// Denotes that the leave adjustment records must have been approved
	LEAVE_ADJUSTMENT_RECORD_STATUS_LEAVE_ADJUSTMENT_RECORD_STATUS_APPROVED LEAVE_ADJUSTMENT_RECORD_STATUS = 1
	// Denotes that the leave adjustment records must be waiting for approval
	LEAVE_ADJUSTMENT_RECORD_STATUS_LEAVE_ADJUSTMENT_RECORD_STATUS_UNAPPROVED LEAVE_ADJUSTMENT_RECORD_STATUS = 2
)

// Enum value maps for LEAVE_ADJUSTMENT_RECORD_STATUS.
var (
	LEAVE_ADJUSTMENT_RECORD_STATUS_name = map[int32]string{
		0: "LEAVE_ADJUSTMENT_RECORD_STATUS_ANY_UNSPECIFIED",
		1: "LEAVE_ADJUSTMENT_RECORD_STATUS_APPROVED",
		2: "LEAVE_ADJUSTMENT_RECORD_STATUS_UNAPPROVED",
	}
	LEAVE_ADJUSTMENT_RECORD_STATUS_value = map[string]int32{
		"LEAVE_ADJUSTMENT_RECORD_STATUS_ANY_UNSPECIFIED": 0,
		"LEAVE_ADJUSTMENT_RECORD_STATUS_APPROVED":        1,
		"LEAVE_ADJUSTMENT_RECORD_STATUS_UNAPPROVED":      2,
	}
)

func (x LEAVE_ADJUSTMENT_RECORD_STATUS) Enum() *LEAVE_ADJUSTMENT_RECORD_STATUS {
	p := new(LEAVE_ADJUSTMENT_RECORD_STATUS)
	*p = x
	return p
}

func (x LEAVE_ADJUSTMENT_RECORD_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LEAVE_ADJUSTMENT_RECORD_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_leaves_adjustments_scailo_proto_enumTypes[2].Descriptor()
}

func (LEAVE_ADJUSTMENT_RECORD_STATUS) Type() protoreflect.EnumType {
	return &file_leaves_adjustments_scailo_proto_enumTypes[2]
}

func (x LEAVE_ADJUSTMENT_RECORD_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LEAVE_ADJUSTMENT_RECORD_STATUS.Descriptor instead.
func (LEAVE_ADJUSTMENT_RECORD_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the parameters necessary to create a record
type LeavesAdjustmentsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the leave adjustment
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The ID of the user for whom this adjustment needs to be made
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The description of the leave adjustment
	Description   string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceCreateRequest) Reset() {
	*x = LeavesAdjustmentsServiceCreateRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceCreateRequest) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type LeavesAdjustmentsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the leave adjustment
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The description of the leave adjustment
	Description   string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceUpdateRequest) Reset() {
	*x = LeavesAdjustmentsServiceUpdateRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceUpdateRequest) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *LeavesAdjustmentsServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type LeaveAdjustment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this record
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this record
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this record
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this record was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference_id of the leave adjustment
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user for whom this adjustment needs to be made
	UserId uint64 `protobuf:"varint,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The description of the leave adjustment
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of associated leave adjustment records
	List          []*LeaveAdjustmentRecord `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveAdjustment) Reset() {
	*x = LeaveAdjustment{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveAdjustment) ProtoMessage() {}

func (x *LeaveAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveAdjustment.ProtoReflect.Descriptor instead.
func (*LeaveAdjustment) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveAdjustment) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeaveAdjustment) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LeaveAdjustment) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *LeaveAdjustment) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LeaveAdjustment) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *LeaveAdjustment) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *LeaveAdjustment) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *LeaveAdjustment) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *LeaveAdjustment) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *LeaveAdjustment) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LeaveAdjustment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LeaveAdjustment) GetList() []*LeaveAdjustmentRecord {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters required to add a record
type LeavesAdjustmentsServiceRecordCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the leave adjustment ID
	LeaveAdjustmentId uint64 `protobuf:"varint,10,opt,name=leave_adjustment_id,json=leaveAdjustmentId,proto3" json:"leave_adjustment_id,omitempty"`
	// Stores the leave type ID
	LeaveTypeId uint64 `protobuf:"varint,11,opt,name=leave_type_id,json=leaveTypeId,proto3" json:"leave_type_id,omitempty"`
	// Stores the unit of material ID
	UomId uint64 `protobuf:"varint,12,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the quantity of leaves (in cents)
	Quantity      uint64 `protobuf:"varint,13,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) Reset() {
	*x = LeavesAdjustmentsServiceRecordCreateRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceRecordCreateRequest) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceRecordCreateRequest.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceRecordCreateRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) GetLeaveAdjustmentId() uint64 {
	if x != nil {
		return x.LeaveAdjustmentId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) GetLeaveTypeId() uint64 {
	if x != nil {
		return x.LeaveTypeId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordCreateRequest) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Describes the parameters required to update a record
type LeavesAdjustmentsServiceRecordUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Stores the leave adjustment ID
	LeaveAdjustmentId uint64 `protobuf:"varint,10,opt,name=leave_adjustment_id,json=leaveAdjustmentId,proto3" json:"leave_adjustment_id,omitempty"`
	// Stores the leave type ID
	LeaveTypeId uint64 `protobuf:"varint,11,opt,name=leave_type_id,json=leaveTypeId,proto3" json:"leave_type_id,omitempty"`
	// Stores the unit of material ID
	UomId uint64 `protobuf:"varint,12,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the quantity of leaves (in cents)
	Quantity      uint64 `protobuf:"varint,13,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) Reset() {
	*x = LeavesAdjustmentsServiceRecordUpdateRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceRecordUpdateRequest) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceRecordUpdateRequest.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceRecordUpdateRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetLeaveAdjustmentId() uint64 {
	if x != nil {
		return x.LeaveAdjustmentId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetLeaveTypeId() uint64 {
	if x != nil {
		return x.LeaveTypeId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceRecordUpdateRequest) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Describes the parameters that constitute a record associated to a record
type LeaveAdjustmentRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this record
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the leave adjustment ID
	LeaveAdjustmentId uint64 `protobuf:"varint,10,opt,name=leave_adjustment_id,json=leaveAdjustmentId,proto3" json:"leave_adjustment_id,omitempty"`
	// Stores the leave type ID
	LeaveTypeId uint64 `protobuf:"varint,11,opt,name=leave_type_id,json=leaveTypeId,proto3" json:"leave_type_id,omitempty"`
	// Stores the unit of material ID
	UomId uint64 `protobuf:"varint,12,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the quantity of leaves (in cents)
	Quantity      uint64 `protobuf:"varint,13,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveAdjustmentRecord) Reset() {
	*x = LeaveAdjustmentRecord{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveAdjustmentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveAdjustmentRecord) ProtoMessage() {}

func (x *LeaveAdjustmentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveAdjustmentRecord.ProtoReflect.Descriptor instead.
func (*LeaveAdjustmentRecord) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *LeaveAdjustmentRecord) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeaveAdjustmentRecord) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LeaveAdjustmentRecord) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *LeaveAdjustmentRecord) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *LeaveAdjustmentRecord) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LeaveAdjustmentRecord) GetLeaveAdjustmentId() uint64 {
	if x != nil {
		return x.LeaveAdjustmentId
	}
	return 0
}

func (x *LeaveAdjustmentRecord) GetLeaveTypeId() uint64 {
	if x != nil {
		return x.LeaveTypeId
	}
	return 0
}

func (x *LeaveAdjustmentRecord) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *LeaveAdjustmentRecord) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Describes the message consisting of the list of records
type LeavesAdjustmentsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*LeaveAdjustment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsList) Reset() {
	*x = LeavesAdjustmentsList{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsList) ProtoMessage() {}

func (x *LeavesAdjustmentsList) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsList.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsList) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *LeavesAdjustmentsList) GetList() []*LeaveAdjustment {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of leave adjustment records
type LeavesAdjustmentsRecordsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*LeaveAdjustmentRecord `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsRecordsList) Reset() {
	*x = LeavesAdjustmentsRecordsList{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsRecordsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsRecordsList) ProtoMessage() {}

func (x *LeavesAdjustmentsRecordsList) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsRecordsList.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsRecordsList) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *LeavesAdjustmentsRecordsList) GetList() []*LeaveAdjustmentRecord {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type LeavesAdjustmentsRecordsHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the leave adjustment ID
	LeaveAdjustmentId uint64 `protobuf:"varint,10,opt,name=leave_adjustment_id,json=leaveAdjustmentId,proto3" json:"leave_adjustment_id,omitempty"`
	// Stores the leave type ID
	LeaveTypeId   uint64 `protobuf:"varint,11,opt,name=leave_type_id,json=leaveTypeId,proto3" json:"leave_type_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsRecordsHistoryRequest) Reset() {
	*x = LeavesAdjustmentsRecordsHistoryRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsRecordsHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsRecordsHistoryRequest) ProtoMessage() {}

func (x *LeavesAdjustmentsRecordsHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsRecordsHistoryRequest.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsRecordsHistoryRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *LeavesAdjustmentsRecordsHistoryRequest) GetLeaveAdjustmentId() uint64 {
	if x != nil {
		return x.LeaveAdjustmentId
	}
	return 0
}

func (x *LeavesAdjustmentsRecordsHistoryRequest) GetLeaveTypeId() uint64 {
	if x != nil {
		return x.LeaveTypeId
	}
	return 0
}

// Describes a pagination request to retrieve records
type LeavesAdjustmentsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEAVE_ADJUSTMENT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEAVE_ADJUSTMENT_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this record
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServicePaginationReq) Reset() {
	*x = LeavesAdjustmentsServicePaginationReq{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServicePaginationReq) ProtoMessage() {}

func (x *LeavesAdjustmentsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *LeavesAdjustmentsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LeavesAdjustmentsServicePaginationReq) GetSortKey() LEAVE_ADJUSTMENT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED
}

func (x *LeavesAdjustmentsServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type LeavesAdjustmentsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*LeaveAdjustment `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServicePaginationResponse) Reset() {
	*x = LeavesAdjustmentsServicePaginationResponse{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServicePaginationResponse) ProtoMessage() {}

func (x *LeavesAdjustmentsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *LeavesAdjustmentsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginationResponse) GetPayload() []*LeaveAdjustment {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type LeavesAdjustmentsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEAVE_ADJUSTMENT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEAVE_ADJUSTMENT_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this record
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference_id of the leave adjustment
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user for whom this adjustment needs to be made
	UserId        uint64 `protobuf:"varint,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceFilterReq) Reset() {
	*x = LeavesAdjustmentsServiceFilterReq{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceFilterReq) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *LeavesAdjustmentsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceFilterReq) GetSortKey() LEAVE_ADJUSTMENT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeavesAdjustmentsServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *LeavesAdjustmentsServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *LeavesAdjustmentsServiceFilterReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the base request payload of a count search
type LeavesAdjustmentsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this record
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference_id of the leave adjustment
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user for whom this adjustment needs to be made
	UserId        uint64 `protobuf:"varint,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceCountReq) Reset() {
	*x = LeavesAdjustmentsServiceCountReq{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceCountReq) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceCountReq.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *LeavesAdjustmentsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *LeavesAdjustmentsServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *LeavesAdjustmentsServiceCountReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the request payload for performing a generic search operation on records
type LeavesAdjustmentsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEAVE_ADJUSTMENT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEAVE_ADJUSTMENT_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServiceSearchAllReq) Reset() {
	*x = LeavesAdjustmentsServiceSearchAllReq{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServiceSearchAllReq) ProtoMessage() {}

func (x *LeavesAdjustmentsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetSortKey() LEAVE_ADJUSTMENT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEAVE_ADJUSTMENT_SORT_KEY_LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LeavesAdjustmentsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the request payload to retrieve approved or unapproved records.
type LeaveAdjustmentRecordsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEAVE_ADJUSTMENT_RECORD_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEAVE_ADJUSTMENT_RECORD_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the records
	Status LEAVE_ADJUSTMENT_RECORD_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.LEAVE_ADJUSTMENT_RECORD_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the leave adjustment
	LeaveAdjustmentId uint64 `protobuf:"varint,20,opt,name=leave_adjustment_id,json=leaveAdjustmentId,proto3" json:"leave_adjustment_id,omitempty"`
	// The ID of the leave type
	LeaveTypeId uint64 `protobuf:"varint,21,opt,name=leave_type_id,json=leaveTypeId,proto3" json:"leave_type_id,omitempty"`
	// The ID of the UoM
	UomId uint64 `protobuf:"varint,22,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveAdjustmentRecordsSearchRequest) Reset() {
	*x = LeaveAdjustmentRecordsSearchRequest{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveAdjustmentRecordsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveAdjustmentRecordsSearchRequest) ProtoMessage() {}

func (x *LeaveAdjustmentRecordsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveAdjustmentRecordsSearchRequest.ProtoReflect.Descriptor instead.
func (*LeaveAdjustmentRecordsSearchRequest) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetSortKey() LEAVE_ADJUSTMENT_RECORD_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_ADJUSTMENT_RECORD_SORT_KEY_ID_UNSPECIFIED
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetStatus() LEAVE_ADJUSTMENT_RECORD_STATUS {
	if x != nil {
		return x.Status
	}
	return LEAVE_ADJUSTMENT_RECORD_STATUS_LEAVE_ADJUSTMENT_RECORD_STATUS_ANY_UNSPECIFIED
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetLeaveAdjustmentId() uint64 {
	if x != nil {
		return x.LeaveAdjustmentId
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetLeaveTypeId() uint64 {
	if x != nil {
		return x.LeaveTypeId
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *LeaveAdjustmentRecordsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination records request
type LeavesAdjustmentsServicePaginatedRecordsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*LeaveAdjustmentRecord `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) Reset() {
	*x = LeavesAdjustmentsServicePaginatedRecordsResponse{}
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeavesAdjustmentsServicePaginatedRecordsResponse) ProtoMessage() {}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leaves_adjustments_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeavesAdjustmentsServicePaginatedRecordsResponse.ProtoReflect.Descriptor instead.
func (*LeavesAdjustmentsServicePaginatedRecordsResponse) Descriptor() ([]byte, []int) {
	return file_leaves_adjustments_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LeavesAdjustmentsServicePaginatedRecordsResponse) GetPayload() []*LeaveAdjustmentRecord {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_leaves_adjustments_scailo_proto protoreflect.FileDescriptor

const file_leaves_adjustments_scailo_proto_rawDesc = "" +
	"\n" +
	"\x1fleaves_adjustments.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xb1\x02\n" +
	"%LeavesAdjustmentsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\x127\n" +
	"\vdescription\x18\f \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vdescription\"\xaa\x02\n" +
	"%LeavesAdjustmentsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x127\n" +
	"\vdescription\x18\f \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vdescription\"\xa2\x04\n" +
	"\x0fLeaveAdjustment\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\f \x01(\x04R\x06userId\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x121\n" +
	"\x04list\x18\x14 \x03(\v2\x1d.Scailo.LeaveAdjustmentRecordR\x04list\"\xfb\x01\n" +
	"+LeavesAdjustmentsServiceRecordCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x127\n" +
	"\x13leave_adjustment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x11leaveAdjustmentId\x12+\n" +
	"\rleave_type_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\vleaveTypeId\x12\x1e\n" +
	"\x06uom_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12#\n" +
	"\bquantity\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\bquantity\"\x94\x02\n" +
	"+LeavesAdjustmentsServiceRecordUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x127\n" +
	"\x13leave_adjustment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x11leaveAdjustmentId\x12+\n" +
	"\rleave_type_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\vleaveTypeId\x12\x1e\n" +
	"\x06uom_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12#\n" +
	"\bquantity\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\bquantity\"\xa8\x03\n" +
	"\x15LeaveAdjustmentRecord\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x127\n" +
	"\x13leave_adjustment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x11leaveAdjustmentId\x12+\n" +
	"\rleave_type_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\vleaveTypeId\x12\x1e\n" +
	"\x06uom_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12#\n" +
	"\bquantity\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\bquantity\"D\n" +
	"\x15LeavesAdjustmentsList\x12+\n" +
	"\x04list\x18\x01 \x03(\v2\x17.Scailo.LeaveAdjustmentR\x04list\"Q\n" +
	"\x1cLeavesAdjustmentsRecordsList\x121\n" +
	"\x04list\x18\x01 \x03(\v2\x1d.Scailo.LeaveAdjustmentRecordR\x04list\"\x8e\x01\n" +
	"&LeavesAdjustmentsRecordsHistoryRequest\x127\n" +
	"\x13leave_adjustment_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x11leaveAdjustmentId\x12+\n" +
	"\rleave_type_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\vleaveTypeId\"\xc5\x02\n" +
	"%LeavesAdjustmentsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12<\n" +
	"\bsort_key\x18\x05 \x01(\x0e2!.Scailo.LEAVE_ADJUSTMENT_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\xa3\x01\n" +
	"*LeavesAdjustmentsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x121\n" +
	"\apayload\x18\x04 \x03(\v2\x17.Scailo.LeaveAdjustmentR\apayload\"\xc6\a\n" +
	"!LeavesAdjustmentsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12<\n" +
	"\bsort_key\x18\x05 \x01(\x0e2!.Scailo.LEAVE_ADJUSTMENT_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\x16 \x01(\x04R\x06userId\"\x8b\x06\n" +
	" LeavesAdjustmentsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\x16 \x01(\x04R\x06userId\"\x8d\x03\n" +
	"$LeavesAdjustmentsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12<\n" +
	"\bsort_key\x18\x05 \x01(\x0e2!.Scailo.LEAVE_ADJUSTMENT_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\"\xb0\x05\n" +
	"#LeaveAdjustmentRecordsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12C\n" +
	"\bsort_key\x18\x05 \x01(\x0e2(.Scailo.LEAVE_ADJUSTMENT_RECORD_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12>\n" +
	"\x06status\x18\a \x01(\x0e2&.Scailo.LEAVE_ADJUSTMENT_RECORD_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12.\n" +
	"\x13leave_adjustment_id\x18\x14 \x01(\x04R\x11leaveAdjustmentId\x12\"\n" +
	"\rleave_type_id\x18\x15 \x01(\x04R\vleaveTypeId\x12\x15\n" +
	"\x06uom_id\x18\x16 \x01(\x04R\x05uomId\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xaf\x01\n" +
	"0LeavesAdjustmentsServicePaginatedRecordsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x127\n" +
	"\apayload\x18\x04 \x03(\v2\x1d.Scailo.LeaveAdjustmentRecordR\apayload*\xd3\x03\n" +
	"\x19LEAVE_ADJUSTMENT_SORT_KEY\x12,\n" +
	"(LEAVE_ADJUSTMENT_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12(\n" +
	"$LEAVE_ADJUSTMENT_SORT_KEY_CREATED_AT\x10\x01\x12)\n" +
	"%LEAVE_ADJUSTMENT_SORT_KEY_MODIFIED_AT\x10\x02\x12)\n" +
	"%LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_ON\x10\x03\x12)\n" +
	"%LEAVE_ADJUSTMENT_SORT_KEY_APPROVED_BY\x10\x04\x12.\n" +
	"*LEAVE_ADJUSTMENT_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12*\n" +
	"&LEAVE_ADJUSTMENT_SORT_KEY_COMPLETED_ON\x10\x06\x12*\n" +
	"&LEAVE_ADJUSTMENT_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12.\n" +
	"*LEAVE_ADJUSTMENT_SORT_KEY_FINAL_REF_NUMBER\x10\v\x12%\n" +
	"!LEAVE_ADJUSTMENT_SORT_KEY_USER_ID\x10\f*\xe5\x03\n" +
	" LEAVE_ADJUSTMENT_RECORD_SORT_KEY\x123\n" +
	"/LEAVE_ADJUSTMENT_RECORD_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12/\n" +
	"+LEAVE_ADJUSTMENT_RECORD_SORT_KEY_CREATED_AT\x10\x01\x120\n" +
	",LEAVE_ADJUSTMENT_RECORD_SORT_KEY_MODIFIED_AT\x10\x02\x120\n" +
	",LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_ON\x10\x03\x120\n" +
	",LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVED_BY\x10\x04\x125\n" +
	"1LEAVE_ADJUSTMENT_RECORD_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x122\n" +
	".LEAVE_ADJUSTMENT_RECORD_SORT_KEY_LEAVE_TYPE_ID\x10\n" +
	"\x12+\n" +
	"'LEAVE_ADJUSTMENT_RECORD_SORT_KEY_UOM_ID\x10\v\x12-\n" +
	")LEAVE_ADJUSTMENT_RECORD_SORT_KEY_QUANTITY\x10\f*\xb0\x01\n" +
	"\x1eLEAVE_ADJUSTMENT_RECORD_STATUS\x122\n" +
	".LEAVE_ADJUSTMENT_RECORD_STATUS_ANY_UNSPECIFIED\x10\x00\x12+\n" +
	"'LEAVE_ADJUSTMENT_RECORD_STATUS_APPROVED\x10\x01\x12-\n" +
	")LEAVE_ADJUSTMENT_RECORD_STATUS_UNAPPROVED\x10\x022\xd2\x1b\n" +
	"\x18LeavesAdjustmentsService\x12S\n" +
	"\x06Create\x12-.Scailo.LeavesAdjustmentsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x05Draft\x12-.Scailo.LeavesAdjustmentsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\vDraftUpdate\x12-.Scailo.LeavesAdjustmentsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12[\n" +
	"\x0eRevisionUpdate\x12-.Scailo.LeavesAdjustmentsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12k\n" +
	"\x18AddLeaveAdjustmentRecord\x123.Scailo.LeavesAdjustmentsServiceRecordCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12n\n" +
	"\x1bModifyLeaveAdjustmentRecord\x123.Scailo.LeavesAdjustmentsServiceRecordUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12]\n" +
	"\x1cApproveLeaveAdjustmentRecord\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12\\\n" +
	"\x1bDeleteLeaveAdjustmentRecord\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x1dReorderLeaveAdjustmentRecords\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x1dViewLeaveAdjustmentRecordByID\x12\x12.Scailo.Identifier\x1a\x1d.Scailo.LeaveAdjustmentRecord\x12k\n" +
	"\"ViewApprovedLeaveAdjustmentRecords\x12\x1f.Scailo.IdentifierWithSearchKey\x1a$.Scailo.LeavesAdjustmentsRecordsList\x12m\n" +
	"$ViewUnapprovedLeaveAdjustmentRecords\x12\x1f.Scailo.IdentifierWithSearchKey\x1a$.Scailo.LeavesAdjustmentsRecordsList\x12x\n" +
	" ViewLeaveAdjustmentRecordHistory\x12..Scailo.LeavesAdjustmentsRecordsHistoryRequest\x1a$.Scailo.LeavesAdjustmentsRecordsList\x12\x94\x01\n" +
	"+ViewPaginatedApprovedLeaveAdjustmentRecords\x12+.Scailo.LeaveAdjustmentRecordsSearchRequest\x1a8.Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse\x12\x96\x01\n" +
	"-ViewPaginatedUnapprovedLeaveAdjustmentRecords\x12+.Scailo.LeaveAdjustmentRecordsSearchRequest\x1a8.Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse\x12\x84\x01\n" +
	"\x1bSearchRecordsWithPagination\x12+.Scailo.LeaveAdjustmentRecordsSearchRequest\x1a8.Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse\x127\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x17.Scailo.LeaveAdjustment\x12=\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.LeaveAdjustment\x12@\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x17.Scailo.LeaveAdjustment\x12F\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.LeaveAdjustment\x12E\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x1d.Scailo.LeavesAdjustmentsList\x12>\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x1d.Scailo.LeavesAdjustmentsList\x12M\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x1d.Scailo.LeavesAdjustmentsList\x12w\n" +
	"\x12ViewWithPagination\x12-.Scailo.LeavesAdjustmentsServicePaginationReq\x1a2.Scailo.LeavesAdjustmentsServicePaginationResponse\x12X\n" +
	"\tSearchAll\x12,.Scailo.LeavesAdjustmentsServiceSearchAllReq\x1a\x1d.Scailo.LeavesAdjustmentsList\x12R\n" +
	"\x06Filter\x12).Scailo.LeavesAdjustmentsServiceFilterReq\x1a\x1d.Scailo.LeavesAdjustmentsList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12H\n" +
	"\x05Count\x12(.Scailo.LeavesAdjustmentsServiceCountReq\x1a\x15.Scailo.CountResponse\x12P\n" +
	"\rDownloadAsCSV\x12).Scailo.LeavesAdjustmentsServiceFilterReq\x1a\x14.Scailo.StandardFileBn\n" +
	"\n" +
	"com.ScailoB\x1cLeavesAdjustmentsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_leaves_adjustments_scailo_proto_rawDescOnce sync.Once
	file_leaves_adjustments_scailo_proto_rawDescData []byte
)

func file_leaves_adjustments_scailo_proto_rawDescGZIP() []byte {
	file_leaves_adjustments_scailo_proto_rawDescOnce.Do(func() {
		file_leaves_adjustments_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_leaves_adjustments_scailo_proto_rawDesc), len(file_leaves_adjustments_scailo_proto_rawDesc)))
	})
	return file_leaves_adjustments_scailo_proto_rawDescData
}

var file_leaves_adjustments_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_leaves_adjustments_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_leaves_adjustments_scailo_proto_goTypes = []any{
	(LEAVE_ADJUSTMENT_SORT_KEY)(0),                           // 0: Scailo.LEAVE_ADJUSTMENT_SORT_KEY
	(LEAVE_ADJUSTMENT_RECORD_SORT_KEY)(0),                    // 1: Scailo.LEAVE_ADJUSTMENT_RECORD_SORT_KEY
	(LEAVE_ADJUSTMENT_RECORD_STATUS)(0),                      // 2: Scailo.LEAVE_ADJUSTMENT_RECORD_STATUS
	(*LeavesAdjustmentsServiceCreateRequest)(nil),            // 3: Scailo.LeavesAdjustmentsServiceCreateRequest
	(*LeavesAdjustmentsServiceUpdateRequest)(nil),            // 4: Scailo.LeavesAdjustmentsServiceUpdateRequest
	(*LeaveAdjustment)(nil),                                  // 5: Scailo.LeaveAdjustment
	(*LeavesAdjustmentsServiceRecordCreateRequest)(nil),      // 6: Scailo.LeavesAdjustmentsServiceRecordCreateRequest
	(*LeavesAdjustmentsServiceRecordUpdateRequest)(nil),      // 7: Scailo.LeavesAdjustmentsServiceRecordUpdateRequest
	(*LeaveAdjustmentRecord)(nil),                            // 8: Scailo.LeaveAdjustmentRecord
	(*LeavesAdjustmentsList)(nil),                            // 9: Scailo.LeavesAdjustmentsList
	(*LeavesAdjustmentsRecordsList)(nil),                     // 10: Scailo.LeavesAdjustmentsRecordsList
	(*LeavesAdjustmentsRecordsHistoryRequest)(nil),           // 11: Scailo.LeavesAdjustmentsRecordsHistoryRequest
	(*LeavesAdjustmentsServicePaginationReq)(nil),            // 12: Scailo.LeavesAdjustmentsServicePaginationReq
	(*LeavesAdjustmentsServicePaginationResponse)(nil),       // 13: Scailo.LeavesAdjustmentsServicePaginationResponse
	(*LeavesAdjustmentsServiceFilterReq)(nil),                // 14: Scailo.LeavesAdjustmentsServiceFilterReq
	(*LeavesAdjustmentsServiceCountReq)(nil),                 // 15: Scailo.LeavesAdjustmentsServiceCountReq
	(*LeavesAdjustmentsServiceSearchAllReq)(nil),             // 16: Scailo.LeavesAdjustmentsServiceSearchAllReq
	(*LeaveAdjustmentRecordsSearchRequest)(nil),              // 17: Scailo.LeaveAdjustmentRecordsSearchRequest
	(*LeavesAdjustmentsServicePaginatedRecordsResponse)(nil), // 18: Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse
	(*EmployeeMetadata)(nil),                                 // 19: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                 // 20: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                           // 21: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                             // 22: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                                         // 23: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                          // 24: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),                    // 25: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithUserComment)(nil),                        // 26: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                              // 27: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                       // 28: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                          // 29: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                                   // 30: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                                  // 31: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                     // 32: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),                          // 33: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                               // 34: Scailo.IdentifierResponse
	(*CountResponse)(nil),                                    // 35: Scailo.CountResponse
	(*StandardFile)(nil),                                     // 36: Scailo.StandardFile
}
var file_leaves_adjustments_scailo_proto_depIdxs = []int32{
	19, // 0: Scailo.LeaveAdjustment.metadata:type_name -> Scailo.EmployeeMetadata
	20, // 1: Scailo.LeaveAdjustment.approval_metadata:type_name -> Scailo.ApprovalMetadata
	21, // 2: Scailo.LeaveAdjustment.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	22, // 3: Scailo.LeaveAdjustment.logs:type_name -> Scailo.LogbookLogConciseSLC
	8,  // 4: Scailo.LeaveAdjustment.list:type_name -> Scailo.LeaveAdjustmentRecord
	19, // 5: Scailo.LeaveAdjustmentRecord.metadata:type_name -> Scailo.EmployeeMetadata
	20, // 6: Scailo.LeaveAdjustmentRecord.approval_metadata:type_name -> Scailo.ApprovalMetadata
	5,  // 7: Scailo.LeavesAdjustmentsList.list:type_name -> Scailo.LeaveAdjustment
	8,  // 8: Scailo.LeavesAdjustmentsRecordsList.list:type_name -> Scailo.LeaveAdjustmentRecord
	23, // 9: Scailo.LeavesAdjustmentsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 10: Scailo.LeavesAdjustmentsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 11: Scailo.LeavesAdjustmentsServicePaginationReq.sort_key:type_name -> Scailo.LEAVE_ADJUSTMENT_SORT_KEY
	21, // 12: Scailo.LeavesAdjustmentsServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	5,  // 13: Scailo.LeavesAdjustmentsServicePaginationResponse.payload:type_name -> Scailo.LeaveAdjustment
	23, // 14: Scailo.LeavesAdjustmentsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 15: Scailo.LeavesAdjustmentsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 16: Scailo.LeavesAdjustmentsServiceFilterReq.sort_key:type_name -> Scailo.LEAVE_ADJUSTMENT_SORT_KEY
	21, // 17: Scailo.LeavesAdjustmentsServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 18: Scailo.LeavesAdjustmentsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	21, // 19: Scailo.LeavesAdjustmentsServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 20: Scailo.LeavesAdjustmentsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 21: Scailo.LeavesAdjustmentsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 22: Scailo.LeavesAdjustmentsServiceSearchAllReq.sort_key:type_name -> Scailo.LEAVE_ADJUSTMENT_SORT_KEY
	21, // 23: Scailo.LeavesAdjustmentsServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 24: Scailo.LeaveAdjustmentRecordsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 25: Scailo.LeaveAdjustmentRecordsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 26: Scailo.LeaveAdjustmentRecordsSearchRequest.sort_key:type_name -> Scailo.LEAVE_ADJUSTMENT_RECORD_SORT_KEY
	2,  // 27: Scailo.LeaveAdjustmentRecordsSearchRequest.status:type_name -> Scailo.LEAVE_ADJUSTMENT_RECORD_STATUS
	8,  // 28: Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse.payload:type_name -> Scailo.LeaveAdjustmentRecord
	3,  // 29: Scailo.LeavesAdjustmentsService.Create:input_type -> Scailo.LeavesAdjustmentsServiceCreateRequest
	3,  // 30: Scailo.LeavesAdjustmentsService.Draft:input_type -> Scailo.LeavesAdjustmentsServiceCreateRequest
	4,  // 31: Scailo.LeavesAdjustmentsService.DraftUpdate:input_type -> Scailo.LeavesAdjustmentsServiceUpdateRequest
	25, // 32: Scailo.LeavesAdjustmentsService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 33: Scailo.LeavesAdjustmentsService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 34: Scailo.LeavesAdjustmentsService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 35: Scailo.LeavesAdjustmentsService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	4,  // 36: Scailo.LeavesAdjustmentsService.RevisionUpdate:input_type -> Scailo.LeavesAdjustmentsServiceUpdateRequest
	25, // 37: Scailo.LeavesAdjustmentsService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 38: Scailo.LeavesAdjustmentsService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 39: Scailo.LeavesAdjustmentsService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 40: Scailo.LeavesAdjustmentsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 41: Scailo.LeavesAdjustmentsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 42: Scailo.LeavesAdjustmentsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	6,  // 43: Scailo.LeavesAdjustmentsService.AddLeaveAdjustmentRecord:input_type -> Scailo.LeavesAdjustmentsServiceRecordCreateRequest
	7,  // 44: Scailo.LeavesAdjustmentsService.ModifyLeaveAdjustmentRecord:input_type -> Scailo.LeavesAdjustmentsServiceRecordUpdateRequest
	26, // 45: Scailo.LeavesAdjustmentsService.ApproveLeaveAdjustmentRecord:input_type -> Scailo.IdentifierWithUserComment
	26, // 46: Scailo.LeavesAdjustmentsService.DeleteLeaveAdjustmentRecord:input_type -> Scailo.IdentifierWithUserComment
	27, // 47: Scailo.LeavesAdjustmentsService.ReorderLeaveAdjustmentRecords:input_type -> Scailo.ReorderItemsRequest
	28, // 48: Scailo.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordByID:input_type -> Scailo.Identifier
	29, // 49: Scailo.LeavesAdjustmentsService.ViewApprovedLeaveAdjustmentRecords:input_type -> Scailo.IdentifierWithSearchKey
	29, // 50: Scailo.LeavesAdjustmentsService.ViewUnapprovedLeaveAdjustmentRecords:input_type -> Scailo.IdentifierWithSearchKey
	11, // 51: Scailo.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordHistory:input_type -> Scailo.LeavesAdjustmentsRecordsHistoryRequest
	17, // 52: Scailo.LeavesAdjustmentsService.ViewPaginatedApprovedLeaveAdjustmentRecords:input_type -> Scailo.LeaveAdjustmentRecordsSearchRequest
	17, // 53: Scailo.LeavesAdjustmentsService.ViewPaginatedUnapprovedLeaveAdjustmentRecords:input_type -> Scailo.LeaveAdjustmentRecordsSearchRequest
	17, // 54: Scailo.LeavesAdjustmentsService.SearchRecordsWithPagination:input_type -> Scailo.LeaveAdjustmentRecordsSearchRequest
	28, // 55: Scailo.LeavesAdjustmentsService.ViewByID:input_type -> Scailo.Identifier
	30, // 56: Scailo.LeavesAdjustmentsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	28, // 57: Scailo.LeavesAdjustmentsService.ViewEssentialByID:input_type -> Scailo.Identifier
	30, // 58: Scailo.LeavesAdjustmentsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	31, // 59: Scailo.LeavesAdjustmentsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	32, // 60: Scailo.LeavesAdjustmentsService.ViewAll:input_type -> Scailo.ActiveStatus
	30, // 61: Scailo.LeavesAdjustmentsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	12, // 62: Scailo.LeavesAdjustmentsService.ViewWithPagination:input_type -> Scailo.LeavesAdjustmentsServicePaginationReq
	16, // 63: Scailo.LeavesAdjustmentsService.SearchAll:input_type -> Scailo.LeavesAdjustmentsServiceSearchAllReq
	14, // 64: Scailo.LeavesAdjustmentsService.Filter:input_type -> Scailo.LeavesAdjustmentsServiceFilterReq
	33, // 65: Scailo.LeavesAdjustmentsService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	15, // 66: Scailo.LeavesAdjustmentsService.Count:input_type -> Scailo.LeavesAdjustmentsServiceCountReq
	14, // 67: Scailo.LeavesAdjustmentsService.DownloadAsCSV:input_type -> Scailo.LeavesAdjustmentsServiceFilterReq
	34, // 68: Scailo.LeavesAdjustmentsService.Create:output_type -> Scailo.IdentifierResponse
	34, // 69: Scailo.LeavesAdjustmentsService.Draft:output_type -> Scailo.IdentifierResponse
	34, // 70: Scailo.LeavesAdjustmentsService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	34, // 71: Scailo.LeavesAdjustmentsService.SendForVerification:output_type -> Scailo.IdentifierResponse
	34, // 72: Scailo.LeavesAdjustmentsService.Verify:output_type -> Scailo.IdentifierResponse
	34, // 73: Scailo.LeavesAdjustmentsService.Approve:output_type -> Scailo.IdentifierResponse
	34, // 74: Scailo.LeavesAdjustmentsService.SendForRevision:output_type -> Scailo.IdentifierResponse
	34, // 75: Scailo.LeavesAdjustmentsService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	34, // 76: Scailo.LeavesAdjustmentsService.Halt:output_type -> Scailo.IdentifierResponse
	34, // 77: Scailo.LeavesAdjustmentsService.Discard:output_type -> Scailo.IdentifierResponse
	34, // 78: Scailo.LeavesAdjustmentsService.Restore:output_type -> Scailo.IdentifierResponse
	34, // 79: Scailo.LeavesAdjustmentsService.Complete:output_type -> Scailo.IdentifierResponse
	34, // 80: Scailo.LeavesAdjustmentsService.Repeat:output_type -> Scailo.IdentifierResponse
	34, // 81: Scailo.LeavesAdjustmentsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	34, // 82: Scailo.LeavesAdjustmentsService.AddLeaveAdjustmentRecord:output_type -> Scailo.IdentifierResponse
	34, // 83: Scailo.LeavesAdjustmentsService.ModifyLeaveAdjustmentRecord:output_type -> Scailo.IdentifierResponse
	34, // 84: Scailo.LeavesAdjustmentsService.ApproveLeaveAdjustmentRecord:output_type -> Scailo.IdentifierResponse
	34, // 85: Scailo.LeavesAdjustmentsService.DeleteLeaveAdjustmentRecord:output_type -> Scailo.IdentifierResponse
	34, // 86: Scailo.LeavesAdjustmentsService.ReorderLeaveAdjustmentRecords:output_type -> Scailo.IdentifierResponse
	8,  // 87: Scailo.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordByID:output_type -> Scailo.LeaveAdjustmentRecord
	10, // 88: Scailo.LeavesAdjustmentsService.ViewApprovedLeaveAdjustmentRecords:output_type -> Scailo.LeavesAdjustmentsRecordsList
	10, // 89: Scailo.LeavesAdjustmentsService.ViewUnapprovedLeaveAdjustmentRecords:output_type -> Scailo.LeavesAdjustmentsRecordsList
	10, // 90: Scailo.LeavesAdjustmentsService.ViewLeaveAdjustmentRecordHistory:output_type -> Scailo.LeavesAdjustmentsRecordsList
	18, // 91: Scailo.LeavesAdjustmentsService.ViewPaginatedApprovedLeaveAdjustmentRecords:output_type -> Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse
	18, // 92: Scailo.LeavesAdjustmentsService.ViewPaginatedUnapprovedLeaveAdjustmentRecords:output_type -> Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse
	18, // 93: Scailo.LeavesAdjustmentsService.SearchRecordsWithPagination:output_type -> Scailo.LeavesAdjustmentsServicePaginatedRecordsResponse
	5,  // 94: Scailo.LeavesAdjustmentsService.ViewByID:output_type -> Scailo.LeaveAdjustment
	5,  // 95: Scailo.LeavesAdjustmentsService.ViewByUUID:output_type -> Scailo.LeaveAdjustment
	5,  // 96: Scailo.LeavesAdjustmentsService.ViewEssentialByID:output_type -> Scailo.LeaveAdjustment
	5,  // 97: Scailo.LeavesAdjustmentsService.ViewEssentialByUUID:output_type -> Scailo.LeaveAdjustment
	9,  // 98: Scailo.LeavesAdjustmentsService.ViewFromIDs:output_type -> Scailo.LeavesAdjustmentsList
	9,  // 99: Scailo.LeavesAdjustmentsService.ViewAll:output_type -> Scailo.LeavesAdjustmentsList
	9,  // 100: Scailo.LeavesAdjustmentsService.ViewAllForEntityUUID:output_type -> Scailo.LeavesAdjustmentsList
	13, // 101: Scailo.LeavesAdjustmentsService.ViewWithPagination:output_type -> Scailo.LeavesAdjustmentsServicePaginationResponse
	9,  // 102: Scailo.LeavesAdjustmentsService.SearchAll:output_type -> Scailo.LeavesAdjustmentsList
	9,  // 103: Scailo.LeavesAdjustmentsService.Filter:output_type -> Scailo.LeavesAdjustmentsList
	35, // 104: Scailo.LeavesAdjustmentsService.CountInStatus:output_type -> Scailo.CountResponse
	35, // 105: Scailo.LeavesAdjustmentsService.Count:output_type -> Scailo.CountResponse
	36, // 106: Scailo.LeavesAdjustmentsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	68, // [68:107] is the sub-list for method output_type
	29, // [29:68] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_leaves_adjustments_scailo_proto_init() }
func file_leaves_adjustments_scailo_proto_init() {
	if File_leaves_adjustments_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_leaves_adjustments_scailo_proto_rawDesc), len(file_leaves_adjustments_scailo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_leaves_adjustments_scailo_proto_goTypes,
		DependencyIndexes: file_leaves_adjustments_scailo_proto_depIdxs,
		EnumInfos:         file_leaves_adjustments_scailo_proto_enumTypes,
		MessageInfos:      file_leaves_adjustments_scailo_proto_msgTypes,
	}.Build()
	File_leaves_adjustments_scailo_proto = out.File
	file_leaves_adjustments_scailo_proto_goTypes = nil
	file_leaves_adjustments_scailo_proto_depIdxs = nil
}
