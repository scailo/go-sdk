// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: stock_audits.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type STOCK_AUDIT_SORT_KEY int32

const (
	// Fetch ordered results by id
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED STOCK_AUDIT_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_CREATED_AT STOCK_AUDIT_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_MODIFIED_AT STOCK_AUDIT_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_APPROVED_ON STOCK_AUDIT_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_APPROVED_BY STOCK_AUDIT_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_APPROVER_ROLE_ID STOCK_AUDIT_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_COMPLETED_ON STOCK_AUDIT_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_REFERENCE_ID STOCK_AUDIT_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_FINAL_REF_NUMBER STOCK_AUDIT_SORT_KEY = 11
)

// Enum value maps for STOCK_AUDIT_SORT_KEY.
var (
	STOCK_AUDIT_SORT_KEY_name = map[int32]string{
		0:  "STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED",
		1:  "STOCK_AUDIT_SORT_KEY_CREATED_AT",
		2:  "STOCK_AUDIT_SORT_KEY_MODIFIED_AT",
		3:  "STOCK_AUDIT_SORT_KEY_APPROVED_ON",
		4:  "STOCK_AUDIT_SORT_KEY_APPROVED_BY",
		5:  "STOCK_AUDIT_SORT_KEY_APPROVER_ROLE_ID",
		6:  "STOCK_AUDIT_SORT_KEY_COMPLETED_ON",
		10: "STOCK_AUDIT_SORT_KEY_REFERENCE_ID",
		11: "STOCK_AUDIT_SORT_KEY_FINAL_REF_NUMBER",
	}
	STOCK_AUDIT_SORT_KEY_value = map[string]int32{
		"STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED":   0,
		"STOCK_AUDIT_SORT_KEY_CREATED_AT":       1,
		"STOCK_AUDIT_SORT_KEY_MODIFIED_AT":      2,
		"STOCK_AUDIT_SORT_KEY_APPROVED_ON":      3,
		"STOCK_AUDIT_SORT_KEY_APPROVED_BY":      4,
		"STOCK_AUDIT_SORT_KEY_APPROVER_ROLE_ID": 5,
		"STOCK_AUDIT_SORT_KEY_COMPLETED_ON":     6,
		"STOCK_AUDIT_SORT_KEY_REFERENCE_ID":     10,
		"STOCK_AUDIT_SORT_KEY_FINAL_REF_NUMBER": 11,
	}
)

func (x STOCK_AUDIT_SORT_KEY) Enum() *STOCK_AUDIT_SORT_KEY {
	p := new(STOCK_AUDIT_SORT_KEY)
	*p = x
	return p
}

func (x STOCK_AUDIT_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_AUDIT_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_audits_scailo_proto_enumTypes[0].Descriptor()
}

func (STOCK_AUDIT_SORT_KEY) Type() protoreflect.EnumType {
	return &file_stock_audits_scailo_proto_enumTypes[0]
}

func (x STOCK_AUDIT_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_AUDIT_SORT_KEY.Descriptor instead.
func (STOCK_AUDIT_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type STOCK_AUDIT_ITEM_SORT_KEY int32

const (
	// Fetch results by id
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_ID_UNSPECIFIED STOCK_AUDIT_ITEM_SORT_KEY = 0
	// Fetch results by the creation timestamp
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_CREATED_AT STOCK_AUDIT_ITEM_SORT_KEY = 1
	// Fetch results by the modified timestamp
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_MODIFIED_AT STOCK_AUDIT_ITEM_SORT_KEY = 2
	// Fetch results by the approved on timestamp
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_ON STOCK_AUDIT_ITEM_SORT_KEY = 3
	// Fetch results by the approved by field
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_BY STOCK_AUDIT_ITEM_SORT_KEY = 4
	// Fetch results by the approver's role ID
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_APPROVER_ROLE_ID STOCK_AUDIT_ITEM_SORT_KEY = 5
	// Fetch results by the family ID
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_FAMILY_ID STOCK_AUDIT_ITEM_SORT_KEY = 10
	// Fetch results by the physical quantity
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_PHYSICAL_QUANTITY STOCK_AUDIT_ITEM_SORT_KEY = 11
	// Fetch results by the digital quantity
	STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_DIGITAL_QUANTITY STOCK_AUDIT_ITEM_SORT_KEY = 12
)

// Enum value maps for STOCK_AUDIT_ITEM_SORT_KEY.
var (
	STOCK_AUDIT_ITEM_SORT_KEY_name = map[int32]string{
		0:  "STOCK_AUDIT_ITEM_SORT_KEY_ID_UNSPECIFIED",
		1:  "STOCK_AUDIT_ITEM_SORT_KEY_CREATED_AT",
		2:  "STOCK_AUDIT_ITEM_SORT_KEY_MODIFIED_AT",
		3:  "STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_ON",
		4:  "STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_BY",
		5:  "STOCK_AUDIT_ITEM_SORT_KEY_APPROVER_ROLE_ID",
		10: "STOCK_AUDIT_ITEM_SORT_KEY_FAMILY_ID",
		11: "STOCK_AUDIT_ITEM_SORT_KEY_PHYSICAL_QUANTITY",
		12: "STOCK_AUDIT_ITEM_SORT_KEY_DIGITAL_QUANTITY",
	}
	STOCK_AUDIT_ITEM_SORT_KEY_value = map[string]int32{
		"STOCK_AUDIT_ITEM_SORT_KEY_ID_UNSPECIFIED":    0,
		"STOCK_AUDIT_ITEM_SORT_KEY_CREATED_AT":        1,
		"STOCK_AUDIT_ITEM_SORT_KEY_MODIFIED_AT":       2,
		"STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_ON":       3,
		"STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_BY":       4,
		"STOCK_AUDIT_ITEM_SORT_KEY_APPROVER_ROLE_ID":  5,
		"STOCK_AUDIT_ITEM_SORT_KEY_FAMILY_ID":         10,
		"STOCK_AUDIT_ITEM_SORT_KEY_PHYSICAL_QUANTITY": 11,
		"STOCK_AUDIT_ITEM_SORT_KEY_DIGITAL_QUANTITY":  12,
	}
)

func (x STOCK_AUDIT_ITEM_SORT_KEY) Enum() *STOCK_AUDIT_ITEM_SORT_KEY {
	p := new(STOCK_AUDIT_ITEM_SORT_KEY)
	*p = x
	return p
}

func (x STOCK_AUDIT_ITEM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_AUDIT_ITEM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_audits_scailo_proto_enumTypes[1].Descriptor()
}

func (STOCK_AUDIT_ITEM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_stock_audits_scailo_proto_enumTypes[1]
}

func (x STOCK_AUDIT_ITEM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_AUDIT_ITEM_SORT_KEY.Descriptor instead.
func (STOCK_AUDIT_ITEM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the applicable statuses of stock audit items
type STOCK_AUDIT_ITEM_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	STOCK_AUDIT_ITEM_STATUS_STOCK_AUDIT_ITEM_STATUS_ANY_UNSPECIFIED STOCK_AUDIT_ITEM_STATUS = 0
	// Denotes that the stock audit items must have been approved
	STOCK_AUDIT_ITEM_STATUS_STOCK_AUDIT_ITEM_STATUS_APPROVED STOCK_AUDIT_ITEM_STATUS = 1
	// Denotes that the stock audit items must be waiting for approval
	STOCK_AUDIT_ITEM_STATUS_STOCK_AUDIT_ITEM_STATUS_UNAPPROVED STOCK_AUDIT_ITEM_STATUS = 2
)

// Enum value maps for STOCK_AUDIT_ITEM_STATUS.
var (
	STOCK_AUDIT_ITEM_STATUS_name = map[int32]string{
		0: "STOCK_AUDIT_ITEM_STATUS_ANY_UNSPECIFIED",
		1: "STOCK_AUDIT_ITEM_STATUS_APPROVED",
		2: "STOCK_AUDIT_ITEM_STATUS_UNAPPROVED",
	}
	STOCK_AUDIT_ITEM_STATUS_value = map[string]int32{
		"STOCK_AUDIT_ITEM_STATUS_ANY_UNSPECIFIED": 0,
		"STOCK_AUDIT_ITEM_STATUS_APPROVED":        1,
		"STOCK_AUDIT_ITEM_STATUS_UNAPPROVED":      2,
	}
)

func (x STOCK_AUDIT_ITEM_STATUS) Enum() *STOCK_AUDIT_ITEM_STATUS {
	p := new(STOCK_AUDIT_ITEM_STATUS)
	*p = x
	return p
}

func (x STOCK_AUDIT_ITEM_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_AUDIT_ITEM_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_audits_scailo_proto_enumTypes[2].Descriptor()
}

func (STOCK_AUDIT_ITEM_STATUS) Type() protoreflect.EnumType {
	return &file_stock_audits_scailo_proto_enumTypes[2]
}

func (x STOCK_AUDIT_ITEM_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_AUDIT_ITEM_STATUS.Descriptor instead.
func (STOCK_AUDIT_ITEM_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the parameters necessary to create a record
type StockAuditsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock audit
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,15,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServiceCreateRequest) Reset() {
	*x = StockAuditsServiceCreateRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceCreateRequest) ProtoMessage() {}

func (x *StockAuditsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *StockAuditsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockAuditsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockAuditsServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockAuditsServiceCreateRequest) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockAuditsServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type StockAuditsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock audit
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServiceUpdateRequest) Reset() {
	*x = StockAuditsServiceUpdateRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceUpdateRequest) ProtoMessage() {}

func (x *StockAuditsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *StockAuditsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockAuditsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockAuditsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *StockAuditsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockAuditsServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockAuditsServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a standard response
type StockAudit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this stock audit
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this stock audit
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this stock audit
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this stock audit was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock audit
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,15,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The list of associated stock audit items
	List []*StockAuditItem `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAudit) Reset() {
	*x = StockAudit{}
	mi := &file_stock_audits_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAudit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAudit) ProtoMessage() {}

func (x *StockAudit) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAudit.ProtoReflect.Descriptor instead.
func (*StockAudit) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *StockAudit) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAudit) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StockAudit) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *StockAudit) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockAudit) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *StockAudit) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *StockAudit) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockAudit) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockAudit) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockAudit) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockAudit) GetList() []*StockAuditItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *StockAudit) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters required to add an item to a stock audit
type StockAuditsServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the stock audit ID
	StockAuditId uint64 `protobuf:"varint,10,opt,name=stock_audit_id,json=stockAuditId,proto3" json:"stock_audit_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The hash of the inventory item
	ItemHash string `protobuf:"bytes,12,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	// The physically available quantity (in cents)
	PhysicalQuantity uint64 `protobuf:"varint,13,opt,name=physical_quantity,json=physicalQuantity,proto3" json:"physical_quantity,omitempty"`
	// The digitally available quantity (in cents)
	// uint64 digital_quantity = 14 [(buf.validate.field).uint64.gt = 0];
	// The reason for reconciliation
	ReconciliationReason string `protobuf:"bytes,15,opt,name=reconciliation_reason,json=reconciliationReason,proto3" json:"reconciliation_reason,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StockAuditsServiceItemCreateRequest) Reset() {
	*x = StockAuditsServiceItemCreateRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceItemCreateRequest) ProtoMessage() {}

func (x *StockAuditsServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *StockAuditsServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockAuditsServiceItemCreateRequest) GetStockAuditId() uint64 {
	if x != nil {
		return x.StockAuditId
	}
	return 0
}

func (x *StockAuditsServiceItemCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockAuditsServiceItemCreateRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

func (x *StockAuditsServiceItemCreateRequest) GetPhysicalQuantity() uint64 {
	if x != nil {
		return x.PhysicalQuantity
	}
	return 0
}

func (x *StockAuditsServiceItemCreateRequest) GetReconciliationReason() string {
	if x != nil {
		return x.ReconciliationReason
	}
	return ""
}

// Describes the parameters required to update an item in a stock audit
type StockAuditsServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The hash of the inventory item
	ItemHash string `protobuf:"bytes,12,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	// The physically available quantity (in cents)
	PhysicalQuantity uint64 `protobuf:"varint,13,opt,name=physical_quantity,json=physicalQuantity,proto3" json:"physical_quantity,omitempty"`
	// The digitally available quantity (in cents)
	// uint64 digital_quantity = 14 [(buf.validate.field).uint64.gt = 0];
	// The reason for reconciliation
	ReconciliationReason string `protobuf:"bytes,15,opt,name=reconciliation_reason,json=reconciliationReason,proto3" json:"reconciliation_reason,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StockAuditsServiceItemUpdateRequest) Reset() {
	*x = StockAuditsServiceItemUpdateRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceItemUpdateRequest) ProtoMessage() {}

func (x *StockAuditsServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *StockAuditsServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockAuditsServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockAuditsServiceItemUpdateRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

func (x *StockAuditsServiceItemUpdateRequest) GetPhysicalQuantity() uint64 {
	if x != nil {
		return x.PhysicalQuantity
	}
	return 0
}

func (x *StockAuditsServiceItemUpdateRequest) GetReconciliationReason() string {
	if x != nil {
		return x.ReconciliationReason
	}
	return ""
}

// Describes the parameters that constitute an item associated to a stock audit
type StockAuditItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this stock audit
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the stock audit ID
	StockAuditId uint64 `protobuf:"varint,10,opt,name=stock_audit_id,json=stockAuditId,proto3" json:"stock_audit_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The hash of the inventory item
	ItemHash string `protobuf:"bytes,12,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	// The physically available quantity (in cents)
	PhysicalQuantity uint64 `protobuf:"varint,13,opt,name=physical_quantity,json=physicalQuantity,proto3" json:"physical_quantity,omitempty"`
	// The digitally available quantity (in cents)
	DigitalQuantity uint64 `protobuf:"varint,14,opt,name=digital_quantity,json=digitalQuantity,proto3" json:"digital_quantity,omitempty"`
	// The reason for reconciliation
	ReconciliationReason string `protobuf:"bytes,15,opt,name=reconciliation_reason,json=reconciliationReason,proto3" json:"reconciliation_reason,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StockAuditItem) Reset() {
	*x = StockAuditItem{}
	mi := &file_stock_audits_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditItem) ProtoMessage() {}

func (x *StockAuditItem) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditItem.ProtoReflect.Descriptor instead.
func (*StockAuditItem) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *StockAuditItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StockAuditItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *StockAuditItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *StockAuditItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockAuditItem) GetStockAuditId() uint64 {
	if x != nil {
		return x.StockAuditId
	}
	return 0
}

func (x *StockAuditItem) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockAuditItem) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

func (x *StockAuditItem) GetPhysicalQuantity() uint64 {
	if x != nil {
		return x.PhysicalQuantity
	}
	return 0
}

func (x *StockAuditItem) GetDigitalQuantity() uint64 {
	if x != nil {
		return x.DigitalQuantity
	}
	return 0
}

func (x *StockAuditItem) GetReconciliationReason() string {
	if x != nil {
		return x.ReconciliationReason
	}
	return ""
}

// Describes the message consisting of the list of stock audits
type StockAuditsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*StockAudit `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsList) Reset() {
	*x = StockAuditsList{}
	mi := &file_stock_audits_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsList) ProtoMessage() {}

func (x *StockAuditsList) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsList.ProtoReflect.Descriptor instead.
func (*StockAuditsList) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *StockAuditsList) GetList() []*StockAudit {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of stock audit items
type StockAuditsItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*StockAuditItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsItemsList) Reset() {
	*x = StockAuditsItemsList{}
	mi := &file_stock_audits_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsItemsList) ProtoMessage() {}

func (x *StockAuditsItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsItemsList.ProtoReflect.Descriptor instead.
func (*StockAuditsItemsList) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *StockAuditsItemsList) GetList() []*StockAuditItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type StockAuditItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the stock audit ID
	StockAuditId uint64 `protobuf:"varint,10,opt,name=stock_audit_id,json=stockAuditId,proto3" json:"stock_audit_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditItemHistoryRequest) Reset() {
	*x = StockAuditItemHistoryRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditItemHistoryRequest) ProtoMessage() {}

func (x *StockAuditItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*StockAuditItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *StockAuditItemHistoryRequest) GetStockAuditId() uint64 {
	if x != nil {
		return x.StockAuditId
	}
	return 0
}

func (x *StockAuditItemHistoryRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the parameters that are required to retrieve the info of a prospective stock audit item
type StockAuditItemProspectiveInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the stock audit ID
	StockAuditId uint64 `protobuf:"varint,10,opt,name=stock_audit_id,json=stockAuditId,proto3" json:"stock_audit_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditItemProspectiveInfoRequest) Reset() {
	*x = StockAuditItemProspectiveInfoRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditItemProspectiveInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditItemProspectiveInfoRequest) ProtoMessage() {}

func (x *StockAuditItemProspectiveInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditItemProspectiveInfoRequest.ProtoReflect.Descriptor instead.
func (*StockAuditItemProspectiveInfoRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *StockAuditItemProspectiveInfoRequest) GetStockAuditId() uint64 {
	if x != nil {
		return x.StockAuditId
	}
	return 0
}

func (x *StockAuditItemProspectiveInfoRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes a pagination request to retrieve records
type StockAuditsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_AUDIT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_AUDIT_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this stock audit
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServicePaginationReq) Reset() {
	*x = StockAuditsServicePaginationReq{}
	mi := &file_stock_audits_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServicePaginationReq) ProtoMessage() {}

func (x *StockAuditsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*StockAuditsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *StockAuditsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockAuditsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockAuditsServicePaginationReq) GetSortKey() STOCK_AUDIT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockAuditsServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type StockAuditsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*StockAudit `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServicePaginationResponse) Reset() {
	*x = StockAuditsServicePaginationResponse{}
	mi := &file_stock_audits_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServicePaginationResponse) ProtoMessage() {}

func (x *StockAuditsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*StockAuditsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *StockAuditsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StockAuditsServicePaginationResponse) GetPayload() []*StockAudit {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type StockAuditsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_AUDIT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_AUDIT_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this stock audit
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the stock audit
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,25,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServiceFilterReq) Reset() {
	*x = StockAuditsServiceFilterReq{}
	mi := &file_stock_audits_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceFilterReq) ProtoMessage() {}

func (x *StockAuditsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *StockAuditsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockAuditsServiceFilterReq) GetSortKey() STOCK_AUDIT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockAuditsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditsServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockAuditsServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockAuditsServiceFilterReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockAuditsServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type StockAuditsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this stock audit
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the stock audit
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,25,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServiceCountReq) Reset() {
	*x = StockAuditsServiceCountReq{}
	mi := &file_stock_audits_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceCountReq) ProtoMessage() {}

func (x *StockAuditsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceCountReq.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *StockAuditsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditsServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockAuditsServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockAuditsServiceCountReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockAuditsServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type StockAuditsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_AUDIT_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_AUDIT_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServiceSearchAllReq) Reset() {
	*x = StockAuditsServiceSearchAllReq{}
	mi := &file_stock_audits_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServiceSearchAllReq) ProtoMessage() {}

func (x *StockAuditsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*StockAuditsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *StockAuditsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockAuditsServiceSearchAllReq) GetSortKey() STOCK_AUDIT_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_AUDIT_SORT_KEY_STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockAuditsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditsServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockAuditsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the request payload to retrieve approved or unapproved items.
type StockAuditItemsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_AUDIT_ITEM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_AUDIT_ITEM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the items
	Status STOCK_AUDIT_ITEM_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.STOCK_AUDIT_ITEM_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the stock audit
	StockAuditId uint64 `protobuf:"varint,20,opt,name=stock_audit_id,json=stockAuditId,proto3" json:"stock_audit_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,21,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the item hash
	ItemHash string `protobuf:"bytes,22,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditItemsSearchRequest) Reset() {
	*x = StockAuditItemsSearchRequest{}
	mi := &file_stock_audits_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditItemsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditItemsSearchRequest) ProtoMessage() {}

func (x *StockAuditItemsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditItemsSearchRequest.ProtoReflect.Descriptor instead.
func (*StockAuditItemsSearchRequest) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *StockAuditItemsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockAuditItemsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockAuditItemsSearchRequest) GetSortKey() STOCK_AUDIT_ITEM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_AUDIT_ITEM_SORT_KEY_STOCK_AUDIT_ITEM_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockAuditItemsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockAuditItemsSearchRequest) GetStatus() STOCK_AUDIT_ITEM_STATUS {
	if x != nil {
		return x.Status
	}
	return STOCK_AUDIT_ITEM_STATUS_STOCK_AUDIT_ITEM_STATUS_ANY_UNSPECIFIED
}

func (x *StockAuditItemsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetStockAuditId() uint64 {
	if x != nil {
		return x.StockAuditId
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockAuditItemsSearchRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

func (x *StockAuditItemsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination items request
type StockAuditsServicePaginatedItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*StockAuditItem `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockAuditsServicePaginatedItemsResponse) Reset() {
	*x = StockAuditsServicePaginatedItemsResponse{}
	mi := &file_stock_audits_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockAuditsServicePaginatedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockAuditsServicePaginatedItemsResponse) ProtoMessage() {}

func (x *StockAuditsServicePaginatedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stock_audits_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockAuditsServicePaginatedItemsResponse.ProtoReflect.Descriptor instead.
func (*StockAuditsServicePaginatedItemsResponse) Descriptor() ([]byte, []int) {
	return file_stock_audits_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *StockAuditsServicePaginatedItemsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockAuditsServicePaginatedItemsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockAuditsServicePaginatedItemsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StockAuditsServicePaginatedItemsResponse) GetPayload() []*StockAuditItem {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_stock_audits_scailo_proto protoreflect.FileDescriptor

const file_stock_audits_scailo_proto_rawDesc = "" +
	"\n" +
	"\x19stock_audits.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x15families.scailo.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\xbc\x02\n" +
	"\x1fStockAuditsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12(\n" +
	"\vlocation_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"locationId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xad\x02\n" +
	"\x1fStockAuditsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xb1\x04\n" +
	"\n" +
	"StockAudit\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x12\x1f\n" +
	"\vlocation_id\x18\x0f \x01(\x04R\n" +
	"locationId\x12*\n" +
	"\x04list\x18\x14 \x03(\v2\x16.Scailo.StockAuditItemR\x04list\x123\n" +
	"\tform_data\x18\x1e \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"\xbb\x02\n" +
	"#StockAuditsServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12-\n" +
	"\x0estock_audit_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fstockAuditId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12(\n" +
	"\titem_hash\x18\f \x01(\tB\v\xbaH\br\x06\x10\x80\x01\x18\x80\x01R\bitemHash\x124\n" +
	"\x11physical_quantity\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\x10physicalQuantity\x12<\n" +
	"\x15reconciliation_reason\x18\x0f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x14reconciliationReason\"\xff\x01\n" +
	"#StockAuditsServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12(\n" +
	"\titem_hash\x18\f \x01(\tB\v\xbaH\br\x06\x10\x80\x01\x18\x80\x01R\bitemHash\x124\n" +
	"\x11physical_quantity\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\x10physicalQuantity\x12<\n" +
	"\x15reconciliation_reason\x18\x0f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x14reconciliationReason\"\xe3\x03\n" +
	"\x0eStockAuditItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12$\n" +
	"\x0estock_audit_id\x18\n" +
	" \x01(\x04R\fstockAuditId\x12\x1b\n" +
	"\tfamily_id\x18\v \x01(\x04R\bfamilyId\x12\x1b\n" +
	"\titem_hash\x18\f \x01(\tR\bitemHash\x12+\n" +
	"\x11physical_quantity\x18\r \x01(\x04R\x10physicalQuantity\x12)\n" +
	"\x10digital_quantity\x18\x0e \x01(\x04R\x0fdigitalQuantity\x123\n" +
	"\x15reconciliation_reason\x18\x0f \x01(\tR\x14reconciliationReason\"9\n" +
	"\x0fStockAuditsList\x12&\n" +
	"\x04list\x18\x01 \x03(\v2\x12.Scailo.StockAuditR\x04list\"B\n" +
	"\x14StockAuditsItemsList\x12*\n" +
	"\x04list\x18\x01 \x03(\v2\x16.Scailo.StockAuditItemR\x04list\"s\n" +
	"\x1cStockAuditItemHistoryRequest\x12-\n" +
	"\x0estock_audit_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fstockAuditId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"{\n" +
	"$StockAuditItemProspectiveInfoRequest\x12-\n" +
	"\x0estock_audit_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fstockAuditId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xba\x02\n" +
	"\x1fStockAuditsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.STOCK_AUDIT_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x98\x01\n" +
	"$StockAuditsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12,\n" +
	"\apayload\x18\x04 \x03(\v2\x12.Scailo.StockAuditR\apayload\"\xa3\b\n" +
	"\x1bStockAuditsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.STOCK_AUDIT_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x1f\n" +
	"\vlocation_id\x18\x19 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xed\x06\n" +
	"\x1aStockAuditsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x1f\n" +
	"\vlocation_id\x18\x19 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\x82\x03\n" +
	"\x1eStockAuditsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.STOCK_AUDIT_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\"\x90\x05\n" +
	"\x1cStockAuditItemsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12<\n" +
	"\bsort_key\x18\x05 \x01(\x0e2!.Scailo.STOCK_AUDIT_ITEM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x127\n" +
	"\x06status\x18\a \x01(\x0e2\x1f.Scailo.STOCK_AUDIT_ITEM_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12$\n" +
	"\x0estock_audit_id\x18\x14 \x01(\x04R\fstockAuditId\x12\x1b\n" +
	"\tfamily_id\x18\x15 \x01(\x04R\bfamilyId\x12\x1b\n" +
	"\titem_hash\x18\x16 \x01(\tR\bitemHash\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xa0\x01\n" +
	"(StockAuditsServicePaginatedItemsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x120\n" +
	"\apayload\x18\x04 \x03(\v2\x16.Scailo.StockAuditItemR\apayload*\xfa\x02\n" +
	"\x14STOCK_AUDIT_SORT_KEY\x12'\n" +
	"#STOCK_AUDIT_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fSTOCK_AUDIT_SORT_KEY_CREATED_AT\x10\x01\x12$\n" +
	" STOCK_AUDIT_SORT_KEY_MODIFIED_AT\x10\x02\x12$\n" +
	" STOCK_AUDIT_SORT_KEY_APPROVED_ON\x10\x03\x12$\n" +
	" STOCK_AUDIT_SORT_KEY_APPROVED_BY\x10\x04\x12)\n" +
	"%STOCK_AUDIT_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12%\n" +
	"!STOCK_AUDIT_SORT_KEY_COMPLETED_ON\x10\x06\x12%\n" +
	"!STOCK_AUDIT_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12)\n" +
	"%STOCK_AUDIT_SORT_KEY_FINAL_REF_NUMBER\x10\v*\xae\x03\n" +
	"\x19STOCK_AUDIT_ITEM_SORT_KEY\x12,\n" +
	"(STOCK_AUDIT_ITEM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12(\n" +
	"$STOCK_AUDIT_ITEM_SORT_KEY_CREATED_AT\x10\x01\x12)\n" +
	"%STOCK_AUDIT_ITEM_SORT_KEY_MODIFIED_AT\x10\x02\x12)\n" +
	"%STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_ON\x10\x03\x12)\n" +
	"%STOCK_AUDIT_ITEM_SORT_KEY_APPROVED_BY\x10\x04\x12.\n" +
	"*STOCK_AUDIT_ITEM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12'\n" +
	"#STOCK_AUDIT_ITEM_SORT_KEY_FAMILY_ID\x10\n" +
	"\x12/\n" +
	"+STOCK_AUDIT_ITEM_SORT_KEY_PHYSICAL_QUANTITY\x10\v\x12.\n" +
	"*STOCK_AUDIT_ITEM_SORT_KEY_DIGITAL_QUANTITY\x10\f*\x94\x01\n" +
	"\x17STOCK_AUDIT_ITEM_STATUS\x12+\n" +
	"'STOCK_AUDIT_ITEM_STATUS_ANY_UNSPECIFIED\x10\x00\x12$\n" +
	" STOCK_AUDIT_ITEM_STATUS_APPROVED\x10\x01\x12&\n" +
	"\"STOCK_AUDIT_ITEM_STATUS_UNAPPROVED\x10\x022\xc9\"\n" +
	"\x12StockAuditsService\x12M\n" +
	"\x06Create\x12'.Scailo.StockAuditsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\x05Draft\x12'.Scailo.StockAuditsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\vDraftUpdate\x12'.Scailo.StockAuditsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x0eRevisionUpdate\x12'.Scailo.StockAuditsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12@\n" +
	"\rIsCompletable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12\\\n" +
	"\x11AddStockAuditItem\x12+.Scailo.StockAuditsServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x14ModifyStockAuditItem\x12+.Scailo.StockAuditsServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12V\n" +
	"\x15ApproveStockAuditItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x14DeleteStockAuditItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\x16ReorderStockAuditItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12D\n" +
	"\x16ViewStockAuditItemByID\x12\x12.Scailo.Identifier\x1a\x16.Scailo.StockAuditItem\x12T\n" +
	"!ViewStockAuditItemByInventoryHash\x12\x17.Scailo.SimpleSearchReq\x1a\x16.Scailo.StockAuditItem\x12\\\n" +
	"\x1bViewApprovedStockAuditItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1c.Scailo.StockAuditsItemsList\x12^\n" +
	"\x1dViewUnapprovedStockAuditItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1c.Scailo.StockAuditsItemsList\x12_\n" +
	"\x19ViewStockAuditItemHistory\x12$.Scailo.StockAuditItemHistoryRequest\x1a\x1c.Scailo.StockAuditsItemsList\x12~\n" +
	"$ViewPaginatedApprovedStockAuditItems\x12$.Scailo.StockAuditItemsSearchRequest\x1a0.Scailo.StockAuditsServicePaginatedItemsResponse\x12\x80\x01\n" +
	"&ViewPaginatedUnapprovedStockAuditItems\x12$.Scailo.StockAuditItemsSearchRequest\x1a0.Scailo.StockAuditsServicePaginatedItemsResponse\x12s\n" +
	"\x19SearchItemsWithPagination\x12$.Scailo.StockAuditItemsSearchRequest\x1a0.Scailo.StockAuditsServicePaginatedItemsResponse\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12P\n" +
	"\x15UploadStockAuditItems\x12\x1e.Scailo.IdentifierUUIDWithFile\x1a\x17.Scailo.IdentifiersList\x122\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.StockAudit\x128\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.StockAudit\x12@\n" +
	"\x11ViewByReferenceID\x12\x17.Scailo.SimpleSearchReq\x1a\x12.Scailo.StockAudit\x12;\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.StockAudit\x12A\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.StockAudit\x12?\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x17.Scailo.StockAuditsList\x128\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x17.Scailo.StockAuditsList\x12G\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.StockAuditsList\x12k\n" +
	"\x12ViewWithPagination\x12'.Scailo.StockAuditsServicePaginationReq\x1a,.Scailo.StockAuditsServicePaginationResponse\x12P\n" +
	"\x17ViewProspectiveFamilies\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x14.Scailo.FamiliesList\x12Y\n" +
	"\x19FilterProspectiveFamilies\x12&.Scailo.FilterFamiliesReqForIdentifier\x1a\x14.Scailo.FamiliesList\x12z\n" +
	"\x1dViewProspectiveStockAuditItem\x12,.Scailo.StockAuditItemProspectiveInfoRequest\x1a+.Scailo.StockAuditsServiceItemCreateRequest\x12C\n" +
	"\x13DownloadLabelByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x0eIsDownloadable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12>\n" +
	"\x0eDownloadByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12L\n" +
	"\tSearchAll\x12&.Scailo.StockAuditsServiceSearchAllReq\x1a\x17.Scailo.StockAuditsList\x12F\n" +
	"\x06Filter\x12#.Scailo.StockAuditsServiceFilterReq\x1a\x17.Scailo.StockAuditsList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12B\n" +
	"\x05Count\x12\".Scailo.StockAuditsServiceCountReq\x1a\x15.Scailo.CountResponse\x12J\n" +
	"\rDownloadAsCSV\x12#.Scailo.StockAuditsServiceFilterReq\x1a\x14.Scailo.StandardFileBh\n" +
	"\n" +
	"com.ScailoB\x16StockAuditsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_stock_audits_scailo_proto_rawDescOnce sync.Once
	file_stock_audits_scailo_proto_rawDescData []byte
)

func file_stock_audits_scailo_proto_rawDescGZIP() []byte {
	file_stock_audits_scailo_proto_rawDescOnce.Do(func() {
		file_stock_audits_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stock_audits_scailo_proto_rawDesc), len(file_stock_audits_scailo_proto_rawDesc)))
	})
	return file_stock_audits_scailo_proto_rawDescData
}

var file_stock_audits_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_stock_audits_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_stock_audits_scailo_proto_goTypes = []any{
	(STOCK_AUDIT_SORT_KEY)(0),                                 // 0: Scailo.STOCK_AUDIT_SORT_KEY
	(STOCK_AUDIT_ITEM_SORT_KEY)(0),                            // 1: Scailo.STOCK_AUDIT_ITEM_SORT_KEY
	(STOCK_AUDIT_ITEM_STATUS)(0),                              // 2: Scailo.STOCK_AUDIT_ITEM_STATUS
	(*StockAuditsServiceCreateRequest)(nil),                   // 3: Scailo.StockAuditsServiceCreateRequest
	(*StockAuditsServiceUpdateRequest)(nil),                   // 4: Scailo.StockAuditsServiceUpdateRequest
	(*StockAudit)(nil),                                        // 5: Scailo.StockAudit
	(*StockAuditsServiceItemCreateRequest)(nil),               // 6: Scailo.StockAuditsServiceItemCreateRequest
	(*StockAuditsServiceItemUpdateRequest)(nil),               // 7: Scailo.StockAuditsServiceItemUpdateRequest
	(*StockAuditItem)(nil),                                    // 8: Scailo.StockAuditItem
	(*StockAuditsList)(nil),                                   // 9: Scailo.StockAuditsList
	(*StockAuditsItemsList)(nil),                              // 10: Scailo.StockAuditsItemsList
	(*StockAuditItemHistoryRequest)(nil),                      // 11: Scailo.StockAuditItemHistoryRequest
	(*StockAuditItemProspectiveInfoRequest)(nil),              // 12: Scailo.StockAuditItemProspectiveInfoRequest
	(*StockAuditsServicePaginationReq)(nil),                   // 13: Scailo.StockAuditsServicePaginationReq
	(*StockAuditsServicePaginationResponse)(nil),              // 14: Scailo.StockAuditsServicePaginationResponse
	(*StockAuditsServiceFilterReq)(nil),                       // 15: Scailo.StockAuditsServiceFilterReq
	(*StockAuditsServiceCountReq)(nil),                        // 16: Scailo.StockAuditsServiceCountReq
	(*StockAuditsServiceSearchAllReq)(nil),                    // 17: Scailo.StockAuditsServiceSearchAllReq
	(*StockAuditItemsSearchRequest)(nil),                      // 18: Scailo.StockAuditItemsSearchRequest
	(*StockAuditsServicePaginatedItemsResponse)(nil),          // 19: Scailo.StockAuditsServicePaginatedItemsResponse
	(*FormFieldDatumCreateRequest)(nil),                       // 20: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                  // 21: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                  // 22: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                            // 23: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                              // 24: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                    // 25: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                          // 26: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                           // 27: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                       // 28: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                     // 29: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),                     // 30: Scailo.IdentifierWithEmailAttributes
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil), // 31: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*IdentifierUUID)(nil),                                    // 32: Scailo.IdentifierUUID
	(*IdentifierWithUserComment)(nil),                         // 33: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                               // 34: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                        // 35: Scailo.Identifier
	(*SimpleSearchReq)(nil),                                   // 36: Scailo.SimpleSearchReq
	(*IdentifierWithSearchKey)(nil),                           // 37: Scailo.IdentifierWithSearchKey
	(*Empty)(nil),                                             // 38: Scailo.Empty
	(*IdentifierUUIDWithFile)(nil),                            // 39: Scailo.IdentifierUUIDWithFile
	(*IdentifiersList)(nil),                                   // 40: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                      // 41: Scailo.ActiveStatus
	(*FilterFamiliesReqForIdentifier)(nil),                    // 42: Scailo.FilterFamiliesReqForIdentifier
	(*CountInSLCStatusRequest)(nil),                           // 43: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                // 44: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                         // 45: Scailo.MagicLink
	(*BooleanResponse)(nil),                                   // 46: Scailo.BooleanResponse
	(*StandardFile)(nil),                                      // 47: Scailo.StandardFile
	(*FamiliesList)(nil),                                      // 48: Scailo.FamiliesList
	(*CountResponse)(nil),                                     // 49: Scailo.CountResponse
}
var file_stock_audits_scailo_proto_depIdxs = []int32{
	20, // 0: Scailo.StockAuditsServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	20, // 1: Scailo.StockAuditsServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	21, // 2: Scailo.StockAudit.metadata:type_name -> Scailo.EmployeeMetadata
	22, // 3: Scailo.StockAudit.approval_metadata:type_name -> Scailo.ApprovalMetadata
	23, // 4: Scailo.StockAudit.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	24, // 5: Scailo.StockAudit.logs:type_name -> Scailo.LogbookLogConciseSLC
	8,  // 6: Scailo.StockAudit.list:type_name -> Scailo.StockAuditItem
	25, // 7: Scailo.StockAudit.form_data:type_name -> Scailo.FormFieldDatum
	21, // 8: Scailo.StockAuditItem.metadata:type_name -> Scailo.EmployeeMetadata
	22, // 9: Scailo.StockAuditItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	5,  // 10: Scailo.StockAuditsList.list:type_name -> Scailo.StockAudit
	8,  // 11: Scailo.StockAuditsItemsList.list:type_name -> Scailo.StockAuditItem
	26, // 12: Scailo.StockAuditsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	27, // 13: Scailo.StockAuditsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 14: Scailo.StockAuditsServicePaginationReq.sort_key:type_name -> Scailo.STOCK_AUDIT_SORT_KEY
	23, // 15: Scailo.StockAuditsServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	5,  // 16: Scailo.StockAuditsServicePaginationResponse.payload:type_name -> Scailo.StockAudit
	26, // 17: Scailo.StockAuditsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	27, // 18: Scailo.StockAuditsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 19: Scailo.StockAuditsServiceFilterReq.sort_key:type_name -> Scailo.STOCK_AUDIT_SORT_KEY
	23, // 20: Scailo.StockAuditsServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	28, // 21: Scailo.StockAuditsServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	26, // 22: Scailo.StockAuditsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	23, // 23: Scailo.StockAuditsServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	28, // 24: Scailo.StockAuditsServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	26, // 25: Scailo.StockAuditsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	27, // 26: Scailo.StockAuditsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 27: Scailo.StockAuditsServiceSearchAllReq.sort_key:type_name -> Scailo.STOCK_AUDIT_SORT_KEY
	23, // 28: Scailo.StockAuditsServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	26, // 29: Scailo.StockAuditItemsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	27, // 30: Scailo.StockAuditItemsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 31: Scailo.StockAuditItemsSearchRequest.sort_key:type_name -> Scailo.STOCK_AUDIT_ITEM_SORT_KEY
	2,  // 32: Scailo.StockAuditItemsSearchRequest.status:type_name -> Scailo.STOCK_AUDIT_ITEM_STATUS
	8,  // 33: Scailo.StockAuditsServicePaginatedItemsResponse.payload:type_name -> Scailo.StockAuditItem
	3,  // 34: Scailo.StockAuditsService.Create:input_type -> Scailo.StockAuditsServiceCreateRequest
	3,  // 35: Scailo.StockAuditsService.Draft:input_type -> Scailo.StockAuditsServiceCreateRequest
	4,  // 36: Scailo.StockAuditsService.DraftUpdate:input_type -> Scailo.StockAuditsServiceUpdateRequest
	29, // 37: Scailo.StockAuditsService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 38: Scailo.StockAuditsService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 39: Scailo.StockAuditsService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 40: Scailo.StockAuditsService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	4,  // 41: Scailo.StockAuditsService.RevisionUpdate:input_type -> Scailo.StockAuditsServiceUpdateRequest
	29, // 42: Scailo.StockAuditsService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 43: Scailo.StockAuditsService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 44: Scailo.StockAuditsService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 45: Scailo.StockAuditsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 46: Scailo.StockAuditsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 47: Scailo.StockAuditsService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 48: Scailo.StockAuditsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	30, // 49: Scailo.StockAuditsService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	31, // 50: Scailo.StockAuditsService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	32, // 51: Scailo.StockAuditsService.IsCompletable:input_type -> Scailo.IdentifierUUID
	6,  // 52: Scailo.StockAuditsService.AddStockAuditItem:input_type -> Scailo.StockAuditsServiceItemCreateRequest
	7,  // 53: Scailo.StockAuditsService.ModifyStockAuditItem:input_type -> Scailo.StockAuditsServiceItemUpdateRequest
	33, // 54: Scailo.StockAuditsService.ApproveStockAuditItem:input_type -> Scailo.IdentifierWithUserComment
	33, // 55: Scailo.StockAuditsService.DeleteStockAuditItem:input_type -> Scailo.IdentifierWithUserComment
	34, // 56: Scailo.StockAuditsService.ReorderStockAuditItems:input_type -> Scailo.ReorderItemsRequest
	35, // 57: Scailo.StockAuditsService.ViewStockAuditItemByID:input_type -> Scailo.Identifier
	36, // 58: Scailo.StockAuditsService.ViewStockAuditItemByInventoryHash:input_type -> Scailo.SimpleSearchReq
	37, // 59: Scailo.StockAuditsService.ViewApprovedStockAuditItems:input_type -> Scailo.IdentifierWithSearchKey
	37, // 60: Scailo.StockAuditsService.ViewUnapprovedStockAuditItems:input_type -> Scailo.IdentifierWithSearchKey
	11, // 61: Scailo.StockAuditsService.ViewStockAuditItemHistory:input_type -> Scailo.StockAuditItemHistoryRequest
	18, // 62: Scailo.StockAuditsService.ViewPaginatedApprovedStockAuditItems:input_type -> Scailo.StockAuditItemsSearchRequest
	18, // 63: Scailo.StockAuditsService.ViewPaginatedUnapprovedStockAuditItems:input_type -> Scailo.StockAuditItemsSearchRequest
	18, // 64: Scailo.StockAuditsService.SearchItemsWithPagination:input_type -> Scailo.StockAuditItemsSearchRequest
	32, // 65: Scailo.StockAuditsService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	38, // 66: Scailo.StockAuditsService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	39, // 67: Scailo.StockAuditsService.UploadStockAuditItems:input_type -> Scailo.IdentifierUUIDWithFile
	35, // 68: Scailo.StockAuditsService.ViewByID:input_type -> Scailo.Identifier
	32, // 69: Scailo.StockAuditsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	36, // 70: Scailo.StockAuditsService.ViewByReferenceID:input_type -> Scailo.SimpleSearchReq
	35, // 71: Scailo.StockAuditsService.ViewEssentialByID:input_type -> Scailo.Identifier
	32, // 72: Scailo.StockAuditsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	40, // 73: Scailo.StockAuditsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	41, // 74: Scailo.StockAuditsService.ViewAll:input_type -> Scailo.ActiveStatus
	32, // 75: Scailo.StockAuditsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	13, // 76: Scailo.StockAuditsService.ViewWithPagination:input_type -> Scailo.StockAuditsServicePaginationReq
	37, // 77: Scailo.StockAuditsService.ViewProspectiveFamilies:input_type -> Scailo.IdentifierWithSearchKey
	42, // 78: Scailo.StockAuditsService.FilterProspectiveFamilies:input_type -> Scailo.FilterFamiliesReqForIdentifier
	12, // 79: Scailo.StockAuditsService.ViewProspectiveStockAuditItem:input_type -> Scailo.StockAuditItemProspectiveInfoRequest
	32, // 80: Scailo.StockAuditsService.DownloadLabelByUUID:input_type -> Scailo.IdentifierUUID
	32, // 81: Scailo.StockAuditsService.IsDownloadable:input_type -> Scailo.IdentifierUUID
	32, // 82: Scailo.StockAuditsService.DownloadByUUID:input_type -> Scailo.IdentifierUUID
	17, // 83: Scailo.StockAuditsService.SearchAll:input_type -> Scailo.StockAuditsServiceSearchAllReq
	15, // 84: Scailo.StockAuditsService.Filter:input_type -> Scailo.StockAuditsServiceFilterReq
	43, // 85: Scailo.StockAuditsService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	16, // 86: Scailo.StockAuditsService.Count:input_type -> Scailo.StockAuditsServiceCountReq
	15, // 87: Scailo.StockAuditsService.DownloadAsCSV:input_type -> Scailo.StockAuditsServiceFilterReq
	44, // 88: Scailo.StockAuditsService.Create:output_type -> Scailo.IdentifierResponse
	44, // 89: Scailo.StockAuditsService.Draft:output_type -> Scailo.IdentifierResponse
	44, // 90: Scailo.StockAuditsService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	44, // 91: Scailo.StockAuditsService.SendForVerification:output_type -> Scailo.IdentifierResponse
	44, // 92: Scailo.StockAuditsService.Verify:output_type -> Scailo.IdentifierResponse
	44, // 93: Scailo.StockAuditsService.Approve:output_type -> Scailo.IdentifierResponse
	44, // 94: Scailo.StockAuditsService.SendForRevision:output_type -> Scailo.IdentifierResponse
	44, // 95: Scailo.StockAuditsService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	44, // 96: Scailo.StockAuditsService.Halt:output_type -> Scailo.IdentifierResponse
	44, // 97: Scailo.StockAuditsService.Discard:output_type -> Scailo.IdentifierResponse
	44, // 98: Scailo.StockAuditsService.Restore:output_type -> Scailo.IdentifierResponse
	44, // 99: Scailo.StockAuditsService.Complete:output_type -> Scailo.IdentifierResponse
	44, // 100: Scailo.StockAuditsService.Repeat:output_type -> Scailo.IdentifierResponse
	44, // 101: Scailo.StockAuditsService.Reopen:output_type -> Scailo.IdentifierResponse
	44, // 102: Scailo.StockAuditsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	44, // 103: Scailo.StockAuditsService.SendEmail:output_type -> Scailo.IdentifierResponse
	45, // 104: Scailo.StockAuditsService.CreateMagicLink:output_type -> Scailo.MagicLink
	46, // 105: Scailo.StockAuditsService.IsCompletable:output_type -> Scailo.BooleanResponse
	44, // 106: Scailo.StockAuditsService.AddStockAuditItem:output_type -> Scailo.IdentifierResponse
	44, // 107: Scailo.StockAuditsService.ModifyStockAuditItem:output_type -> Scailo.IdentifierResponse
	44, // 108: Scailo.StockAuditsService.ApproveStockAuditItem:output_type -> Scailo.IdentifierResponse
	44, // 109: Scailo.StockAuditsService.DeleteStockAuditItem:output_type -> Scailo.IdentifierResponse
	44, // 110: Scailo.StockAuditsService.ReorderStockAuditItems:output_type -> Scailo.IdentifierResponse
	8,  // 111: Scailo.StockAuditsService.ViewStockAuditItemByID:output_type -> Scailo.StockAuditItem
	8,  // 112: Scailo.StockAuditsService.ViewStockAuditItemByInventoryHash:output_type -> Scailo.StockAuditItem
	10, // 113: Scailo.StockAuditsService.ViewApprovedStockAuditItems:output_type -> Scailo.StockAuditsItemsList
	10, // 114: Scailo.StockAuditsService.ViewUnapprovedStockAuditItems:output_type -> Scailo.StockAuditsItemsList
	10, // 115: Scailo.StockAuditsService.ViewStockAuditItemHistory:output_type -> Scailo.StockAuditsItemsList
	19, // 116: Scailo.StockAuditsService.ViewPaginatedApprovedStockAuditItems:output_type -> Scailo.StockAuditsServicePaginatedItemsResponse
	19, // 117: Scailo.StockAuditsService.ViewPaginatedUnapprovedStockAuditItems:output_type -> Scailo.StockAuditsServicePaginatedItemsResponse
	19, // 118: Scailo.StockAuditsService.SearchItemsWithPagination:output_type -> Scailo.StockAuditsServicePaginatedItemsResponse
	47, // 119: Scailo.StockAuditsService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	47, // 120: Scailo.StockAuditsService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	40, // 121: Scailo.StockAuditsService.UploadStockAuditItems:output_type -> Scailo.IdentifiersList
	5,  // 122: Scailo.StockAuditsService.ViewByID:output_type -> Scailo.StockAudit
	5,  // 123: Scailo.StockAuditsService.ViewByUUID:output_type -> Scailo.StockAudit
	5,  // 124: Scailo.StockAuditsService.ViewByReferenceID:output_type -> Scailo.StockAudit
	5,  // 125: Scailo.StockAuditsService.ViewEssentialByID:output_type -> Scailo.StockAudit
	5,  // 126: Scailo.StockAuditsService.ViewEssentialByUUID:output_type -> Scailo.StockAudit
	9,  // 127: Scailo.StockAuditsService.ViewFromIDs:output_type -> Scailo.StockAuditsList
	9,  // 128: Scailo.StockAuditsService.ViewAll:output_type -> Scailo.StockAuditsList
	9,  // 129: Scailo.StockAuditsService.ViewAllForEntityUUID:output_type -> Scailo.StockAuditsList
	14, // 130: Scailo.StockAuditsService.ViewWithPagination:output_type -> Scailo.StockAuditsServicePaginationResponse
	48, // 131: Scailo.StockAuditsService.ViewProspectiveFamilies:output_type -> Scailo.FamiliesList
	48, // 132: Scailo.StockAuditsService.FilterProspectiveFamilies:output_type -> Scailo.FamiliesList
	6,  // 133: Scailo.StockAuditsService.ViewProspectiveStockAuditItem:output_type -> Scailo.StockAuditsServiceItemCreateRequest
	47, // 134: Scailo.StockAuditsService.DownloadLabelByUUID:output_type -> Scailo.StandardFile
	46, // 135: Scailo.StockAuditsService.IsDownloadable:output_type -> Scailo.BooleanResponse
	47, // 136: Scailo.StockAuditsService.DownloadByUUID:output_type -> Scailo.StandardFile
	9,  // 137: Scailo.StockAuditsService.SearchAll:output_type -> Scailo.StockAuditsList
	9,  // 138: Scailo.StockAuditsService.Filter:output_type -> Scailo.StockAuditsList
	49, // 139: Scailo.StockAuditsService.CountInStatus:output_type -> Scailo.CountResponse
	49, // 140: Scailo.StockAuditsService.Count:output_type -> Scailo.CountResponse
	47, // 141: Scailo.StockAuditsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	88, // [88:142] is the sub-list for method output_type
	34, // [34:88] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_stock_audits_scailo_proto_init() }
func file_stock_audits_scailo_proto_init() {
	if File_stock_audits_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_families_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stock_audits_scailo_proto_rawDesc), len(file_stock_audits_scailo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_audits_scailo_proto_goTypes,
		DependencyIndexes: file_stock_audits_scailo_proto_depIdxs,
		EnumInfos:         file_stock_audits_scailo_proto_enumTypes,
		MessageInfos:      file_stock_audits_scailo_proto_msgTypes,
	}.Build()
	File_stock_audits_scailo_proto = out.File
	file_stock_audits_scailo_proto_goTypes = nil
	file_stock_audits_scailo_proto_depIdxs = nil
}
