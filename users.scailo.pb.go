// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: users.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available user types
type USER_TYPE int32

const (
	// Useful for filter and count operation when this field needs to be ignored
	USER_TYPE_USER_TYPE_ANY_UNSPECIFIED USER_TYPE = 0
	// Denotes that the user is an employee
	USER_TYPE_USER_TYPE_EMPLOYEE USER_TYPE = 1
	// Denotes that the user is a client
	USER_TYPE_USER_TYPE_CLIENT USER_TYPE = 2
	// Denotes that the user is a vendor
	USER_TYPE_USER_TYPE_VENDOR USER_TYPE = 3
)

// Enum value maps for USER_TYPE.
var (
	USER_TYPE_name = map[int32]string{
		0: "USER_TYPE_ANY_UNSPECIFIED",
		1: "USER_TYPE_EMPLOYEE",
		2: "USER_TYPE_CLIENT",
		3: "USER_TYPE_VENDOR",
	}
	USER_TYPE_value = map[string]int32{
		"USER_TYPE_ANY_UNSPECIFIED": 0,
		"USER_TYPE_EMPLOYEE":        1,
		"USER_TYPE_CLIENT":          2,
		"USER_TYPE_VENDOR":          3,
	}
)

func (x USER_TYPE) Enum() *USER_TYPE {
	p := new(USER_TYPE)
	*p = x
	return p
}

func (x USER_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_users_scailo_proto_enumTypes[0].Descriptor()
}

func (USER_TYPE) Type() protoreflect.EnumType {
	return &file_users_scailo_proto_enumTypes[0]
}

func (x USER_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_TYPE.Descriptor instead.
func (USER_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type USER_SORT_KEY int32

const (
	// Fetch ordered results by id
	USER_SORT_KEY_USER_SORT_KEY_ID_UNSPECIFIED USER_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	USER_SORT_KEY_USER_SORT_KEY_CREATED_AT USER_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	USER_SORT_KEY_USER_SORT_KEY_MODIFIED_AT USER_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	USER_SORT_KEY_USER_SORT_KEY_APPROVED_ON USER_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	USER_SORT_KEY_USER_SORT_KEY_APPROVED_BY USER_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	USER_SORT_KEY_USER_SORT_KEY_APPROVER_ROLE_ID USER_SORT_KEY = 5
	// Fetch ordered results by the username
	USER_SORT_KEY_USER_SORT_KEY_USERNAME USER_SORT_KEY = 10
	// Fetch ordered results by the name
	USER_SORT_KEY_USER_SORT_KEY_NAME USER_SORT_KEY = 11
	// Fetch ordered results by the code
	USER_SORT_KEY_USER_SORT_KEY_CODE USER_SORT_KEY = 12
	// Fetch ordered results by the email address
	USER_SORT_KEY_USER_SORT_KEY_EMAIL USER_SORT_KEY = 13
	// Fetch ordered results by the phone number
	USER_SORT_KEY_USER_SORT_KEY_PHONE USER_SORT_KEY = 14
)

// Enum value maps for USER_SORT_KEY.
var (
	USER_SORT_KEY_name = map[int32]string{
		0:  "USER_SORT_KEY_ID_UNSPECIFIED",
		1:  "USER_SORT_KEY_CREATED_AT",
		2:  "USER_SORT_KEY_MODIFIED_AT",
		3:  "USER_SORT_KEY_APPROVED_ON",
		4:  "USER_SORT_KEY_APPROVED_BY",
		5:  "USER_SORT_KEY_APPROVER_ROLE_ID",
		10: "USER_SORT_KEY_USERNAME",
		11: "USER_SORT_KEY_NAME",
		12: "USER_SORT_KEY_CODE",
		13: "USER_SORT_KEY_EMAIL",
		14: "USER_SORT_KEY_PHONE",
	}
	USER_SORT_KEY_value = map[string]int32{
		"USER_SORT_KEY_ID_UNSPECIFIED":   0,
		"USER_SORT_KEY_CREATED_AT":       1,
		"USER_SORT_KEY_MODIFIED_AT":      2,
		"USER_SORT_KEY_APPROVED_ON":      3,
		"USER_SORT_KEY_APPROVED_BY":      4,
		"USER_SORT_KEY_APPROVER_ROLE_ID": 5,
		"USER_SORT_KEY_USERNAME":         10,
		"USER_SORT_KEY_NAME":             11,
		"USER_SORT_KEY_CODE":             12,
		"USER_SORT_KEY_EMAIL":            13,
		"USER_SORT_KEY_PHONE":            14,
	}
)

func (x USER_SORT_KEY) Enum() *USER_SORT_KEY {
	p := new(USER_SORT_KEY)
	*p = x
	return p
}

func (x USER_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USER_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_users_scailo_proto_enumTypes[1].Descriptor()
}

func (USER_SORT_KEY) Type() protoreflect.EnumType {
	return &file_users_scailo_proto_enumTypes[1]
}

func (x USER_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USER_SORT_KEY.Descriptor instead.
func (USER_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the parameters necessary to create a record
type UsersServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The username of the user
	Username string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	// The unique employee code by which the user is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// The plain text password using which the user can login
	PlainTextPassword string `protobuf:"bytes,13,opt,name=plain_text_password,json=plainTextPassword,proto3" json:"plain_text_password,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,14,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated mobile role ID
	MobileRoleId uint64 `protobuf:"varint,15,opt,name=mobile_role_id,json=mobileRoleId,proto3" json:"mobile_role_id,omitempty"`
	// The primary email of the user
	Email string `protobuf:"bytes,16,opt,name=email,proto3" json:"email,omitempty"`
	// The optional work email of the user
	WorkEmail string `protobuf:"bytes,17,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	// The primary contact number of the user
	Phone string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	// The birthday of the user
	Birthday string `protobuf:"bytes,30,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// The joining date of the user
	JoiningDate string `protobuf:"bytes,31,opt,name=joining_date,json=joiningDate,proto3" json:"joining_date,omitempty"`
	// The address of the user
	Address string `protobuf:"bytes,32,opt,name=address,proto3" json:"address,omitempty"`
	// The city of residence
	City string `protobuf:"bytes,33,opt,name=city,proto3" json:"city,omitempty"`
	// The state of residence
	State string `protobuf:"bytes,34,opt,name=state,proto3" json:"state,omitempty"`
	// The country of residence
	Country string `protobuf:"bytes,35,opt,name=country,proto3" json:"country,omitempty"`
	// THe PIN Code of residence
	PinCode string `protobuf:"bytes,36,opt,name=pin_code,json=pinCode,proto3" json:"pin_code,omitempty"`
	// THe Blood Group of the user
	BloodGroup string `protobuf:"bytes,37,opt,name=blood_group,json=bloodGroup,proto3" json:"blood_group,omitempty"`
	// The associated shift group ID
	ShiftGroupId uint64 `protobuf:"varint,50,opt,name=shift_group_id,json=shiftGroupId,proto3" json:"shift_group_id,omitempty"`
	// The associated unit of material of the user's attendance record
	AttendanceUomId uint64 `protobuf:"varint,51,opt,name=attendance_uom_id,json=attendanceUomId,proto3" json:"attendance_uom_id,omitempty"`
	// The associated department (can be 0 to allow seamless transition)
	DepartmentId uint64 `protobuf:"varint,52,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// The associated payroll group ID of the user
	PayrollGroupId uint64 `protobuf:"varint,53,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The associated tax group ID using which the user's payroll needs to be calculated
	PayrollTaxGroupId uint64 `protobuf:"varint,54,opt,name=payroll_tax_group_id,json=payrollTaxGroupId,proto3" json:"payroll_tax_group_id,omitempty"`
	// The associated currency ID of the user's payroll
	PayrollCurrencyId uint64 `protobuf:"varint,55,opt,name=payroll_currency_id,json=payrollCurrencyId,proto3" json:"payroll_currency_id,omitempty"`
	// The basic pay amount of the user (in cents)
	BasicPayAmount uint64 `protobuf:"varint,56,opt,name=basic_pay_amount,json=basicPayAmount,proto3" json:"basic_pay_amount,omitempty"`
	// The associated unit of material for storing the basic pay amount
	BasicPayUomId uint64 `protobuf:"varint,57,opt,name=basic_pay_uom_id,json=basicPayUomId,proto3" json:"basic_pay_uom_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,70,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceCreateRequest) Reset() {
	*x = UsersServiceCreateRequest{}
	mi := &file_users_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceCreateRequest) ProtoMessage() {}

func (x *UsersServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *UsersServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *UsersServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetPlainTextPassword() string {
	if x != nil {
		return x.PlainTextPassword
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetMobileRoleId() uint64 {
	if x != nil {
		return x.MobileRoleId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetWorkEmail() string {
	if x != nil {
		return x.WorkEmail
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetJoiningDate() string {
	if x != nil {
		return x.JoiningDate
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetPinCode() string {
	if x != nil {
		return x.PinCode
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetBloodGroup() string {
	if x != nil {
		return x.BloodGroup
	}
	return ""
}

func (x *UsersServiceCreateRequest) GetShiftGroupId() uint64 {
	if x != nil {
		return x.ShiftGroupId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetAttendanceUomId() uint64 {
	if x != nil {
		return x.AttendanceUomId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetPayrollTaxGroupId() uint64 {
	if x != nil {
		return x.PayrollTaxGroupId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetPayrollCurrencyId() uint64 {
	if x != nil {
		return x.PayrollCurrencyId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetBasicPayAmount() uint64 {
	if x != nil {
		return x.BasicPayAmount
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetBasicPayUomId() uint64 {
	if x != nil {
		return x.BasicPayUomId
	}
	return 0
}

func (x *UsersServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type UsersServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The unique employee code by which the user is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,14,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated mobile role ID
	MobileRoleId uint64 `protobuf:"varint,15,opt,name=mobile_role_id,json=mobileRoleId,proto3" json:"mobile_role_id,omitempty"`
	// The primary email of the user
	Email string `protobuf:"bytes,16,opt,name=email,proto3" json:"email,omitempty"`
	// The optional work email of the user
	WorkEmail string `protobuf:"bytes,17,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	// The primary contact number of the user
	Phone string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	// The birthday of the user
	Birthday string `protobuf:"bytes,30,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// The joining date of the user
	JoiningDate string `protobuf:"bytes,31,opt,name=joining_date,json=joiningDate,proto3" json:"joining_date,omitempty"`
	// The address of the user
	Address string `protobuf:"bytes,32,opt,name=address,proto3" json:"address,omitempty"`
	// The city of residence
	City string `protobuf:"bytes,33,opt,name=city,proto3" json:"city,omitempty"`
	// The state of residence
	State string `protobuf:"bytes,34,opt,name=state,proto3" json:"state,omitempty"`
	// The country of residence
	Country string `protobuf:"bytes,35,opt,name=country,proto3" json:"country,omitempty"`
	// THe PIN Code of residence
	PinCode string `protobuf:"bytes,36,opt,name=pin_code,json=pinCode,proto3" json:"pin_code,omitempty"`
	// THe Blood Group of the user
	BloodGroup string `protobuf:"bytes,37,opt,name=blood_group,json=bloodGroup,proto3" json:"blood_group,omitempty"`
	// The associated shift group ID
	ShiftGroupId uint64 `protobuf:"varint,50,opt,name=shift_group_id,json=shiftGroupId,proto3" json:"shift_group_id,omitempty"`
	// The associated unit of material of the user's attendance record
	AttendanceUomId uint64 `protobuf:"varint,51,opt,name=attendance_uom_id,json=attendanceUomId,proto3" json:"attendance_uom_id,omitempty"`
	// The associated department (can be 0 to allow seamless transition)
	DepartmentId uint64 `protobuf:"varint,52,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// The associated payroll group ID of the user
	PayrollGroupId uint64 `protobuf:"varint,53,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The associated tax group ID using which the user's payroll needs to be calculated
	PayrollTaxGroupId uint64 `protobuf:"varint,54,opt,name=payroll_tax_group_id,json=payrollTaxGroupId,proto3" json:"payroll_tax_group_id,omitempty"`
	// The associated currency ID of the user's payroll
	PayrollCurrencyId uint64 `protobuf:"varint,55,opt,name=payroll_currency_id,json=payrollCurrencyId,proto3" json:"payroll_currency_id,omitempty"`
	// The basic pay amount of the user (in cents)
	BasicPayAmount uint64 `protobuf:"varint,56,opt,name=basic_pay_amount,json=basicPayAmount,proto3" json:"basic_pay_amount,omitempty"`
	// The associated unit of material for storing the basic pay amount
	BasicPayUomId uint64 `protobuf:"varint,57,opt,name=basic_pay_uom_id,json=basicPayUomId,proto3" json:"basic_pay_uom_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,70,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceUpdateRequest) Reset() {
	*x = UsersServiceUpdateRequest{}
	mi := &file_users_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdateRequest) ProtoMessage() {}

func (x *UsersServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *UsersServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *UsersServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetMobileRoleId() uint64 {
	if x != nil {
		return x.MobileRoleId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetWorkEmail() string {
	if x != nil {
		return x.WorkEmail
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetJoiningDate() string {
	if x != nil {
		return x.JoiningDate
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetPinCode() string {
	if x != nil {
		return x.PinCode
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetBloodGroup() string {
	if x != nil {
		return x.BloodGroup
	}
	return ""
}

func (x *UsersServiceUpdateRequest) GetShiftGroupId() uint64 {
	if x != nil {
		return x.ShiftGroupId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetAttendanceUomId() uint64 {
	if x != nil {
		return x.AttendanceUomId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetPayrollTaxGroupId() uint64 {
	if x != nil {
		return x.PayrollTaxGroupId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetPayrollCurrencyId() uint64 {
	if x != nil {
		return x.PayrollCurrencyId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetBasicPayAmount() uint64 {
	if x != nil {
		return x.BasicPayAmount
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetBasicPayUomId() uint64 {
	if x != nil {
		return x.BasicPayUomId
	}
	return 0
}

func (x *UsersServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a standard response
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this user
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this user
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this user
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The username of the user
	Username string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	// The unique employee code by which the user is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,14,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated mobile role ID
	MobileRoleId uint64 `protobuf:"varint,15,opt,name=mobile_role_id,json=mobileRoleId,proto3" json:"mobile_role_id,omitempty"`
	// The primary email of the user
	Email string `protobuf:"bytes,16,opt,name=email,proto3" json:"email,omitempty"`
	// The optional work email of the user
	WorkEmail string `protobuf:"bytes,17,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	// The primary contact number of the user
	Phone string `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	// The birthday of the user
	Birthday string `protobuf:"bytes,30,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// The joining date of the user
	JoiningDate string `protobuf:"bytes,31,opt,name=joining_date,json=joiningDate,proto3" json:"joining_date,omitempty"`
	// The address of the user
	Address string `protobuf:"bytes,32,opt,name=address,proto3" json:"address,omitempty"`
	// The city of residence
	City string `protobuf:"bytes,33,opt,name=city,proto3" json:"city,omitempty"`
	// The state of residence
	State string `protobuf:"bytes,34,opt,name=state,proto3" json:"state,omitempty"`
	// The country of residence
	Country string `protobuf:"bytes,35,opt,name=country,proto3" json:"country,omitempty"`
	// THe PIN Code of residence
	PinCode string `protobuf:"bytes,36,opt,name=pin_code,json=pinCode,proto3" json:"pin_code,omitempty"`
	// THe Blood Group of the user
	BloodGroup string `protobuf:"bytes,37,opt,name=blood_group,json=bloodGroup,proto3" json:"blood_group,omitempty"`
	// The associated shift group ID
	ShiftGroupId uint64 `protobuf:"varint,50,opt,name=shift_group_id,json=shiftGroupId,proto3" json:"shift_group_id,omitempty"`
	// The associated unit of material of the user's attendance record
	AttendanceUomId uint64 `protobuf:"varint,51,opt,name=attendance_uom_id,json=attendanceUomId,proto3" json:"attendance_uom_id,omitempty"`
	// The associated department
	DepartmentId uint64 `protobuf:"varint,52,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// The associated payroll group ID of the user
	PayrollGroupId uint64 `protobuf:"varint,53,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The associated tax group ID using which the user's payroll needs to be calculated
	PayrollTaxGroupId uint64 `protobuf:"varint,54,opt,name=payroll_tax_group_id,json=payrollTaxGroupId,proto3" json:"payroll_tax_group_id,omitempty"`
	// The associated currency ID of the user's payroll
	PayrollCurrencyId uint64 `protobuf:"varint,55,opt,name=payroll_currency_id,json=payrollCurrencyId,proto3" json:"payroll_currency_id,omitempty"`
	// The basic pay amount of the user (in cents)
	BasicPayAmount uint64 `protobuf:"varint,56,opt,name=basic_pay_amount,json=basicPayAmount,proto3" json:"basic_pay_amount,omitempty"`
	// The associated unit of material for storing the basic pay amount
	BasicPayUomId uint64 `protobuf:"varint,57,opt,name=basic_pay_uom_id,json=basicPayUomId,proto3" json:"basic_pay_uom_id,omitempty"`
	// Stores if MFA has been enabled by the user
	MfaStatus bool `protobuf:"varint,60,opt,name=mfa_status,json=mfaStatus,proto3" json:"mfa_status,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,70,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_users_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *User) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *User) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *User) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *User) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *User) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *User) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *User) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *User) GetMobileRoleId() uint64 {
	if x != nil {
		return x.MobileRoleId
	}
	return 0
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetWorkEmail() string {
	if x != nil {
		return x.WorkEmail
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *User) GetJoiningDate() string {
	if x != nil {
		return x.JoiningDate
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *User) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *User) GetPinCode() string {
	if x != nil {
		return x.PinCode
	}
	return ""
}

func (x *User) GetBloodGroup() string {
	if x != nil {
		return x.BloodGroup
	}
	return ""
}

func (x *User) GetShiftGroupId() uint64 {
	if x != nil {
		return x.ShiftGroupId
	}
	return 0
}

func (x *User) GetAttendanceUomId() uint64 {
	if x != nil {
		return x.AttendanceUomId
	}
	return 0
}

func (x *User) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *User) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *User) GetPayrollTaxGroupId() uint64 {
	if x != nil {
		return x.PayrollTaxGroupId
	}
	return 0
}

func (x *User) GetPayrollCurrencyId() uint64 {
	if x != nil {
		return x.PayrollCurrencyId
	}
	return 0
}

func (x *User) GetBasicPayAmount() uint64 {
	if x != nil {
		return x.BasicPayAmount
	}
	return 0
}

func (x *User) GetBasicPayUomId() uint64 {
	if x != nil {
		return x.BasicPayUomId
	}
	return 0
}

func (x *User) GetMfaStatus() bool {
	if x != nil {
		return x.MfaStatus
	}
	return false
}

func (x *User) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the message that is used internally to validate user
type UserPrimaryInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// The username of the user
	Username string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// Stores the hashed password
	Password []byte `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,13,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated mobile role ID
	MobileRoleId uint64 `protobuf:"varint,14,opt,name=mobile_role_id,json=mobileRoleId,proto3" json:"mobile_role_id,omitempty"`
	// Stores if MFA has been enabled by the user
	MfaStatus bool `protobuf:"varint,15,opt,name=mfa_status,json=mfaStatus,proto3" json:"mfa_status,omitempty"`
	// Stores the MFA secret
	MfaSecret []byte `protobuf:"bytes,16,opt,name=mfa_secret,json=mfaSecret,proto3" json:"mfa_secret,omitempty"`
	// THe Blood Group of the user
	BloodGroup    string `protobuf:"bytes,20,opt,name=blood_group,json=bloodGroup,proto3" json:"blood_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserPrimaryInfo) Reset() {
	*x = UserPrimaryInfo{}
	mi := &file_users_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPrimaryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrimaryInfo) ProtoMessage() {}

func (x *UserPrimaryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrimaryInfo.ProtoReflect.Descriptor instead.
func (*UserPrimaryInfo) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *UserPrimaryInfo) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *UserPrimaryInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserPrimaryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPrimaryInfo) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *UserPrimaryInfo) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UserPrimaryInfo) GetMobileRoleId() uint64 {
	if x != nil {
		return x.MobileRoleId
	}
	return 0
}

func (x *UserPrimaryInfo) GetMfaStatus() bool {
	if x != nil {
		return x.MfaStatus
	}
	return false
}

func (x *UserPrimaryInfo) GetMfaSecret() []byte {
	if x != nil {
		return x.MfaSecret
	}
	return nil
}

func (x *UserPrimaryInfo) GetBloodGroup() string {
	if x != nil {
		return x.BloodGroup
	}
	return ""
}

// Describes the message consisting of the list of records
type UsersList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*User `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersList) Reset() {
	*x = UsersList{}
	mi := &file_users_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersList) ProtoMessage() {}

func (x *UsersList) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersList.ProtoReflect.Descriptor instead.
func (*UsersList) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *UsersList) GetList() []*User {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type UsersServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey USER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.USER_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this user
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServicePaginationReq) Reset() {
	*x = UsersServicePaginationReq{}
	mi := &file_users_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServicePaginationReq) ProtoMessage() {}

func (x *UsersServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServicePaginationReq.ProtoReflect.Descriptor instead.
func (*UsersServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *UsersServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *UsersServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UsersServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UsersServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *UsersServicePaginationReq) GetSortKey() USER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return USER_SORT_KEY_USER_SORT_KEY_ID_UNSPECIFIED
}

func (x *UsersServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type UsersServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*User `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServicePaginationResponse) Reset() {
	*x = UsersServicePaginationResponse{}
	mi := &file_users_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServicePaginationResponse) ProtoMessage() {}

func (x *UsersServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*UsersServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *UsersServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UsersServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UsersServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UsersServicePaginationResponse) GetPayload() []*User {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type UsersServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey USER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.USER_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this user
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The username of the user
	Username string `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,21,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the user is classified
	Code string `protobuf:"bytes,22,opt,name=code,proto3" json:"code,omitempty"`
	// The primary email of the user
	Email string `protobuf:"bytes,23,opt,name=email,proto3" json:"email,omitempty"`
	// The primary contact number of the user
	Phone string `protobuf:"bytes,24,opt,name=phone,proto3" json:"phone,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,25,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated shift group ID
	ShiftGroupId uint64 `protobuf:"varint,26,opt,name=shift_group_id,json=shiftGroupId,proto3" json:"shift_group_id,omitempty"`
	// The associated unit of material of the user's attendance record
	AttendanceUomId uint64 `protobuf:"varint,27,opt,name=attendance_uom_id,json=attendanceUomId,proto3" json:"attendance_uom_id,omitempty"`
	// The associated department
	DepartmentId uint64 `protobuf:"varint,28,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// The associated payroll group ID of the user
	PayrollGroupId uint64 `protobuf:"varint,29,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The associated tax group ID using which the user's payroll needs to be calculated
	PayrollTaxGroupId uint64 `protobuf:"varint,30,opt,name=payroll_tax_group_id,json=payrollTaxGroupId,proto3" json:"payroll_tax_group_id,omitempty"`
	// The associated currency ID of the user's payroll
	PayrollCurrencyId uint64 `protobuf:"varint,31,opt,name=payroll_currency_id,json=payrollCurrencyId,proto3" json:"payroll_currency_id,omitempty"`
	// The associated unit of material for storing the basic pay amount
	BasicPayUomId uint64 `protobuf:"varint,32,opt,name=basic_pay_uom_id,json=basicPayUomId,proto3" json:"basic_pay_uom_id,omitempty"`
	// The optional work email of the user
	WorkEmail string `protobuf:"bytes,33,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	// --------------------------------------------------------------------------------
	// Filter by the associated vendor ID (return all the users that belong to this vendor)
	VendorId uint64 `protobuf:"varint,70,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// Filter by the associated client ID (return all the users that belong to this client)
	ClientId uint64 `protobuf:"varint,71,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // --------------------------------------------------------------------------------
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceFilterReq) Reset() {
	*x = UsersServiceFilterReq{}
	mi := &file_users_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceFilterReq) ProtoMessage() {}

func (x *UsersServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceFilterReq.ProtoReflect.Descriptor instead.
func (*UsersServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *UsersServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *UsersServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UsersServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UsersServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *UsersServiceFilterReq) GetSortKey() USER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return USER_SORT_KEY_USER_SORT_KEY_ID_UNSPECIFIED
}

func (x *UsersServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *UsersServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *UsersServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *UsersServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *UsersServiceFilterReq) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *UsersServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *UsersServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *UsersServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *UsersServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *UsersServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsersServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UsersServiceFilterReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersServiceFilterReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UsersServiceFilterReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetShiftGroupId() uint64 {
	if x != nil {
		return x.ShiftGroupId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetAttendanceUomId() uint64 {
	if x != nil {
		return x.AttendanceUomId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetPayrollTaxGroupId() uint64 {
	if x != nil {
		return x.PayrollTaxGroupId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetPayrollCurrencyId() uint64 {
	if x != nil {
		return x.PayrollCurrencyId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetBasicPayUomId() uint64 {
	if x != nil {
		return x.BasicPayUomId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetWorkEmail() string {
	if x != nil {
		return x.WorkEmail
	}
	return ""
}

func (x *UsersServiceFilterReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *UsersServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type UsersServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this user
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The username of the user
	Username string `protobuf:"bytes,20,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the user
	Name string `protobuf:"bytes,21,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the user is classified
	Code string `protobuf:"bytes,22,opt,name=code,proto3" json:"code,omitempty"`
	// The primary email of the user
	Email string `protobuf:"bytes,23,opt,name=email,proto3" json:"email,omitempty"`
	// The primary contact number of the user
	Phone string `protobuf:"bytes,24,opt,name=phone,proto3" json:"phone,omitempty"`
	// The associated role ID
	RoleId uint64 `protobuf:"varint,25,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The associated shift group ID
	ShiftGroupId uint64 `protobuf:"varint,26,opt,name=shift_group_id,json=shiftGroupId,proto3" json:"shift_group_id,omitempty"`
	// The associated unit of material of the user's attendance record
	AttendanceUomId uint64 `protobuf:"varint,27,opt,name=attendance_uom_id,json=attendanceUomId,proto3" json:"attendance_uom_id,omitempty"`
	// The associated department
	DepartmentId uint64 `protobuf:"varint,28,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	// The associated payroll group ID of the user
	PayrollGroupId uint64 `protobuf:"varint,29,opt,name=payroll_group_id,json=payrollGroupId,proto3" json:"payroll_group_id,omitempty"`
	// The associated tax group ID using which the user's payroll needs to be calculated
	PayrollTaxGroupId uint64 `protobuf:"varint,30,opt,name=payroll_tax_group_id,json=payrollTaxGroupId,proto3" json:"payroll_tax_group_id,omitempty"`
	// The associated currency ID of the user's payroll
	PayrollCurrencyId uint64 `protobuf:"varint,31,opt,name=payroll_currency_id,json=payrollCurrencyId,proto3" json:"payroll_currency_id,omitempty"`
	// The associated unit of material for storing the basic pay amount
	BasicPayUomId uint64 `protobuf:"varint,32,opt,name=basic_pay_uom_id,json=basicPayUomId,proto3" json:"basic_pay_uom_id,omitempty"`
	// The optional work email of the user
	WorkEmail string `protobuf:"bytes,33,opt,name=work_email,json=workEmail,proto3" json:"work_email,omitempty"`
	// --------------------------------------------------------------------------------
	// Filter by the associated vendor ID (return all the users that belong to this vendor)
	VendorId uint64 `protobuf:"varint,70,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// Filter by the associated client ID (return all the users that belong to this client)
	ClientId uint64 `protobuf:"varint,71,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // --------------------------------------------------------------------------------
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceCountReq) Reset() {
	*x = UsersServiceCountReq{}
	mi := &file_users_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceCountReq) ProtoMessage() {}

func (x *UsersServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceCountReq.ProtoReflect.Descriptor instead.
func (*UsersServiceCountReq) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *UsersServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *UsersServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *UsersServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *UsersServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *UsersServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *UsersServiceCountReq) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *UsersServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *UsersServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *UsersServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *UsersServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *UsersServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *UsersServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *UsersServiceCountReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsersServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UsersServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UsersServiceCountReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UsersServiceCountReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UsersServiceCountReq) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UsersServiceCountReq) GetShiftGroupId() uint64 {
	if x != nil {
		return x.ShiftGroupId
	}
	return 0
}

func (x *UsersServiceCountReq) GetAttendanceUomId() uint64 {
	if x != nil {
		return x.AttendanceUomId
	}
	return 0
}

func (x *UsersServiceCountReq) GetDepartmentId() uint64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *UsersServiceCountReq) GetPayrollGroupId() uint64 {
	if x != nil {
		return x.PayrollGroupId
	}
	return 0
}

func (x *UsersServiceCountReq) GetPayrollTaxGroupId() uint64 {
	if x != nil {
		return x.PayrollTaxGroupId
	}
	return 0
}

func (x *UsersServiceCountReq) GetPayrollCurrencyId() uint64 {
	if x != nil {
		return x.PayrollCurrencyId
	}
	return 0
}

func (x *UsersServiceCountReq) GetBasicPayUomId() uint64 {
	if x != nil {
		return x.BasicPayUomId
	}
	return 0
}

func (x *UsersServiceCountReq) GetWorkEmail() string {
	if x != nil {
		return x.WorkEmail
	}
	return ""
}

func (x *UsersServiceCountReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *UsersServiceCountReq) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *UsersServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type UsersServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey USER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.USER_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the user type
	UserType USER_TYPE `protobuf:"varint,7,opt,name=user_type,json=userType,proto3,enum=Scailo.USER_TYPE" json:"user_type,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// --------------------------------------------------------------------------------
	// Filter by the associated vendor ID (return all the users that belong to this vendor)
	VendorId uint64 `protobuf:"varint,70,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// Filter by the associated client ID (return all the users that belong to this client)
	ClientId      uint64 `protobuf:"varint,71,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // --------------------------------------------------------------------------------
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceSearchAllReq) Reset() {
	*x = UsersServiceSearchAllReq{}
	mi := &file_users_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceSearchAllReq) ProtoMessage() {}

func (x *UsersServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*UsersServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *UsersServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *UsersServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UsersServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UsersServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *UsersServiceSearchAllReq) GetSortKey() USER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return USER_SORT_KEY_USER_SORT_KEY_ID_UNSPECIFIED
}

func (x *UsersServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *UsersServiceSearchAllReq) GetUserType() USER_TYPE {
	if x != nil {
		return x.UserType
	}
	return USER_TYPE_USER_TYPE_ANY_UNSPECIFIED
}

func (x *UsersServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *UsersServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *UsersServiceSearchAllReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *UsersServiceSearchAllReq) GetClientId() uint64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

// Describes the message that is required to register a user's device
type UsersServiceRegisterMobileDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The ID of the user who has possession of the device
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The operating system of the device
	DeviceOs string `protobuf:"bytes,12,opt,name=device_os,json=deviceOs,proto3" json:"device_os,omitempty"`
	// The generated FCM Token
	DeviceToken   string `protobuf:"bytes,13,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsersServiceRegisterMobileDeviceRequest) Reset() {
	*x = UsersServiceRegisterMobileDeviceRequest{}
	mi := &file_users_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsersServiceRegisterMobileDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceRegisterMobileDeviceRequest) ProtoMessage() {}

func (x *UsersServiceRegisterMobileDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_users_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceRegisterMobileDeviceRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceRegisterMobileDeviceRequest) Descriptor() ([]byte, []int) {
	return file_users_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *UsersServiceRegisterMobileDeviceRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *UsersServiceRegisterMobileDeviceRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UsersServiceRegisterMobileDeviceRequest) GetDeviceOs() string {
	if x != nil {
		return x.DeviceOs
	}
	return ""
}

func (x *UsersServiceRegisterMobileDeviceRequest) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

var File_users_scailo_proto protoreflect.FileDescriptor

const file_users_scailo_proto_rawDesc = "" +
	"\n" +
	"\x12users.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\xbe\t\n" +
	"\x19UsersServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12#\n" +
	"\busername\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\busername\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12\x1b\n" +
	"\x04name\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x127\n" +
	"\x13plain_text_password\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x11plainTextPassword\x12 \n" +
	"\arole_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x06roleId\x12-\n" +
	"\x0emobile_role_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\fmobileRoleId\x12\x1d\n" +
	"\x05email\x18\x10 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x12\x1d\n" +
	"\n" +
	"work_email\x18\x11 \x01(\tR\tworkEmail\x12\x1d\n" +
	"\x05phone\x18\x12 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05phone\x12\x1a\n" +
	"\bbirthday\x18\x1e \x01(\tR\bbirthday\x12!\n" +
	"\fjoining_date\x18\x1f \x01(\tR\vjoiningDate\x12\x18\n" +
	"\aaddress\x18  \x01(\tR\aaddress\x12\x12\n" +
	"\x04city\x18! \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\" \x01(\tR\x05state\x12\x18\n" +
	"\acountry\x18# \x01(\tR\acountry\x12\x19\n" +
	"\bpin_code\x18$ \x01(\tR\apinCode\x12\x1f\n" +
	"\vblood_group\x18% \x01(\tR\n" +
	"bloodGroup\x12-\n" +
	"\x0eshift_group_id\x182 \x01(\x04B\a\xbaH\x042\x02(\x00R\fshiftGroupId\x123\n" +
	"\x11attendance_uom_id\x183 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fattendanceUomId\x12,\n" +
	"\rdepartment_id\x184 \x01(\x04B\a\xbaH\x042\x02(\x00R\fdepartmentId\x121\n" +
	"\x10payroll_group_id\x185 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0epayrollGroupId\x128\n" +
	"\x14payroll_tax_group_id\x186 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11payrollTaxGroupId\x127\n" +
	"\x13payroll_currency_id\x187 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11payrollCurrencyId\x121\n" +
	"\x10basic_pay_amount\x188 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0ebasicPayAmount\x120\n" +
	"\x10basic_pay_uom_id\x189 \x01(\x04B\a\xbaH\x042\x02(\x00R\rbasicPayUomId\x12@\n" +
	"\tform_data\x18F \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xcb\b\n" +
	"\x19UsersServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12\x1b\n" +
	"\x04name\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\arole_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x06roleId\x12-\n" +
	"\x0emobile_role_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\fmobileRoleId\x12\x1d\n" +
	"\x05email\x18\x10 \x01(\tB\a\xbaH\x04r\x02`\x01R\x05email\x12\x1d\n" +
	"\n" +
	"work_email\x18\x11 \x01(\tR\tworkEmail\x12\x1d\n" +
	"\x05phone\x18\x12 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05phone\x12\x1a\n" +
	"\bbirthday\x18\x1e \x01(\tR\bbirthday\x12!\n" +
	"\fjoining_date\x18\x1f \x01(\tR\vjoiningDate\x12\x18\n" +
	"\aaddress\x18  \x01(\tR\aaddress\x12\x12\n" +
	"\x04city\x18! \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\" \x01(\tR\x05state\x12\x18\n" +
	"\acountry\x18# \x01(\tR\acountry\x12\x19\n" +
	"\bpin_code\x18$ \x01(\tR\apinCode\x12\x1f\n" +
	"\vblood_group\x18% \x01(\tR\n" +
	"bloodGroup\x12-\n" +
	"\x0eshift_group_id\x182 \x01(\x04B\a\xbaH\x042\x02(\x00R\fshiftGroupId\x123\n" +
	"\x11attendance_uom_id\x183 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fattendanceUomId\x12,\n" +
	"\rdepartment_id\x184 \x01(\x04B\a\xbaH\x042\x02(\x00R\fdepartmentId\x121\n" +
	"\x10payroll_group_id\x185 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0epayrollGroupId\x128\n" +
	"\x14payroll_tax_group_id\x186 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11payrollTaxGroupId\x127\n" +
	"\x13payroll_currency_id\x187 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11payrollCurrencyId\x121\n" +
	"\x10basic_pay_amount\x188 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0ebasicPayAmount\x120\n" +
	"\x10basic_pay_uom_id\x189 \x01(\x04B\a\xbaH\x042\x02(\x00R\rbasicPayUomId\x12@\n" +
	"\tform_data\x18F \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xb9\t\n" +
	"\x04User\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12\x1a\n" +
	"\busername\x18\n" +
	" \x01(\tR\busername\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x12\x17\n" +
	"\arole_id\x18\x0e \x01(\x04R\x06roleId\x12$\n" +
	"\x0emobile_role_id\x18\x0f \x01(\x04R\fmobileRoleId\x12\x14\n" +
	"\x05email\x18\x10 \x01(\tR\x05email\x12\x1d\n" +
	"\n" +
	"work_email\x18\x11 \x01(\tR\tworkEmail\x12\x14\n" +
	"\x05phone\x18\x12 \x01(\tR\x05phone\x12\x1a\n" +
	"\bbirthday\x18\x1e \x01(\tR\bbirthday\x12!\n" +
	"\fjoining_date\x18\x1f \x01(\tR\vjoiningDate\x12\x18\n" +
	"\aaddress\x18  \x01(\tR\aaddress\x12\x12\n" +
	"\x04city\x18! \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\" \x01(\tR\x05state\x12\x18\n" +
	"\acountry\x18# \x01(\tR\acountry\x12\x19\n" +
	"\bpin_code\x18$ \x01(\tR\apinCode\x12\x1f\n" +
	"\vblood_group\x18% \x01(\tR\n" +
	"bloodGroup\x12$\n" +
	"\x0eshift_group_id\x182 \x01(\x04R\fshiftGroupId\x12*\n" +
	"\x11attendance_uom_id\x183 \x01(\x04R\x0fattendanceUomId\x12#\n" +
	"\rdepartment_id\x184 \x01(\x04R\fdepartmentId\x12(\n" +
	"\x10payroll_group_id\x185 \x01(\x04R\x0epayrollGroupId\x12/\n" +
	"\x14payroll_tax_group_id\x186 \x01(\x04R\x11payrollTaxGroupId\x12.\n" +
	"\x13payroll_currency_id\x187 \x01(\x04R\x11payrollCurrencyId\x12(\n" +
	"\x10basic_pay_amount\x188 \x01(\x04R\x0ebasicPayAmount\x12'\n" +
	"\x10basic_pay_uom_id\x189 \x01(\x04R\rbasicPayUomId\x12\x1d\n" +
	"\n" +
	"mfa_status\x18< \x01(\bR\tmfaStatus\x123\n" +
	"\tform_data\x18F \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"\xab\x02\n" +
	"\x0fUserPrimaryInfo\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x12\x1a\n" +
	"\busername\x18\n" +
	" \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\f \x01(\fR\bpassword\x12\x17\n" +
	"\arole_id\x18\r \x01(\x04R\x06roleId\x12$\n" +
	"\x0emobile_role_id\x18\x0e \x01(\x04R\fmobileRoleId\x12\x1d\n" +
	"\n" +
	"mfa_status\x18\x0f \x01(\bR\tmfaStatus\x12\x1d\n" +
	"\n" +
	"mfa_secret\x18\x10 \x01(\fR\tmfaSecret\x12\x1f\n" +
	"\vblood_group\x18\x14 \x01(\tR\n" +
	"bloodGroup\"-\n" +
	"\tUsersList\x12 \n" +
	"\x04list\x18\x01 \x03(\v2\f.Scailo.UserR\x04list\"\xad\x02\n" +
	"\x19UsersServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.USER_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x8c\x01\n" +
	"\x1eUsersServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12&\n" +
	"\apayload\x18\x04 \x03(\v2\f.Scailo.UserR\apayload\"\xf0\n" +
	"\n" +
	"\x15UsersServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.USER_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x1a\n" +
	"\busername\x18\x14 \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\x15 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x16 \x01(\tR\x04code\x12\x14\n" +
	"\x05email\x18\x17 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x18 \x01(\tR\x05phone\x12\x17\n" +
	"\arole_id\x18\x19 \x01(\x04R\x06roleId\x12$\n" +
	"\x0eshift_group_id\x18\x1a \x01(\x04R\fshiftGroupId\x12*\n" +
	"\x11attendance_uom_id\x18\x1b \x01(\x04R\x0fattendanceUomId\x12#\n" +
	"\rdepartment_id\x18\x1c \x01(\x04R\fdepartmentId\x12(\n" +
	"\x10payroll_group_id\x18\x1d \x01(\x04R\x0epayrollGroupId\x12/\n" +
	"\x14payroll_tax_group_id\x18\x1e \x01(\x04R\x11payrollTaxGroupId\x12.\n" +
	"\x13payroll_currency_id\x18\x1f \x01(\x04R\x11payrollCurrencyId\x12'\n" +
	"\x10basic_pay_uom_id\x18  \x01(\x04R\rbasicPayUomId\x12\x1d\n" +
	"\n" +
	"work_email\x18! \x01(\tR\tworkEmail\x12\x1b\n" +
	"\tvendor_id\x18F \x01(\x04R\bvendorId\x12\x1b\n" +
	"\tclient_id\x18G \x01(\x04R\bclientId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xc1\t\n" +
	"\x14UsersServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x1a\n" +
	"\busername\x18\x14 \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\x15 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x16 \x01(\tR\x04code\x12\x14\n" +
	"\x05email\x18\x17 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x18 \x01(\tR\x05phone\x12\x17\n" +
	"\arole_id\x18\x19 \x01(\x04R\x06roleId\x12$\n" +
	"\x0eshift_group_id\x18\x1a \x01(\x04R\fshiftGroupId\x12*\n" +
	"\x11attendance_uom_id\x18\x1b \x01(\x04R\x0fattendanceUomId\x12#\n" +
	"\rdepartment_id\x18\x1c \x01(\x04R\fdepartmentId\x12(\n" +
	"\x10payroll_group_id\x18\x1d \x01(\x04R\x0epayrollGroupId\x12/\n" +
	"\x14payroll_tax_group_id\x18\x1e \x01(\x04R\x11payrollTaxGroupId\x12.\n" +
	"\x13payroll_currency_id\x18\x1f \x01(\x04R\x11payrollCurrencyId\x12'\n" +
	"\x10basic_pay_uom_id\x18  \x01(\x04R\rbasicPayUomId\x12\x1d\n" +
	"\n" +
	"work_email\x18! \x01(\tR\tworkEmail\x12\x1b\n" +
	"\tvendor_id\x18F \x01(\x04R\bvendorId\x12\x1b\n" +
	"\tclient_id\x18G \x01(\x04R\bclientId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xdf\x03\n" +
	"\x18UsersServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.USER_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12.\n" +
	"\tuser_type\x18\a \x01(\x0e2\x11.Scailo.USER_TYPER\buserType\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x1b\n" +
	"\tvendor_id\x18F \x01(\x04R\bvendorId\x12\x1b\n" +
	"\tclient_id\x18G \x01(\x04R\bclientId\"\xce\x01\n" +
	"'UsersServiceRegisterMobileDeviceRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\x121\n" +
	"\tdevice_os\x18\f \x01(\tB\x14\xbaH\x11r\x0f2\r[0-9A-Za-z]+$R\bdeviceOs\x12-\n" +
	"\fdevice_token\x18\r \x01(\tB\n" +
	"\xbaH\ar\x05\x10\x01\x18\xac\x02R\vdeviceToken*n\n" +
	"\tUSER_TYPE\x12\x1d\n" +
	"\x19USER_TYPE_ANY_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12USER_TYPE_EMPLOYEE\x10\x01\x12\x14\n" +
	"\x10USER_TYPE_CLIENT\x10\x02\x12\x14\n" +
	"\x10USER_TYPE_VENDOR\x10\x03*\xce\x02\n" +
	"\rUSER_SORT_KEY\x12 \n" +
	"\x1cUSER_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18USER_SORT_KEY_CREATED_AT\x10\x01\x12\x1d\n" +
	"\x19USER_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1d\n" +
	"\x19USER_SORT_KEY_APPROVED_ON\x10\x03\x12\x1d\n" +
	"\x19USER_SORT_KEY_APPROVED_BY\x10\x04\x12\"\n" +
	"\x1eUSER_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x1a\n" +
	"\x16USER_SORT_KEY_USERNAME\x10\n" +
	"\x12\x16\n" +
	"\x12USER_SORT_KEY_NAME\x10\v\x12\x16\n" +
	"\x12USER_SORT_KEY_CODE\x10\f\x12\x17\n" +
	"\x13USER_SORT_KEY_EMAIL\x10\r\x12\x17\n" +
	"\x13USER_SORT_KEY_PHONE\x10\x0e2\x8c\x1a\n" +
	"\fUsersService\x12c\n" +
	"\x14RegisterMobileDevice\x12/.Scailo.UsersServiceRegisterMobileDeviceRequest\x1a\x1a.Scailo.IdentifierResponse\x12G\n" +
	"\x06Create\x12!.Scailo.UsersServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12F\n" +
	"\x05Draft\x12!.Scailo.UsersServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\vDraftUpdate\x12!.Scailo.UsersServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eRevisionUpdate\x12!.Scailo.UsersServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12k\n" +
	"\x1bCreateMagicLinkForSignature\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12G\n" +
	"\x0eUpdatePassword\x12\x19.Scailo.UpdatePasswordReq\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\x11UpdateOwnPassword\x12\x1c.Scailo.UpdateOwnPasswordReq\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\x14UpdateProfilePicture\x12\x18.Scailo.UploadPictureReq\x1a\x1a.Scailo.IdentifierResponse\x12G\n" +
	"\x0fUpdateSignature\x12\x18.Scailo.UploadPictureReq\x1a\x1a.Scailo.IdentifierResponse\x12:\n" +
	"\tMFAEnable\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.ImageResponse\x12>\n" +
	"\bMFAReset\x12\x16.Scailo.IdentifierUUID\x1a\x1a.Scailo.IdentifierResponse\x124\n" +
	"\bViewByID\x12\x1a.Scailo.IdentifierZeroable\x1a\f.Scailo.User\x122\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.User\x125\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.User\x12;\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.User\x127\n" +
	"\x0eViewByUsername\x12\x17.Scailo.SimpleSearchReq\x1a\f.Scailo.User\x123\n" +
	"\n" +
	"ViewByCode\x12\x17.Scailo.SimpleSearchReq\x1a\f.Scailo.User\x122\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x11.Scailo.UsersList\x12A\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.UsersList\x12_\n" +
	"\x12ViewWithPagination\x12!.Scailo.UsersServicePaginationReq\x1a&.Scailo.UsersServicePaginationResponse\x129\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x11.Scailo.UsersList\x12?\n" +
	"\rViewFromUUIDs\x12\x1b.Scailo.IdentifierUUIDsList\x1a\x11.Scailo.UsersList\x12;\n" +
	"\x11ViewFromUsernames\x12\x13.Scailo.StringsList\x1a\x11.Scailo.UsersList\x12'\n" +
	"\bViewSelf\x12\r.Scailo.Empty\x1a\f.Scailo.User\x12?\n" +
	"\x0fViewBirthdaysOn\x12\x19.Scailo.MonthAndDayFilter\x1a\x11.Scailo.UsersList\x12=\n" +
	"\rViewSignature\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.Base64String\x12C\n" +
	"\x12ViewProfilePicture\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.ImageResponse\x12E\n" +
	"\x14ViewThumbnailPicture\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.ImageResponse\x12:\n" +
	"\tViewVCard\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.ImageResponse\x12<\n" +
	"\vViewQRImage\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.ImageResponse\x12>\n" +
	"\fViewQRString\x12\x16.Scailo.IdentifierUUID\x1a\x16.Scailo.StringResponse\x129\n" +
	"\x13IdentifyCroppedFace\x12\x14.Scailo.StandardFile\x1a\f.Scailo.User\x126\n" +
	"\x10IdentifyFullFace\x12\x14.Scailo.StandardFile\x1a\f.Scailo.User\x12@\n" +
	"\tSearchAll\x12 .Scailo.UsersServiceSearchAllReq\x1a\x11.Scailo.UsersList\x12:\n" +
	"\x06Filter\x12\x1d.Scailo.UsersServiceFilterReq\x1a\x11.Scailo.UsersList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12<\n" +
	"\x05Count\x12\x1c.Scailo.UsersServiceCountReq\x1a\x15.Scailo.CountResponse\x12D\n" +
	"\rDownloadAsCSV\x12\x1d.Scailo.UsersServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBb\n" +
	"\n" +
	"com.ScailoB\x10UsersScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_users_scailo_proto_rawDescOnce sync.Once
	file_users_scailo_proto_rawDescData []byte
)

func file_users_scailo_proto_rawDescGZIP() []byte {
	file_users_scailo_proto_rawDescOnce.Do(func() {
		file_users_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_users_scailo_proto_rawDesc), len(file_users_scailo_proto_rawDesc)))
	})
	return file_users_scailo_proto_rawDescData
}

var file_users_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_users_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_users_scailo_proto_goTypes = []any{
	(USER_TYPE)(0),                                            // 0: Scailo.USER_TYPE
	(USER_SORT_KEY)(0),                                        // 1: Scailo.USER_SORT_KEY
	(*UsersServiceCreateRequest)(nil),                         // 2: Scailo.UsersServiceCreateRequest
	(*UsersServiceUpdateRequest)(nil),                         // 3: Scailo.UsersServiceUpdateRequest
	(*User)(nil),                                              // 4: Scailo.User
	(*UserPrimaryInfo)(nil),                                   // 5: Scailo.UserPrimaryInfo
	(*UsersList)(nil),                                         // 6: Scailo.UsersList
	(*UsersServicePaginationReq)(nil),                         // 7: Scailo.UsersServicePaginationReq
	(*UsersServicePaginationResponse)(nil),                    // 8: Scailo.UsersServicePaginationResponse
	(*UsersServiceFilterReq)(nil),                             // 9: Scailo.UsersServiceFilterReq
	(*UsersServiceCountReq)(nil),                              // 10: Scailo.UsersServiceCountReq
	(*UsersServiceSearchAllReq)(nil),                          // 11: Scailo.UsersServiceSearchAllReq
	(*UsersServiceRegisterMobileDeviceRequest)(nil),           // 12: Scailo.UsersServiceRegisterMobileDeviceRequest
	(*FormFieldDatumCreateRequest)(nil),                       // 13: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                  // 14: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                  // 15: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                            // 16: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                              // 17: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                    // 18: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                          // 19: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                           // 20: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                       // 21: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                     // 22: Scailo.IdentifierUUIDWithUserComment
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil), // 23: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*UpdatePasswordReq)(nil),                                 // 24: Scailo.UpdatePasswordReq
	(*UpdateOwnPasswordReq)(nil),                              // 25: Scailo.UpdateOwnPasswordReq
	(*UploadPictureReq)(nil),                                  // 26: Scailo.UploadPictureReq
	(*IdentifierUUID)(nil),                                    // 27: Scailo.IdentifierUUID
	(*IdentifierZeroable)(nil),                                // 28: Scailo.IdentifierZeroable
	(*Identifier)(nil),                                        // 29: Scailo.Identifier
	(*SimpleSearchReq)(nil),                                   // 30: Scailo.SimpleSearchReq
	(*ActiveStatus)(nil),                                      // 31: Scailo.ActiveStatus
	(*IdentifiersList)(nil),                                   // 32: Scailo.IdentifiersList
	(*IdentifierUUIDsList)(nil),                               // 33: Scailo.IdentifierUUIDsList
	(*StringsList)(nil),                                       // 34: Scailo.StringsList
	(*Empty)(nil),                                             // 35: Scailo.Empty
	(*MonthAndDayFilter)(nil),                                 // 36: Scailo.MonthAndDayFilter
	(*StandardFile)(nil),                                      // 37: Scailo.StandardFile
	(*CountInSLCStatusRequest)(nil),                           // 38: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                // 39: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                         // 40: Scailo.MagicLink
	(*ImageResponse)(nil),                                     // 41: Scailo.ImageResponse
	(*Base64String)(nil),                                      // 42: Scailo.Base64String
	(*StringResponse)(nil),                                    // 43: Scailo.StringResponse
	(*CountResponse)(nil),                                     // 44: Scailo.CountResponse
}
var file_users_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.UsersServiceCreateRequest.user_type:type_name -> Scailo.USER_TYPE
	13, // 1: Scailo.UsersServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	13, // 2: Scailo.UsersServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	14, // 3: Scailo.User.metadata:type_name -> Scailo.EmployeeMetadata
	15, // 4: Scailo.User.approval_metadata:type_name -> Scailo.ApprovalMetadata
	16, // 5: Scailo.User.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	17, // 6: Scailo.User.logs:type_name -> Scailo.LogbookLogConciseSLC
	0,  // 7: Scailo.User.user_type:type_name -> Scailo.USER_TYPE
	18, // 8: Scailo.User.form_data:type_name -> Scailo.FormFieldDatum
	0,  // 9: Scailo.UserPrimaryInfo.user_type:type_name -> Scailo.USER_TYPE
	4,  // 10: Scailo.UsersList.list:type_name -> Scailo.User
	19, // 11: Scailo.UsersServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	20, // 12: Scailo.UsersServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 13: Scailo.UsersServicePaginationReq.sort_key:type_name -> Scailo.USER_SORT_KEY
	16, // 14: Scailo.UsersServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	4,  // 15: Scailo.UsersServicePaginationResponse.payload:type_name -> Scailo.User
	19, // 16: Scailo.UsersServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	20, // 17: Scailo.UsersServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 18: Scailo.UsersServiceFilterReq.sort_key:type_name -> Scailo.USER_SORT_KEY
	0,  // 19: Scailo.UsersServiceFilterReq.user_type:type_name -> Scailo.USER_TYPE
	16, // 20: Scailo.UsersServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	21, // 21: Scailo.UsersServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	19, // 22: Scailo.UsersServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	0,  // 23: Scailo.UsersServiceCountReq.user_type:type_name -> Scailo.USER_TYPE
	16, // 24: Scailo.UsersServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	21, // 25: Scailo.UsersServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	19, // 26: Scailo.UsersServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	20, // 27: Scailo.UsersServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 28: Scailo.UsersServiceSearchAllReq.sort_key:type_name -> Scailo.USER_SORT_KEY
	0,  // 29: Scailo.UsersServiceSearchAllReq.user_type:type_name -> Scailo.USER_TYPE
	16, // 30: Scailo.UsersServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	12, // 31: Scailo.UsersService.RegisterMobileDevice:input_type -> Scailo.UsersServiceRegisterMobileDeviceRequest
	2,  // 32: Scailo.UsersService.Create:input_type -> Scailo.UsersServiceCreateRequest
	2,  // 33: Scailo.UsersService.Draft:input_type -> Scailo.UsersServiceCreateRequest
	3,  // 34: Scailo.UsersService.DraftUpdate:input_type -> Scailo.UsersServiceUpdateRequest
	22, // 35: Scailo.UsersService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 36: Scailo.UsersService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 37: Scailo.UsersService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 38: Scailo.UsersService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	3,  // 39: Scailo.UsersService.RevisionUpdate:input_type -> Scailo.UsersServiceUpdateRequest
	22, // 40: Scailo.UsersService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 41: Scailo.UsersService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 42: Scailo.UsersService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 43: Scailo.UsersService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	23, // 44: Scailo.UsersService.CreateMagicLinkForSignature:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	24, // 45: Scailo.UsersService.UpdatePassword:input_type -> Scailo.UpdatePasswordReq
	25, // 46: Scailo.UsersService.UpdateOwnPassword:input_type -> Scailo.UpdateOwnPasswordReq
	26, // 47: Scailo.UsersService.UpdateProfilePicture:input_type -> Scailo.UploadPictureReq
	26, // 48: Scailo.UsersService.UpdateSignature:input_type -> Scailo.UploadPictureReq
	27, // 49: Scailo.UsersService.MFAEnable:input_type -> Scailo.IdentifierUUID
	27, // 50: Scailo.UsersService.MFAReset:input_type -> Scailo.IdentifierUUID
	28, // 51: Scailo.UsersService.ViewByID:input_type -> Scailo.IdentifierZeroable
	27, // 52: Scailo.UsersService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	29, // 53: Scailo.UsersService.ViewEssentialByID:input_type -> Scailo.Identifier
	27, // 54: Scailo.UsersService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	30, // 55: Scailo.UsersService.ViewByUsername:input_type -> Scailo.SimpleSearchReq
	30, // 56: Scailo.UsersService.ViewByCode:input_type -> Scailo.SimpleSearchReq
	31, // 57: Scailo.UsersService.ViewAll:input_type -> Scailo.ActiveStatus
	27, // 58: Scailo.UsersService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	7,  // 59: Scailo.UsersService.ViewWithPagination:input_type -> Scailo.UsersServicePaginationReq
	32, // 60: Scailo.UsersService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	33, // 61: Scailo.UsersService.ViewFromUUIDs:input_type -> Scailo.IdentifierUUIDsList
	34, // 62: Scailo.UsersService.ViewFromUsernames:input_type -> Scailo.StringsList
	35, // 63: Scailo.UsersService.ViewSelf:input_type -> Scailo.Empty
	36, // 64: Scailo.UsersService.ViewBirthdaysOn:input_type -> Scailo.MonthAndDayFilter
	27, // 65: Scailo.UsersService.ViewSignature:input_type -> Scailo.IdentifierUUID
	27, // 66: Scailo.UsersService.ViewProfilePicture:input_type -> Scailo.IdentifierUUID
	27, // 67: Scailo.UsersService.ViewThumbnailPicture:input_type -> Scailo.IdentifierUUID
	27, // 68: Scailo.UsersService.ViewVCard:input_type -> Scailo.IdentifierUUID
	27, // 69: Scailo.UsersService.ViewQRImage:input_type -> Scailo.IdentifierUUID
	27, // 70: Scailo.UsersService.ViewQRString:input_type -> Scailo.IdentifierUUID
	37, // 71: Scailo.UsersService.IdentifyCroppedFace:input_type -> Scailo.StandardFile
	37, // 72: Scailo.UsersService.IdentifyFullFace:input_type -> Scailo.StandardFile
	11, // 73: Scailo.UsersService.SearchAll:input_type -> Scailo.UsersServiceSearchAllReq
	9,  // 74: Scailo.UsersService.Filter:input_type -> Scailo.UsersServiceFilterReq
	38, // 75: Scailo.UsersService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	10, // 76: Scailo.UsersService.Count:input_type -> Scailo.UsersServiceCountReq
	9,  // 77: Scailo.UsersService.DownloadAsCSV:input_type -> Scailo.UsersServiceFilterReq
	37, // 78: Scailo.UsersService.ImportFromCSV:input_type -> Scailo.StandardFile
	39, // 79: Scailo.UsersService.RegisterMobileDevice:output_type -> Scailo.IdentifierResponse
	39, // 80: Scailo.UsersService.Create:output_type -> Scailo.IdentifierResponse
	39, // 81: Scailo.UsersService.Draft:output_type -> Scailo.IdentifierResponse
	39, // 82: Scailo.UsersService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	39, // 83: Scailo.UsersService.SendForVerification:output_type -> Scailo.IdentifierResponse
	39, // 84: Scailo.UsersService.Verify:output_type -> Scailo.IdentifierResponse
	39, // 85: Scailo.UsersService.Approve:output_type -> Scailo.IdentifierResponse
	39, // 86: Scailo.UsersService.SendForRevision:output_type -> Scailo.IdentifierResponse
	39, // 87: Scailo.UsersService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	39, // 88: Scailo.UsersService.Halt:output_type -> Scailo.IdentifierResponse
	39, // 89: Scailo.UsersService.Discard:output_type -> Scailo.IdentifierResponse
	39, // 90: Scailo.UsersService.Restore:output_type -> Scailo.IdentifierResponse
	39, // 91: Scailo.UsersService.CommentAdd:output_type -> Scailo.IdentifierResponse
	40, // 92: Scailo.UsersService.CreateMagicLinkForSignature:output_type -> Scailo.MagicLink
	39, // 93: Scailo.UsersService.UpdatePassword:output_type -> Scailo.IdentifierResponse
	39, // 94: Scailo.UsersService.UpdateOwnPassword:output_type -> Scailo.IdentifierResponse
	39, // 95: Scailo.UsersService.UpdateProfilePicture:output_type -> Scailo.IdentifierResponse
	39, // 96: Scailo.UsersService.UpdateSignature:output_type -> Scailo.IdentifierResponse
	41, // 97: Scailo.UsersService.MFAEnable:output_type -> Scailo.ImageResponse
	39, // 98: Scailo.UsersService.MFAReset:output_type -> Scailo.IdentifierResponse
	4,  // 99: Scailo.UsersService.ViewByID:output_type -> Scailo.User
	4,  // 100: Scailo.UsersService.ViewByUUID:output_type -> Scailo.User
	4,  // 101: Scailo.UsersService.ViewEssentialByID:output_type -> Scailo.User
	4,  // 102: Scailo.UsersService.ViewEssentialByUUID:output_type -> Scailo.User
	4,  // 103: Scailo.UsersService.ViewByUsername:output_type -> Scailo.User
	4,  // 104: Scailo.UsersService.ViewByCode:output_type -> Scailo.User
	6,  // 105: Scailo.UsersService.ViewAll:output_type -> Scailo.UsersList
	6,  // 106: Scailo.UsersService.ViewAllForEntityUUID:output_type -> Scailo.UsersList
	8,  // 107: Scailo.UsersService.ViewWithPagination:output_type -> Scailo.UsersServicePaginationResponse
	6,  // 108: Scailo.UsersService.ViewFromIDs:output_type -> Scailo.UsersList
	6,  // 109: Scailo.UsersService.ViewFromUUIDs:output_type -> Scailo.UsersList
	6,  // 110: Scailo.UsersService.ViewFromUsernames:output_type -> Scailo.UsersList
	4,  // 111: Scailo.UsersService.ViewSelf:output_type -> Scailo.User
	6,  // 112: Scailo.UsersService.ViewBirthdaysOn:output_type -> Scailo.UsersList
	42, // 113: Scailo.UsersService.ViewSignature:output_type -> Scailo.Base64String
	41, // 114: Scailo.UsersService.ViewProfilePicture:output_type -> Scailo.ImageResponse
	41, // 115: Scailo.UsersService.ViewThumbnailPicture:output_type -> Scailo.ImageResponse
	41, // 116: Scailo.UsersService.ViewVCard:output_type -> Scailo.ImageResponse
	41, // 117: Scailo.UsersService.ViewQRImage:output_type -> Scailo.ImageResponse
	43, // 118: Scailo.UsersService.ViewQRString:output_type -> Scailo.StringResponse
	4,  // 119: Scailo.UsersService.IdentifyCroppedFace:output_type -> Scailo.User
	4,  // 120: Scailo.UsersService.IdentifyFullFace:output_type -> Scailo.User
	6,  // 121: Scailo.UsersService.SearchAll:output_type -> Scailo.UsersList
	6,  // 122: Scailo.UsersService.Filter:output_type -> Scailo.UsersList
	44, // 123: Scailo.UsersService.CountInStatus:output_type -> Scailo.CountResponse
	44, // 124: Scailo.UsersService.Count:output_type -> Scailo.CountResponse
	37, // 125: Scailo.UsersService.DownloadAsCSV:output_type -> Scailo.StandardFile
	33, // 126: Scailo.UsersService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	79, // [79:127] is the sub-list for method output_type
	31, // [31:79] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_users_scailo_proto_init() }
func file_users_scailo_proto_init() {
	if File_users_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_users_scailo_proto_rawDesc), len(file_users_scailo_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_users_scailo_proto_goTypes,
		DependencyIndexes: file_users_scailo_proto_depIdxs,
		EnumInfos:         file_users_scailo_proto_enumTypes,
		MessageInfos:      file_users_scailo_proto_msgTypes,
	}.Build()
	File_users_scailo_proto = out.File
	file_users_scailo_proto_goTypes = nil
	file_users_scailo_proto_depIdxs = nil
}
