// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: general_settings.scailo.proto

package sdk

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	GeneralSettingsService_UpdateSettings_FullMethodName         = "/Scailo.GeneralSettingsService/UpdateSettings"
	GeneralSettingsService_ViewSettings_FullMethodName           = "/Scailo.GeneralSettingsService/ViewSettings"
	GeneralSettingsService_UpdateOrganizationLogo_FullMethodName = "/Scailo.GeneralSettingsService/UpdateOrganizationLogo"
	GeneralSettingsService_ViewOrganizationLogo_FullMethodName   = "/Scailo.GeneralSettingsService/ViewOrganizationLogo"
)

// GeneralSettingsServiceClient is the client API for GeneralSettingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Describes the common methods applicable on general settings
type GeneralSettingsServiceClient interface {
	// Update General Settings
	UpdateSettings(ctx context.Context, in *GeneralSettingsUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// View the current settings
	ViewSettings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GeneralSettings, error)
	// Update the logo of the organization
	UpdateOrganizationLogo(ctx context.Context, in *StandardFile, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// View current logo of the organization
	ViewOrganizationLogo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ImageResponse, error)
}

type generalSettingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGeneralSettingsServiceClient(cc grpc.ClientConnInterface) GeneralSettingsServiceClient {
	return &generalSettingsServiceClient{cc}
}

func (c *generalSettingsServiceClient) UpdateSettings(ctx context.Context, in *GeneralSettingsUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, GeneralSettingsService_UpdateSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalSettingsServiceClient) ViewSettings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GeneralSettings, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GeneralSettings)
	err := c.cc.Invoke(ctx, GeneralSettingsService_ViewSettings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalSettingsServiceClient) UpdateOrganizationLogo(ctx context.Context, in *StandardFile, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, GeneralSettingsService_UpdateOrganizationLogo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *generalSettingsServiceClient) ViewOrganizationLogo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, GeneralSettingsService_ViewOrganizationLogo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GeneralSettingsService
