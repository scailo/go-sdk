// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: on_duties.scailo.proto

package sdk

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	OnDutiesService_Create_FullMethodName                  = "/Scailo.OnDutiesService/Create"
	OnDutiesService_Draft_FullMethodName                   = "/Scailo.OnDutiesService/Draft"
	OnDutiesService_DraftUpdate_FullMethodName             = "/Scailo.OnDutiesService/DraftUpdate"
	OnDutiesService_SendForVerification_FullMethodName     = "/Scailo.OnDutiesService/SendForVerification"
	OnDutiesService_Verify_FullMethodName                  = "/Scailo.OnDutiesService/Verify"
	OnDutiesService_Approve_FullMethodName                 = "/Scailo.OnDutiesService/Approve"
	OnDutiesService_SendForRevision_FullMethodName         = "/Scailo.OnDutiesService/SendForRevision"
	OnDutiesService_RevisionUpdate_FullMethodName          = "/Scailo.OnDutiesService/RevisionUpdate"
	OnDutiesService_Halt_FullMethodName                    = "/Scailo.OnDutiesService/Halt"
	OnDutiesService_Discard_FullMethodName                 = "/Scailo.OnDutiesService/Discard"
	OnDutiesService_Restore_FullMethodName                 = "/Scailo.OnDutiesService/Restore"
	OnDutiesService_Complete_FullMethodName                = "/Scailo.OnDutiesService/Complete"
	OnDutiesService_Repeat_FullMethodName                  = "/Scailo.OnDutiesService/Repeat"
	OnDutiesService_CommentAdd_FullMethodName              = "/Scailo.OnDutiesService/CommentAdd"
	OnDutiesService_CreateMagicLink_FullMethodName         = "/Scailo.OnDutiesService/CreateMagicLink"
	OnDutiesService_RecordImageEntry_FullMethodName        = "/Scailo.OnDutiesService/RecordImageEntry"
	OnDutiesService_RecordImageExit_FullMethodName         = "/Scailo.OnDutiesService/RecordImageExit"
	OnDutiesService_ViewByID_FullMethodName                = "/Scailo.OnDutiesService/ViewByID"
	OnDutiesService_ViewByUUID_FullMethodName              = "/Scailo.OnDutiesService/ViewByUUID"
	OnDutiesService_ViewEssentialByID_FullMethodName       = "/Scailo.OnDutiesService/ViewEssentialByID"
	OnDutiesService_ViewEssentialByUUID_FullMethodName     = "/Scailo.OnDutiesService/ViewEssentialByUUID"
	OnDutiesService_ViewFromIDs_FullMethodName             = "/Scailo.OnDutiesService/ViewFromIDs"
	OnDutiesService_ViewAll_FullMethodName                 = "/Scailo.OnDutiesService/ViewAll"
	OnDutiesService_ViewAllForEntityUUID_FullMethodName    = "/Scailo.OnDutiesService/ViewAllForEntityUUID"
	OnDutiesService_ViewWithPagination_FullMethodName      = "/Scailo.OnDutiesService/ViewWithPagination"
	OnDutiesService_ViewEntryImage_FullMethodName          = "/Scailo.OnDutiesService/ViewEntryImage"
	OnDutiesService_ConfirmEntryImage_FullMethodName       = "/Scailo.OnDutiesService/ConfirmEntryImage"
	OnDutiesService_ViewExitImage_FullMethodName           = "/Scailo.OnDutiesService/ViewExitImage"
	OnDutiesService_ConfirmExitImage_FullMethodName        = "/Scailo.OnDutiesService/ConfirmExitImage"
	OnDutiesService_ViewEntryGPSCoordinates_FullMethodName = "/Scailo.OnDutiesService/ViewEntryGPSCoordinates"
	OnDutiesService_ViewExitGPSCoordinates_FullMethodName  = "/Scailo.OnDutiesService/ViewExitGPSCoordinates"
	OnDutiesService_ViewEntryGPSStaticImage_FullMethodName = "/Scailo.OnDutiesService/ViewEntryGPSStaticImage"
	OnDutiesService_ViewExitGPSStaticImage_FullMethodName  = "/Scailo.OnDutiesService/ViewExitGPSStaticImage"
	OnDutiesService_SearchAll_FullMethodName               = "/Scailo.OnDutiesService/SearchAll"
	OnDutiesService_Filter_FullMethodName                  = "/Scailo.OnDutiesService/Filter"
	OnDutiesService_CountInStatus_FullMethodName           = "/Scailo.OnDutiesService/CountInStatus"
	OnDutiesService_Count_FullMethodName                   = "/Scailo.OnDutiesService/Count"
	OnDutiesService_DownloadAsCSV_FullMethodName           = "/Scailo.OnDutiesService/DownloadAsCSV"
)

// OnDutiesServiceClient is the client API for OnDutiesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Describes the common methods applicable on each onduty
type OnDutiesServiceClient interface {
	// Create and send for verification
	Create(ctx context.Context, in *OnDutiesServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Create and save as draft
	Draft(ctx context.Context, in *OnDutiesServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update draft
	DraftUpdate(ctx context.Context, in *OnDutiesServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send for verification
	SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Verify
	Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Approve
	Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send For Revision
	SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update revision
	RevisionUpdate(ctx context.Context, in *OnDutiesServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Halt
	Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Discard
	Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Restore
	Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Complete
	Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Repeat
	Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Add comment
	CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send Email
	// rpc SendEmail (Identifier) returns (IdentifierResponse);
	// Create a magic link
	CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error)
	// Store entry time
	RecordImageEntry(ctx context.Context, in *OnDutiesServiceImageEntryRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Store exit time
	RecordImageExit(ctx context.Context, in *OnDutiesServiceImageExitRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// View by ID
	ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*OnDuty, error)
	// View by UUID
	ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDuty, error)
	// View only essential components by ID (without logs)
	ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*OnDuty, error)
	// View only essential components (without logs) that matches the given UUID
	ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDuty, error)
	// View all records with the given IDs
	ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*OnDutiesList, error)
	// View all
	ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*OnDutiesList, error)
	// View all with the given entity UUID
	ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDutiesList, error)
	// View with pagination
	ViewWithPagination(ctx context.Context, in *OnDutiesServicePaginationReq, opts ...grpc.CallOption) (*OnDutiesServicePaginationResponse, error)
	// View entry image for onduty UUID
	ViewEntryImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error)
	// Confirm that the entry image of the given onduty UUID belongs to the user
	ConfirmEntryImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// View exit image for onduty UUID
	ViewExitImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error)
	// Confirm that the exit image of the given onduty UUID belongs to the user
	ConfirmExitImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// View entry GPS coordinates for onduty UUID
	ViewEntryGPSCoordinates(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*GPSCoordinatesResponse, error)
	// View exit GPS coordinates for onduty UUID
	ViewExitGPSCoordinates(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*GPSCoordinatesResponse, error)
	// View entry GPS static image from Google Maps
	ViewEntryGPSStaticImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error)
	// View exit GPS static image from Google Maps
	ViewExitGPSStaticImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error)
	// View all that match the given search key
	SearchAll(ctx context.Context, in *OnDutiesServiceSearchAllReq, opts ...grpc.CallOption) (*OnDutiesList, error)
	// View all that match the given filter criteria
	Filter(ctx context.Context, in *OnDutiesServiceFilterReq, opts ...grpc.CallOption) (*OnDutiesList, error)
	// Count in status
	CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error)
	// Count all that match the given criteria
	Count(ctx context.Context, in *OnDutiesServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error)
	// CSV operations
	// Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
	DownloadAsCSV(ctx context.Context, in *OnDutiesServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error)
}

type onDutiesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOnDutiesServiceClient(cc grpc.ClientConnInterface) OnDutiesServiceClient {
	return &onDutiesServiceClient{cc}
}

func (c *onDutiesServiceClient) Create(ctx context.Context, in *OnDutiesServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Draft(ctx context.Context, in *OnDutiesServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Draft_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) DraftUpdate(ctx context.Context, in *OnDutiesServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_DraftUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_SendForVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Verify_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Approve_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_SendForRevision_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) RevisionUpdate(ctx context.Context, in *OnDutiesServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_RevisionUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Halt_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Discard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Restore_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Complete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Repeat_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_CommentAdd_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MagicLink)
	err := c.cc.Invoke(ctx, OnDutiesService_CreateMagicLink_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) RecordImageEntry(ctx context.Context, in *OnDutiesServiceImageEntryRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_RecordImageEntry_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) RecordImageExit(ctx context.Context, in *OnDutiesServiceImageExitRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_RecordImageExit_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*OnDuty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDuty)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDuty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDuty)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*OnDuty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDuty)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewEssentialByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDuty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDuty)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewEssentialByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*OnDutiesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesList)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewFromIDs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*OnDutiesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesList)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*OnDutiesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesList)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewAllForEntityUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewWithPagination(ctx context.Context, in *OnDutiesServicePaginationReq, opts ...grpc.CallOption) (*OnDutiesServicePaginationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesServicePaginationResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewWithPagination_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewEntryImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewEntryImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ConfirmEntryImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ConfirmEntryImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewExitImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewExitImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ConfirmExitImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ConfirmExitImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewEntryGPSCoordinates(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*GPSCoordinatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GPSCoordinatesResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewEntryGPSCoordinates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewExitGPSCoordinates(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*GPSCoordinatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GPSCoordinatesResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewExitGPSCoordinates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewEntryGPSStaticImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewEntryGPSStaticImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) ViewExitGPSStaticImage(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*ImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ImageResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_ViewExitGPSStaticImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) SearchAll(ctx context.Context, in *OnDutiesServiceSearchAllReq, opts ...grpc.CallOption) (*OnDutiesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesList)
	err := c.cc.Invoke(ctx, OnDutiesService_SearchAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Filter(ctx context.Context, in *OnDutiesServiceFilterReq, opts ...grpc.CallOption) (*OnDutiesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(OnDutiesList)
	err := c.cc.Invoke(ctx, OnDutiesService_Filter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_CountInStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) Count(ctx context.Context, in *OnDutiesServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, OnDutiesService_Count_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onDutiesServiceClient) DownloadAsCSV(ctx context.Context, in *OnDutiesServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, OnDutiesService_DownloadAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnDutiesService
