// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: debit_notes.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores all the possible references from which a debit note can be added
type DEBIT_NOTE_REF_FROM int32

const (
	// Used only in filters
	DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED DEBIT_NOTE_REF_FROM = 0
	// Denotes that the debit note originated from a purchase order
	DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_PURCHASE_ORDER DEBIT_NOTE_REF_FROM = 1
)

// Enum value maps for DEBIT_NOTE_REF_FROM.
var (
	DEBIT_NOTE_REF_FROM_name = map[int32]string{
		0: "DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED",
		1: "DEBIT_NOTE_REF_FROM_PURCHASE_ORDER",
	}
	DEBIT_NOTE_REF_FROM_value = map[string]int32{
		"DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED": 0,
		"DEBIT_NOTE_REF_FROM_PURCHASE_ORDER":  1,
	}
)

func (x DEBIT_NOTE_REF_FROM) Enum() *DEBIT_NOTE_REF_FROM {
	p := new(DEBIT_NOTE_REF_FROM)
	*p = x
	return p
}

func (x DEBIT_NOTE_REF_FROM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DEBIT_NOTE_REF_FROM) Descriptor() protoreflect.EnumDescriptor {
	return file_debit_notes_scailo_proto_enumTypes[0].Descriptor()
}

func (DEBIT_NOTE_REF_FROM) Type() protoreflect.EnumType {
	return &file_debit_notes_scailo_proto_enumTypes[0]
}

func (x DEBIT_NOTE_REF_FROM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DEBIT_NOTE_REF_FROM.Descriptor instead.
func (DEBIT_NOTE_REF_FROM) EnumDescriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type DEBIT_NOTE_ITEM_SORT_KEY int32

const (
	// Fetch ordered results by id
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED DEBIT_NOTE_ITEM_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_CREATED_AT DEBIT_NOTE_ITEM_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT DEBIT_NOTE_ITEM_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_ON DEBIT_NOTE_ITEM_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_BY DEBIT_NOTE_ITEM_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID DEBIT_NOTE_ITEM_SORT_KEY = 5
	// Fetch ordered results by the family ID
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_FAMILY_ID DEBIT_NOTE_ITEM_SORT_KEY = 10
	// Fetch ordered results by the internal quantity
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY DEBIT_NOTE_ITEM_SORT_KEY = 11
	// Fetch ordered results by the vendor unit of material ID
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UOM_ID DEBIT_NOTE_ITEM_SORT_KEY = 12
	// Fetch ordered results by the vendor quantity
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_QUANTITY DEBIT_NOTE_ITEM_SORT_KEY = 13
	// Fetch ordered results by the vendor unit price
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE DEBIT_NOTE_ITEM_SORT_KEY = 14
	// Fetch ordered results by the tax group ID
	DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID DEBIT_NOTE_ITEM_SORT_KEY = 16
)

// Enum value maps for DEBIT_NOTE_ITEM_SORT_KEY.
var (
	DEBIT_NOTE_ITEM_SORT_KEY_name = map[int32]string{
		0:  "DEBIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED",
		1:  "DEBIT_NOTE_ITEM_SORT_KEY_CREATED_AT",
		2:  "DEBIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT",
		3:  "DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_ON",
		4:  "DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_BY",
		5:  "DEBIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID",
		10: "DEBIT_NOTE_ITEM_SORT_KEY_FAMILY_ID",
		11: "DEBIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY",
		12: "DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UOM_ID",
		13: "DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_QUANTITY",
		14: "DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE",
		16: "DEBIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID",
	}
	DEBIT_NOTE_ITEM_SORT_KEY_value = map[string]int32{
		"DEBIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED":    0,
		"DEBIT_NOTE_ITEM_SORT_KEY_CREATED_AT":        1,
		"DEBIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT":       2,
		"DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_ON":       3,
		"DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_BY":       4,
		"DEBIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID":  5,
		"DEBIT_NOTE_ITEM_SORT_KEY_FAMILY_ID":         10,
		"DEBIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY": 11,
		"DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UOM_ID":     12,
		"DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_QUANTITY":   13,
		"DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE": 14,
		"DEBIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID":      16,
	}
)

func (x DEBIT_NOTE_ITEM_SORT_KEY) Enum() *DEBIT_NOTE_ITEM_SORT_KEY {
	p := new(DEBIT_NOTE_ITEM_SORT_KEY)
	*p = x
	return p
}

func (x DEBIT_NOTE_ITEM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DEBIT_NOTE_ITEM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_debit_notes_scailo_proto_enumTypes[1].Descriptor()
}

func (DEBIT_NOTE_ITEM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_debit_notes_scailo_proto_enumTypes[1]
}

func (x DEBIT_NOTE_ITEM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DEBIT_NOTE_ITEM_SORT_KEY.Descriptor instead.
func (DEBIT_NOTE_ITEM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the applicable statuses of debit note items
type DEBIT_NOTE_ITEM_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	DEBIT_NOTE_ITEM_STATUS_DEBIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED DEBIT_NOTE_ITEM_STATUS = 0
	// Denotes that the debit note items must have been approved
	DEBIT_NOTE_ITEM_STATUS_DEBIT_NOTE_ITEM_STATUS_APPROVED DEBIT_NOTE_ITEM_STATUS = 1
	// Denotes that the debit note items must be waiting for approval
	DEBIT_NOTE_ITEM_STATUS_DEBIT_NOTE_ITEM_STATUS_UNAPPROVED DEBIT_NOTE_ITEM_STATUS = 2
)

// Enum value maps for DEBIT_NOTE_ITEM_STATUS.
var (
	DEBIT_NOTE_ITEM_STATUS_name = map[int32]string{
		0: "DEBIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED",
		1: "DEBIT_NOTE_ITEM_STATUS_APPROVED",
		2: "DEBIT_NOTE_ITEM_STATUS_UNAPPROVED",
	}
	DEBIT_NOTE_ITEM_STATUS_value = map[string]int32{
		"DEBIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED": 0,
		"DEBIT_NOTE_ITEM_STATUS_APPROVED":        1,
		"DEBIT_NOTE_ITEM_STATUS_UNAPPROVED":      2,
	}
)

func (x DEBIT_NOTE_ITEM_STATUS) Enum() *DEBIT_NOTE_ITEM_STATUS {
	p := new(DEBIT_NOTE_ITEM_STATUS)
	*p = x
	return p
}

func (x DEBIT_NOTE_ITEM_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DEBIT_NOTE_ITEM_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_debit_notes_scailo_proto_enumTypes[2].Descriptor()
}

func (DEBIT_NOTE_ITEM_STATUS) Type() protoreflect.EnumType {
	return &file_debit_notes_scailo_proto_enumTypes[2]
}

func (x DEBIT_NOTE_ITEM_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DEBIT_NOTE_ITEM_STATUS.Descriptor instead.
func (DEBIT_NOTE_ITEM_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the available sort keys
type DEBIT_NOTE_SORT_KEY int32

const (
	// Fetch ordered results by id
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED DEBIT_NOTE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_CREATED_AT DEBIT_NOTE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_MODIFIED_AT DEBIT_NOTE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_APPROVED_ON DEBIT_NOTE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_APPROVED_BY DEBIT_NOTE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_APPROVER_ROLE_ID DEBIT_NOTE_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_COMPLETED_ON DEBIT_NOTE_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_REFERENCE_ID DEBIT_NOTE_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_FINAL_REF_NUMBER DEBIT_NOTE_SORT_KEY = 11
	// Fetch ordered results by the total value
	DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_TOTAL_VALUE DEBIT_NOTE_SORT_KEY = 30
)

// Enum value maps for DEBIT_NOTE_SORT_KEY.
var (
	DEBIT_NOTE_SORT_KEY_name = map[int32]string{
		0:  "DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED",
		1:  "DEBIT_NOTE_SORT_KEY_CREATED_AT",
		2:  "DEBIT_NOTE_SORT_KEY_MODIFIED_AT",
		3:  "DEBIT_NOTE_SORT_KEY_APPROVED_ON",
		4:  "DEBIT_NOTE_SORT_KEY_APPROVED_BY",
		5:  "DEBIT_NOTE_SORT_KEY_APPROVER_ROLE_ID",
		6:  "DEBIT_NOTE_SORT_KEY_COMPLETED_ON",
		10: "DEBIT_NOTE_SORT_KEY_REFERENCE_ID",
		11: "DEBIT_NOTE_SORT_KEY_FINAL_REF_NUMBER",
		30: "DEBIT_NOTE_SORT_KEY_TOTAL_VALUE",
	}
	DEBIT_NOTE_SORT_KEY_value = map[string]int32{
		"DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED":   0,
		"DEBIT_NOTE_SORT_KEY_CREATED_AT":       1,
		"DEBIT_NOTE_SORT_KEY_MODIFIED_AT":      2,
		"DEBIT_NOTE_SORT_KEY_APPROVED_ON":      3,
		"DEBIT_NOTE_SORT_KEY_APPROVED_BY":      4,
		"DEBIT_NOTE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"DEBIT_NOTE_SORT_KEY_COMPLETED_ON":     6,
		"DEBIT_NOTE_SORT_KEY_REFERENCE_ID":     10,
		"DEBIT_NOTE_SORT_KEY_FINAL_REF_NUMBER": 11,
		"DEBIT_NOTE_SORT_KEY_TOTAL_VALUE":      30,
	}
)

func (x DEBIT_NOTE_SORT_KEY) Enum() *DEBIT_NOTE_SORT_KEY {
	p := new(DEBIT_NOTE_SORT_KEY)
	*p = x
	return p
}

func (x DEBIT_NOTE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DEBIT_NOTE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_debit_notes_scailo_proto_enumTypes[3].Descriptor()
}

func (DEBIT_NOTE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_debit_notes_scailo_proto_enumTypes[3]
}

func (x DEBIT_NOTE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DEBIT_NOTE_SORT_KEY.Descriptor instead.
func (DEBIT_NOTE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{3}
}

// Describes the parameters necessary to create a record
type DebitNotesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the debit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,15,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,16,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceCreateRequest) Reset() {
	*x = DebitNotesServiceCreateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceCreateRequest) ProtoMessage() {}

func (x *DebitNotesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *DebitNotesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNotesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *DebitNotesServiceCreateRequest) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNotesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type DebitNotesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the debit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,15,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,16,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceUpdateRequest) Reset() {
	*x = DebitNotesServiceUpdateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceUpdateRequest) ProtoMessage() {}

func (x *DebitNotesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *DebitNotesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *DebitNotesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *DebitNotesServiceUpdateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNotesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to perform an autofill request
type DebitNotesServiceAutofillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the record that needs to be updated
	Uuid          string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceAutofillRequest) Reset() {
	*x = DebitNotesServiceAutofillRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceAutofillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceAutofillRequest) ProtoMessage() {}

func (x *DebitNotesServiceAutofillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceAutofillRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceAutofillRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *DebitNotesServiceAutofillRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceAutofillRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Stores the UUID references of the record
type DebitNoteAncillaryParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the ref_id (the UUID of the associated ref_id)
	RefUuid string `protobuf:"bytes,213,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// The UUID of the currency (the UUID of the associated currency)
	CurrencyUuid  string `protobuf:"bytes,214,opt,name=currency_uuid,json=currencyUuid,proto3" json:"currency_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteAncillaryParameters) Reset() {
	*x = DebitNoteAncillaryParameters{}
	mi := &file_debit_notes_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteAncillaryParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteAncillaryParameters) ProtoMessage() {}

func (x *DebitNoteAncillaryParameters) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteAncillaryParameters.ProtoReflect.Descriptor instead.
func (*DebitNoteAncillaryParameters) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *DebitNoteAncillaryParameters) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *DebitNoteAncillaryParameters) GetCurrencyUuid() string {
	if x != nil {
		return x.CurrencyUuid
	}
	return ""
}

// Describes the parameters that are part of a standard response
type DebitNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this debit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this debit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this debit note
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this debit note was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the debit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,15,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,16,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Stores the total value of the debit note (as a double, which requires no adjustments)
	TotalValue float64 `protobuf:"fixed64,20,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	// The list of associated debit note items
	List []*DebitNoteItem `protobuf:"bytes,30,rep,name=list,proto3" json:"list,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,40,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNote) Reset() {
	*x = DebitNote{}
	mi := &file_debit_notes_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNote) ProtoMessage() {}

func (x *DebitNote) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNote.ProtoReflect.Descriptor instead.
func (*DebitNote) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *DebitNote) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNote) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DebitNote) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *DebitNote) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *DebitNote) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *DebitNote) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *DebitNote) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *DebitNote) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *DebitNote) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *DebitNote) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNote) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNote) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *DebitNote) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *DebitNote) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *DebitNote) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNote) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *DebitNote) GetList() []*DebitNoteItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DebitNote) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters required to add an item to a debit note
type DebitNotesServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the vendor's unit of material
	VendorUomId uint64 `protobuf:"varint,13,opt,name=vendor_uom_id,json=vendorUomId,proto3" json:"vendor_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in vendor's unit of material
	VendorQuantity uint64 `protobuf:"varint,14,opt,name=vendor_quantity,json=vendorQuantity,proto3" json:"vendor_quantity,omitempty"`
	// The unit price of the item (as supplied by the vendor)
	VendorUnitPrice uint64 `protobuf:"varint,15,opt,name=vendor_unit_price,json=vendorUnitPrice,proto3" json:"vendor_unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,18,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DebitNotesServiceItemCreateRequest) Reset() {
	*x = DebitNotesServiceItemCreateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceItemCreateRequest) ProtoMessage() {}

func (x *DebitNotesServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *DebitNotesServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceItemCreateRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetVendorUomId() uint64 {
	if x != nil {
		return x.VendorUomId
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetVendorQuantity() uint64 {
	if x != nil {
		return x.VendorQuantity
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetVendorUnitPrice() uint64 {
	if x != nil {
		return x.VendorUnitPrice
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNotesServiceItemCreateRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters required to add an individual item as part of multiple item addition to a debit note
type DebitNotesServiceMultipleItemsSingleton struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the vendor's unit of material
	VendorUomId uint64 `protobuf:"varint,13,opt,name=vendor_uom_id,json=vendorUomId,proto3" json:"vendor_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in vendor's unit of material
	VendorQuantity uint64 `protobuf:"varint,14,opt,name=vendor_quantity,json=vendorQuantity,proto3" json:"vendor_quantity,omitempty"`
	// The unit price of the item (as supplied by the vendor)
	VendorUnitPrice uint64 `protobuf:"varint,15,opt,name=vendor_unit_price,json=vendorUnitPrice,proto3" json:"vendor_unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,18,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DebitNotesServiceMultipleItemsSingleton) Reset() {
	*x = DebitNotesServiceMultipleItemsSingleton{}
	mi := &file_debit_notes_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceMultipleItemsSingleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceMultipleItemsSingleton) ProtoMessage() {}

func (x *DebitNotesServiceMultipleItemsSingleton) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceMultipleItemsSingleton.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceMultipleItemsSingleton) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetVendorUomId() uint64 {
	if x != nil {
		return x.VendorUomId
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetVendorQuantity() uint64 {
	if x != nil {
		return x.VendorQuantity
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetVendorUnitPrice() uint64 {
	if x != nil {
		return x.VendorUnitPrice
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsSingleton) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters required to add multiple items to a debit note
type DebitNotesServiceMultipleItemsCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// List of items
	List          []*DebitNotesServiceMultipleItemsSingleton `protobuf:"bytes,11,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceMultipleItemsCreateRequest) Reset() {
	*x = DebitNotesServiceMultipleItemsCreateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceMultipleItemsCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceMultipleItemsCreateRequest) ProtoMessage() {}

func (x *DebitNotesServiceMultipleItemsCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceMultipleItemsCreateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceMultipleItemsCreateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *DebitNotesServiceMultipleItemsCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceMultipleItemsCreateRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNotesServiceMultipleItemsCreateRequest) GetList() []*DebitNotesServiceMultipleItemsSingleton {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters required to update an item in a debit note
type DebitNotesServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the vendor's unit of material
	VendorUomId uint64 `protobuf:"varint,13,opt,name=vendor_uom_id,json=vendorUomId,proto3" json:"vendor_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in vendor's unit of material
	VendorQuantity uint64 `protobuf:"varint,14,opt,name=vendor_quantity,json=vendorQuantity,proto3" json:"vendor_quantity,omitempty"`
	// The unit price of the item (as supplied by the vendor)
	VendorUnitPrice uint64 `protobuf:"varint,15,opt,name=vendor_unit_price,json=vendorUnitPrice,proto3" json:"vendor_unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,18,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DebitNotesServiceItemUpdateRequest) Reset() {
	*x = DebitNotesServiceItemUpdateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceItemUpdateRequest) ProtoMessage() {}

func (x *DebitNotesServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *DebitNotesServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetVendorUomId() uint64 {
	if x != nil {
		return x.VendorUomId
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetVendorQuantity() uint64 {
	if x != nil {
		return x.VendorQuantity
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetVendorUnitPrice() uint64 {
	if x != nil {
		return x.VendorUnitPrice
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNotesServiceItemUpdateRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters that constitute an item associated to a debit note
type DebitNoteItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this debit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the vendor's unit of material
	VendorUomId uint64 `protobuf:"varint,13,opt,name=vendor_uom_id,json=vendorUomId,proto3" json:"vendor_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in vendor's unit of material
	VendorQuantity uint64 `protobuf:"varint,14,opt,name=vendor_quantity,json=vendorQuantity,proto3" json:"vendor_quantity,omitempty"`
	// The unit price of the item (as supplied by the vendor)
	VendorUnitPrice uint64 `protobuf:"varint,15,opt,name=vendor_unit_price,json=vendorUnitPrice,proto3" json:"vendor_unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,17,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,18,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DebitNoteItem) Reset() {
	*x = DebitNoteItem{}
	mi := &file_debit_notes_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteItem) ProtoMessage() {}

func (x *DebitNoteItem) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteItem.ProtoReflect.Descriptor instead.
func (*DebitNoteItem) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *DebitNoteItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNoteItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DebitNoteItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *DebitNoteItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *DebitNoteItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNoteItem) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNoteItem) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNoteItem) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *DebitNoteItem) GetVendorUomId() uint64 {
	if x != nil {
		return x.VendorUomId
	}
	return 0
}

func (x *DebitNoteItem) GetVendorQuantity() uint64 {
	if x != nil {
		return x.VendorQuantity
	}
	return 0
}

func (x *DebitNoteItem) GetVendorUnitPrice() uint64 {
	if x != nil {
		return x.VendorUnitPrice
	}
	return 0
}

func (x *DebitNoteItem) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *DebitNoteItem) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *DebitNoteItem) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the message consisting of the list of debit notes
type DebitNotesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*DebitNote `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesList) Reset() {
	*x = DebitNotesList{}
	mi := &file_debit_notes_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesList) ProtoMessage() {}

func (x *DebitNotesList) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesList.ProtoReflect.Descriptor instead.
func (*DebitNotesList) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *DebitNotesList) GetList() []*DebitNote {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of debit note items
type DebitNoteItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*DebitNoteItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteItemsList) Reset() {
	*x = DebitNoteItemsList{}
	mi := &file_debit_notes_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteItemsList) ProtoMessage() {}

func (x *DebitNoteItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteItemsList.ProtoReflect.Descriptor instead.
func (*DebitNoteItemsList) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *DebitNoteItemsList) GetList() []*DebitNoteItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type DebitNoteItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteItemHistoryRequest) Reset() {
	*x = DebitNoteItemHistoryRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteItemHistoryRequest) ProtoMessage() {}

func (x *DebitNoteItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*DebitNoteItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *DebitNoteItemHistoryRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNoteItemHistoryRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the parameters that are required to retrieve the info of a prospective debit note item
type DebitNoteItemProspectiveInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteItemProspectiveInfoRequest) Reset() {
	*x = DebitNoteItemProspectiveInfoRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteItemProspectiveInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteItemProspectiveInfoRequest) ProtoMessage() {}

func (x *DebitNoteItemProspectiveInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteItemProspectiveInfoRequest.ProtoReflect.Descriptor instead.
func (*DebitNoteItemProspectiveInfoRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *DebitNoteItemProspectiveInfoRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNoteItemProspectiveInfoRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
type DebitNotesServiceAlreadyAddedQuantityForSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,1,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,2,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated family ID
	FamilyId      uint64 `protobuf:"varint,3,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) Reset() {
	*x = DebitNotesServiceAlreadyAddedQuantityForSourceRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceAlreadyAddedQuantityForSourceRequest) ProtoMessage() {}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceAlreadyAddedQuantityForSourceRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceAlreadyAddedQuantityForSourceRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNotesServiceAlreadyAddedQuantityForSourceRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload to retrieve approved or unapproved items.
type DebitNoteItemsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey DEBIT_NOTE_ITEM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.DEBIT_NOTE_ITEM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the items
	Status DEBIT_NOTE_ITEM_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.DEBIT_NOTE_ITEM_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the debit note
	DebitNoteId uint64 `protobuf:"varint,20,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,21,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The ID of the vendor's unit of material
	VendorUomId uint64 `protobuf:"varint,23,opt,name=vendor_uom_id,json=vendorUomId,proto3" json:"vendor_uom_id,omitempty"`
	// The ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,27,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteItemsSearchRequest) Reset() {
	*x = DebitNoteItemsSearchRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteItemsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteItemsSearchRequest) ProtoMessage() {}

func (x *DebitNoteItemsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteItemsSearchRequest.ProtoReflect.Descriptor instead.
func (*DebitNoteItemsSearchRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *DebitNoteItemsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *DebitNoteItemsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *DebitNoteItemsSearchRequest) GetSortKey() DEBIT_NOTE_ITEM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return DEBIT_NOTE_ITEM_SORT_KEY_DEBIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED
}

func (x *DebitNoteItemsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNoteItemsSearchRequest) GetStatus() DEBIT_NOTE_ITEM_STATUS {
	if x != nil {
		return x.Status
	}
	return DEBIT_NOTE_ITEM_STATUS_DEBIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED
}

func (x *DebitNoteItemsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetVendorUomId() uint64 {
	if x != nil {
		return x.VendorUomId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *DebitNoteItemsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination items request
type DebitNotesServicePaginatedItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*DebitNoteItem `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServicePaginatedItemsResponse) Reset() {
	*x = DebitNotesServicePaginatedItemsResponse{}
	mi := &file_debit_notes_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServicePaginatedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServicePaginatedItemsResponse) ProtoMessage() {}

func (x *DebitNotesServicePaginatedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServicePaginatedItemsResponse.ProtoReflect.Descriptor instead.
func (*DebitNotesServicePaginatedItemsResponse) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *DebitNotesServicePaginatedItemsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNotesServicePaginatedItemsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNotesServicePaginatedItemsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DebitNotesServicePaginatedItemsResponse) GetPayload() []*DebitNoteItem {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes a pagination request to retrieve records
type DebitNotesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey DEBIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.DEBIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this debit note
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServicePaginationReq) Reset() {
	*x = DebitNotesServicePaginationReq{}
	mi := &file_debit_notes_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServicePaginationReq) ProtoMessage() {}

func (x *DebitNotesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*DebitNotesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *DebitNotesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *DebitNotesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNotesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNotesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *DebitNotesServicePaginationReq) GetSortKey() DEBIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *DebitNotesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type DebitNotesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*DebitNote `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServicePaginationResponse) Reset() {
	*x = DebitNotesServicePaginationResponse{}
	mi := &file_debit_notes_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServicePaginationResponse) ProtoMessage() {}

func (x *DebitNotesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*DebitNotesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *DebitNotesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNotesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNotesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DebitNotesServicePaginationResponse) GetPayload() []*DebitNote {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type DebitNotesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey DEBIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.DEBIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this debit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the debit note
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,30,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the associated vendor
	VendorId uint64 `protobuf:"varint,31,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,32,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,40,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the minimum value of the debit note (ignored if 0)
	TotalValueMin uint64 `protobuf:"varint,70,opt,name=total_value_min,json=totalValueMin,proto3" json:"total_value_min,omitempty"`
	// Stores the maximum value of the debit note (ignored if 0)
	TotalValueMax uint64 `protobuf:"varint,71,opt,name=total_value_max,json=totalValueMax,proto3" json:"total_value_max,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceFilterReq) Reset() {
	*x = DebitNotesServiceFilterReq{}
	mi := &file_debit_notes_scailo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceFilterReq) ProtoMessage() {}

func (x *DebitNotesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{19}
}

func (x *DebitNotesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *DebitNotesServiceFilterReq) GetSortKey() DEBIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *DebitNotesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNotesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *DebitNotesServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *DebitNotesServiceFilterReq) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceFilterReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetTotalValueMin() uint64 {
	if x != nil {
		return x.TotalValueMin
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetTotalValueMax() uint64 {
	if x != nil {
		return x.TotalValueMax
	}
	return 0
}

func (x *DebitNotesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type DebitNotesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this debit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the debit note
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,30,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the associated vendor
	VendorId uint64 `protobuf:"varint,31,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,32,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,40,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the minimum value of the debit note (ignored if 0)
	TotalValueMin uint64 `protobuf:"varint,70,opt,name=total_value_min,json=totalValueMin,proto3" json:"total_value_min,omitempty"`
	// Stores the maximum value of the debit note (ignored if 0)
	TotalValueMax uint64 `protobuf:"varint,71,opt,name=total_value_max,json=totalValueMax,proto3" json:"total_value_max,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceCountReq) Reset() {
	*x = DebitNotesServiceCountReq{}
	mi := &file_debit_notes_scailo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceCountReq) ProtoMessage() {}

func (x *DebitNotesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceCountReq.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{20}
}

func (x *DebitNotesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNotesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *DebitNotesServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *DebitNotesServiceCountReq) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceCountReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetTotalValueMin() uint64 {
	if x != nil {
		return x.TotalValueMin
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetTotalValueMax() uint64 {
	if x != nil {
		return x.TotalValueMax
	}
	return 0
}

func (x *DebitNotesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type DebitNotesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey DEBIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.DEBIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The associated reference
	RefFrom DEBIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.DEBIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated vendor
	VendorId      uint64 `protobuf:"varint,25,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNotesServiceSearchAllReq) Reset() {
	*x = DebitNotesServiceSearchAllReq{}
	mi := &file_debit_notes_scailo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceSearchAllReq) ProtoMessage() {}

func (x *DebitNotesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{21}
}

func (x *DebitNotesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DebitNotesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DebitNotesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *DebitNotesServiceSearchAllReq) GetSortKey() DEBIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return DEBIT_NOTE_SORT_KEY_DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *DebitNotesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNotesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *DebitNotesServiceSearchAllReq) GetRefFrom() DEBIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return DEBIT_NOTE_REF_FROM_DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *DebitNotesServiceSearchAllReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *DebitNotesServiceSearchAllReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

// Describes the parameters necessary to create a debit note reference
type DebitNotesServiceReferenceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the purchase return ID
	PurchaseReturnId uint64 `protobuf:"varint,11,opt,name=purchase_return_id,json=purchaseReturnId,proto3" json:"purchase_return_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DebitNotesServiceReferenceCreateRequest) Reset() {
	*x = DebitNotesServiceReferenceCreateRequest{}
	mi := &file_debit_notes_scailo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNotesServiceReferenceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNotesServiceReferenceCreateRequest) ProtoMessage() {}

func (x *DebitNotesServiceReferenceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNotesServiceReferenceCreateRequest.ProtoReflect.Descriptor instead.
func (*DebitNotesServiceReferenceCreateRequest) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{22}
}

func (x *DebitNotesServiceReferenceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNotesServiceReferenceCreateRequest) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNotesServiceReferenceCreateRequest) GetPurchaseReturnId() uint64 {
	if x != nil {
		return x.PurchaseReturnId
	}
	return 0
}

// Describes the parameters that constitute a debit note reference
type DebitNoteReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this debit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the debit note ID
	DebitNoteId uint64 `protobuf:"varint,10,opt,name=debit_note_id,json=debitNoteId,proto3" json:"debit_note_id,omitempty"`
	// Stores the purchase return ID
	PurchaseReturnId uint64 `protobuf:"varint,11,opt,name=purchase_return_id,json=purchaseReturnId,proto3" json:"purchase_return_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DebitNoteReference) Reset() {
	*x = DebitNoteReference{}
	mi := &file_debit_notes_scailo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteReference) ProtoMessage() {}

func (x *DebitNoteReference) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteReference.ProtoReflect.Descriptor instead.
func (*DebitNoteReference) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{23}
}

func (x *DebitNoteReference) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *DebitNoteReference) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DebitNoteReference) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *DebitNoteReference) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *DebitNoteReference) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *DebitNoteReference) GetDebitNoteId() uint64 {
	if x != nil {
		return x.DebitNoteId
	}
	return 0
}

func (x *DebitNoteReference) GetPurchaseReturnId() uint64 {
	if x != nil {
		return x.PurchaseReturnId
	}
	return 0
}

// Describes the message consisting of the list of debit note references
type DebitNoteReferencesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*DebitNoteReference `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteReferencesList) Reset() {
	*x = DebitNoteReferencesList{}
	mi := &file_debit_notes_scailo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteReferencesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteReferencesList) ProtoMessage() {}

func (x *DebitNoteReferencesList) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteReferencesList.ProtoReflect.Descriptor instead.
func (*DebitNoteReferencesList) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{24}
}

func (x *DebitNoteReferencesList) GetList() []*DebitNoteReference {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the returned statistics of the debit note
type DebitNoteReturnStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the ID of the family
	FamilyId uint64 `protobuf:"varint,1,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the billed quantity
	BilledQuantity uint64 `protobuf:"varint,2,opt,name=billed_quantity,json=billedQuantity,proto3" json:"billed_quantity,omitempty"`
	// Stores the returned quantity
	ReturnedQuantity uint64 `protobuf:"varint,3,opt,name=returned_quantity,json=returnedQuantity,proto3" json:"returned_quantity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DebitNoteReturnStatistics) Reset() {
	*x = DebitNoteReturnStatistics{}
	mi := &file_debit_notes_scailo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteReturnStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteReturnStatistics) ProtoMessage() {}

func (x *DebitNoteReturnStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteReturnStatistics.ProtoReflect.Descriptor instead.
func (*DebitNoteReturnStatistics) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{25}
}

func (x *DebitNoteReturnStatistics) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *DebitNoteReturnStatistics) GetBilledQuantity() uint64 {
	if x != nil {
		return x.BilledQuantity
	}
	return 0
}

func (x *DebitNoteReturnStatistics) GetReturnedQuantity() uint64 {
	if x != nil {
		return x.ReturnedQuantity
	}
	return 0
}

// Describes the list of returned statistics of the debit note
type DebitNoteReturnStatisticsList struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	List          []*DebitNoteReturnStatistics `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitNoteReturnStatisticsList) Reset() {
	*x = DebitNoteReturnStatisticsList{}
	mi := &file_debit_notes_scailo_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitNoteReturnStatisticsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitNoteReturnStatisticsList) ProtoMessage() {}

func (x *DebitNoteReturnStatisticsList) ProtoReflect() protoreflect.Message {
	mi := &file_debit_notes_scailo_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitNoteReturnStatisticsList.ProtoReflect.Descriptor instead.
func (*DebitNoteReturnStatisticsList) Descriptor() ([]byte, []int) {
	return file_debit_notes_scailo_proto_rawDescGZIP(), []int{26}
}

func (x *DebitNoteReturnStatisticsList) GetList() []*DebitNoteReturnStatistics {
	if x != nil {
		return x.List
	}
	return nil
}

var File_debit_notes_scailo_proto protoreflect.FileDescriptor

const file_debit_notes_scailo_proto_rawDesc = "" +
	"\n" +
	"\x18debit_notes.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x15families.scailo.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\x9c\x04\n" +
	"\x1eDebitNotesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x126\n" +
	"\bref_from\x18\f \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x126\n" +
	"\x12miscellaneous_cost\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\x11miscellaneousCost\x122\n" +
	"\x10overall_discount\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xdf\x03\n" +
	"\x1eDebitNotesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x126\n" +
	"\x12miscellaneous_cost\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\x11miscellaneousCost\x122\n" +
	"\x10overall_discount\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"c\n" +
	" DebitNotesServiceAutofillRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\"`\n" +
	"\x1cDebitNoteAncillaryParameters\x12\x1a\n" +
	"\bref_uuid\x18\xd5\x01 \x01(\tR\arefUuid\x12$\n" +
	"\rcurrency_uuid\x18\xd6\x01 \x01(\tR\fcurrencyUuid\"\x96\x06\n" +
	"\tDebitNote\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x126\n" +
	"\bref_from\x18\f \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\r \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x0e \x01(\x04R\n" +
	"currencyId\x12-\n" +
	"\x12miscellaneous_cost\x18\x0f \x01(\x04R\x11miscellaneousCost\x12)\n" +
	"\x10overall_discount\x18\x10 \x01(\x04R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12\x1f\n" +
	"\vtotal_value\x18\x14 \x01(\x01R\n" +
	"totalValue\x12)\n" +
	"\x04list\x18\x1e \x03(\v2\x15.Scailo.DebitNoteItemR\x04list\x123\n" +
	"\tform_data\x18( \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"\xd4\x03\n" +
	"\"DebitNotesServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12+\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\vdebitNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rvendor_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vvendorUomId\x120\n" +
	"\x0fvendor_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorQuantity\x123\n" +
	"\x11vendor_unit_price\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fvendorUnitPrice\x12)\n" +
	"\ftax_group_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x12 \x01(\tR\x0especifications\"\x89\x03\n" +
	"'DebitNotesServiceMultipleItemsSingleton\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rvendor_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vvendorUomId\x120\n" +
	"\x0fvendor_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorQuantity\x123\n" +
	"\x11vendor_unit_price\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fvendorUnitPrice\x12)\n" +
	"\ftax_group_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x12 \x01(\tR\x0especifications\"\xc2\x01\n" +
	"+DebitNotesServiceMultipleItemsCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12+\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\vdebitNoteId\x12C\n" +
	"\x04list\x18\v \x03(\v2/.Scailo.DebitNotesServiceMultipleItemsSingletonR\x04list\"\x9a\x03\n" +
	"\"DebitNotesServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rvendor_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vvendorUomId\x120\n" +
	"\x0fvendor_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0evendorQuantity\x123\n" +
	"\x11vendor_unit_price\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fvendorUnitPrice\x12)\n" +
	"\ftax_group_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x12 \x01(\tR\x0especifications\"\xc3\x04\n" +
	"\rDebitNoteItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\"\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04R\vdebitNoteId\x12\x1b\n" +
	"\tfamily_id\x18\v \x01(\x04R\bfamilyId\x12+\n" +
	"\x11internal_quantity\x18\f \x01(\x04R\x10internalQuantity\x12\"\n" +
	"\rvendor_uom_id\x18\r \x01(\x04R\vvendorUomId\x12'\n" +
	"\x0fvendor_quantity\x18\x0e \x01(\x04R\x0evendorQuantity\x12*\n" +
	"\x11vendor_unit_price\x18\x0f \x01(\x04R\x0fvendorUnitPrice\x12 \n" +
	"\ftax_group_id\x18\x10 \x01(\x04R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x11 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x12 \x01(\tR\x0especifications\"7\n" +
	"\x0eDebitNotesList\x12%\n" +
	"\x04list\x18\x01 \x03(\v2\x11.Scailo.DebitNoteR\x04list\"?\n" +
	"\x12DebitNoteItemsList\x12)\n" +
	"\x04list\x18\x01 \x03(\v2\x15.Scailo.DebitNoteItemR\x04list\"p\n" +
	"\x1bDebitNoteItemHistoryRequest\x12+\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\vdebitNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"x\n" +
	"#DebitNoteItemProspectiveInfoRequest\x12+\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\vdebitNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xb5\x01\n" +
	"5DebitNotesServiceAlreadyAddedQuantityForSourceRequest\x126\n" +
	"\bref_from\x18\x01 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12$\n" +
	"\tfamily_id\x18\x03 \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xb4\x05\n" +
	"\x1bDebitNoteItemsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12;\n" +
	"\bsort_key\x18\x05 \x01(\x0e2 .Scailo.DEBIT_NOTE_ITEM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x126\n" +
	"\x06status\x18\a \x01(\x0e2\x1e.Scailo.DEBIT_NOTE_ITEM_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12\"\n" +
	"\rdebit_note_id\x18\x14 \x01(\x04R\vdebitNoteId\x12\x1b\n" +
	"\tfamily_id\x18\x15 \x01(\x04R\bfamilyId\x12\"\n" +
	"\rvendor_uom_id\x18\x17 \x01(\x04R\vvendorUomId\x12 \n" +
	"\ftax_group_id\x18\x1b \x01(\x04R\n" +
	"taxGroupId\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\x9e\x01\n" +
	"'DebitNotesServicePaginatedItemsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12/\n" +
	"\apayload\x18\x04 \x03(\v2\x15.Scailo.DebitNoteItemR\apayload\"\xb8\x02\n" +
	"\x1eDebitNotesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x96\x01\n" +
	"#DebitNotesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12+\n" +
	"\apayload\x18\x04 \x03(\v2\x11.Scailo.DebitNoteR\apayload\"\xfc\t\n" +
	"\x1aDebitNotesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x126\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x1e \x01(\x04R\n" +
	"currencyId\x12\x1b\n" +
	"\tvendor_id\x18\x1f \x01(\x04R\bvendorId\x12\x1d\n" +
	"\n" +
	"project_id\x18  \x01(\x04R\tprojectId\x12\x1b\n" +
	"\tfamily_id\x18( \x01(\x04R\bfamilyId\x12&\n" +
	"\x0ftotal_value_min\x18F \x01(\x04R\rtotalValueMin\x12&\n" +
	"\x0ftotal_value_max\x18G \x01(\x04R\rtotalValueMax\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xc7\b\n" +
	"\x19DebitNotesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x126\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x1e \x01(\x04R\n" +
	"currencyId\x12\x1b\n" +
	"\tvendor_id\x18\x1f \x01(\x04R\bvendorId\x12\x1d\n" +
	"\n" +
	"project_id\x18  \x01(\x04R\tprojectId\x12\x1b\n" +
	"\tfamily_id\x18( \x01(\x04R\bfamilyId\x12&\n" +
	"\x0ftotal_value_min\x18F \x01(\x04R\rtotalValueMin\x12&\n" +
	"\x0ftotal_value_max\x18G \x01(\x04R\rtotalValueMax\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xec\x03\n" +
	"\x1dDebitNotesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x126\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x126\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1b.Scailo.DEBIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1b\n" +
	"\tvendor_id\x18\x19 \x01(\x04R\bvendorId\"\xb0\x01\n" +
	"'DebitNotesServiceReferenceCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12+\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\vdebitNoteId\x125\n" +
	"\x12purchase_return_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x10purchaseReturnId\"\xcc\x02\n" +
	"\x12DebitNoteReference\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\"\n" +
	"\rdebit_note_id\x18\n" +
	" \x01(\x04R\vdebitNoteId\x12,\n" +
	"\x12purchase_return_id\x18\v \x01(\x04R\x10purchaseReturnId\"I\n" +
	"\x17DebitNoteReferencesList\x12.\n" +
	"\x04list\x18\x01 \x03(\v2\x1a.Scailo.DebitNoteReferenceR\x04list\"\x8e\x01\n" +
	"\x19DebitNoteReturnStatistics\x12\x1b\n" +
	"\tfamily_id\x18\x01 \x01(\x04R\bfamilyId\x12'\n" +
	"\x0fbilled_quantity\x18\x02 \x01(\x04R\x0ebilledQuantity\x12+\n" +
	"\x11returned_quantity\x18\x03 \x01(\x04R\x10returnedQuantity\"V\n" +
	"\x1dDebitNoteReturnStatisticsList\x125\n" +
	"\x04list\x18\x01 \x03(\v2!.Scailo.DebitNoteReturnStatisticsR\x04list*f\n" +
	"\x13DEBIT_NOTE_REF_FROM\x12'\n" +
	"#DEBIT_NOTE_REF_FROM_ANY_UNSPECIFIED\x10\x00\x12&\n" +
	"\"DEBIT_NOTE_REF_FROM_PURCHASE_ORDER\x10\x01*\xaa\x04\n" +
	"\x18DEBIT_NOTE_ITEM_SORT_KEY\x12+\n" +
	"'DEBIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12'\n" +
	"#DEBIT_NOTE_ITEM_SORT_KEY_CREATED_AT\x10\x01\x12(\n" +
	"$DEBIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT\x10\x02\x12(\n" +
	"$DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_ON\x10\x03\x12(\n" +
	"$DEBIT_NOTE_ITEM_SORT_KEY_APPROVED_BY\x10\x04\x12-\n" +
	")DEBIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12&\n" +
	"\"DEBIT_NOTE_ITEM_SORT_KEY_FAMILY_ID\x10\n" +
	"\x12.\n" +
	"*DEBIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY\x10\v\x12*\n" +
	"&DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UOM_ID\x10\f\x12,\n" +
	"(DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_QUANTITY\x10\r\x12.\n" +
	"*DEBIT_NOTE_ITEM_SORT_KEY_VENDOR_UNIT_PRICE\x10\x0e\x12)\n" +
	"%DEBIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID\x10\x10*\x90\x01\n" +
	"\x16DEBIT_NOTE_ITEM_STATUS\x12*\n" +
	"&DEBIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fDEBIT_NOTE_ITEM_STATUS_APPROVED\x10\x01\x12%\n" +
	"!DEBIT_NOTE_ITEM_STATUS_UNAPPROVED\x10\x02*\x95\x03\n" +
	"\x13DEBIT_NOTE_SORT_KEY\x12&\n" +
	"\"DEBIT_NOTE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eDEBIT_NOTE_SORT_KEY_CREATED_AT\x10\x01\x12#\n" +
	"\x1fDEBIT_NOTE_SORT_KEY_MODIFIED_AT\x10\x02\x12#\n" +
	"\x1fDEBIT_NOTE_SORT_KEY_APPROVED_ON\x10\x03\x12#\n" +
	"\x1fDEBIT_NOTE_SORT_KEY_APPROVED_BY\x10\x04\x12(\n" +
	"$DEBIT_NOTE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12$\n" +
	" DEBIT_NOTE_SORT_KEY_COMPLETED_ON\x10\x06\x12$\n" +
	" DEBIT_NOTE_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12(\n" +
	"$DEBIT_NOTE_SORT_KEY_FINAL_REF_NUMBER\x10\v\x12#\n" +
	"\x1fDEBIT_NOTE_SORT_KEY_TOTAL_VALUE\x10\x1e2\xb6(\n" +
	"\x11DebitNotesService\x12L\n" +
	"\x06Create\x12&.Scailo.DebitNotesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x05Draft\x12&.Scailo.DebitNotesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\vDraftUpdate\x12&.Scailo.DebitNotesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0eRevisionUpdate\x12&.Scailo.DebitNotesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12P\n" +
	"\bAutofill\x12(.Scailo.DebitNotesServiceAutofillRequest\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12l\n" +
	"\x19AddMultipleDebitNoteItems\x123.Scailo.DebitNotesServiceMultipleItemsCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Z\n" +
	"\x10AddDebitNoteItem\x12*.Scailo.DebitNotesServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12]\n" +
	"\x13ModifyDebitNoteItem\x12*.Scailo.DebitNotesServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x14ApproveDebitNoteItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x13DeleteDebitNoteItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12P\n" +
	"\x15ReorderDebitNoteItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12B\n" +
	"\x15ViewDebitNoteItemByID\x12\x12.Scailo.Identifier\x1a\x15.Scailo.DebitNoteItem\x12Y\n" +
	"\x1aViewApprovedDebitNoteItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1a.Scailo.DebitNoteItemsList\x12[\n" +
	"\x1cViewUnapprovedDebitNoteItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1a.Scailo.DebitNoteItemsList\x12[\n" +
	"\x18ViewDebitNoteItemHistory\x12#.Scailo.DebitNoteItemHistoryRequest\x1a\x1a.Scailo.DebitNoteItemsList\x12{\n" +
	"#ViewPaginatedApprovedDebitNoteItems\x12#.Scailo.DebitNoteItemsSearchRequest\x1a/.Scailo.DebitNotesServicePaginatedItemsResponse\x12}\n" +
	"%ViewPaginatedUnapprovedDebitNoteItems\x12#.Scailo.DebitNoteItemsSearchRequest\x1a/.Scailo.DebitNotesServicePaginatedItemsResponse\x12q\n" +
	"\x19SearchItemsWithPagination\x12#.Scailo.DebitNoteItemsSearchRequest\x1a/.Scailo.DebitNotesServicePaginatedItemsResponse\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12O\n" +
	"\x14UploadDebitNoteItems\x12\x1e.Scailo.IdentifierUUIDWithFile\x1a\x17.Scailo.IdentifiersList\x12d\n" +
	"\x15AddDebitNoteReference\x12/.Scailo.DebitNotesServiceReferenceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Z\n" +
	"\x19ApproveDebitNoteReference\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Y\n" +
	"\x18DeleteDebitNoteReference\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\x1aViewDebitNoteReferenceByID\x12\x12.Scailo.Identifier\x1a\x1a.Scailo.DebitNoteReference\x12N\n" +
	"\x17ViewDebitNoteReferences\x12\x12.Scailo.Identifier\x1a\x1f.Scailo.DebitNoteReferencesList\x121\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x11.Scailo.DebitNote\x127\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.DebitNote\x12?\n" +
	"\x11ViewByReferenceID\x12\x17.Scailo.SimpleSearchReq\x1a\x11.Scailo.DebitNote\x12:\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x11.Scailo.DebitNote\x12@\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.DebitNote\x12>\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x16.Scailo.DebitNotesList\x12]\n" +
	"\x1dViewAncillaryParametersByUUID\x12\x16.Scailo.IdentifierUUID\x1a$.Scailo.DebitNoteAncillaryParameters\x127\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x16.Scailo.DebitNotesList\x12F\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x16.Scailo.DebitNotesList\x12i\n" +
	"\x12ViewWithPagination\x12&.Scailo.DebitNotesServicePaginationReq\x1a+.Scailo.DebitNotesServicePaginationResponse\x12P\n" +
	"\x17ViewProspectiveFamilies\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x14.Scailo.FamiliesList\x12Y\n" +
	"\x19FilterProspectiveFamilies\x12&.Scailo.FilterFamiliesReqForIdentifier\x1a\x14.Scailo.FamiliesList\x12w\n" +
	"\x1cViewProspectiveDebitNoteItem\x12+.Scailo.DebitNoteItemProspectiveInfoRequest\x1a*.Scailo.DebitNotesServiceItemCreateRequest\x12W\n" +
	"\x16ViewReturnedStatistics\x12\x16.Scailo.IdentifierUUID\x1a%.Scailo.DebitNoteReturnStatisticsList\x12A\n" +
	"\x0eIsDownloadable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12>\n" +
	"\x0eDownloadByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12\x81\x01\n" +
	" ViewAddedFamilyQuantityForSource\x12=.Scailo.DebitNotesServiceAlreadyAddedQuantityForSourceRequest\x1a\x1e.Scailo.DualQuantitiesResponse\x12J\n" +
	"\tSearchAll\x12%.Scailo.DebitNotesServiceSearchAllReq\x1a\x16.Scailo.DebitNotesList\x12D\n" +
	"\x06Filter\x12\".Scailo.DebitNotesServiceFilterReq\x1a\x16.Scailo.DebitNotesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12A\n" +
	"\x05Count\x12!.Scailo.DebitNotesServiceCountReq\x1a\x15.Scailo.CountResponse\x12F\n" +
	"\fAccruedValue\x12!.Scailo.DebitNotesServiceCountReq\x1a\x13.Scailo.SumResponse\x12I\n" +
	"\rDownloadAsCSV\x12\".Scailo.DebitNotesServiceFilterReq\x1a\x14.Scailo.StandardFileBg\n" +
	"\n" +
	"com.ScailoB\x15DebitNotesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_debit_notes_scailo_proto_rawDescOnce sync.Once
	file_debit_notes_scailo_proto_rawDescData []byte
)

func file_debit_notes_scailo_proto_rawDescGZIP() []byte {
	file_debit_notes_scailo_proto_rawDescOnce.Do(func() {
		file_debit_notes_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_debit_notes_scailo_proto_rawDesc), len(file_debit_notes_scailo_proto_rawDesc)))
	})
	return file_debit_notes_scailo_proto_rawDescData
}

var file_debit_notes_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_debit_notes_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_debit_notes_scailo_proto_goTypes = []any{
	(DEBIT_NOTE_REF_FROM)(0),                                      // 0: Scailo.DEBIT_NOTE_REF_FROM
	(DEBIT_NOTE_ITEM_SORT_KEY)(0),                                 // 1: Scailo.DEBIT_NOTE_ITEM_SORT_KEY
	(DEBIT_NOTE_ITEM_STATUS)(0),                                   // 2: Scailo.DEBIT_NOTE_ITEM_STATUS
	(DEBIT_NOTE_SORT_KEY)(0),                                      // 3: Scailo.DEBIT_NOTE_SORT_KEY
	(*DebitNotesServiceCreateRequest)(nil),                        // 4: Scailo.DebitNotesServiceCreateRequest
	(*DebitNotesServiceUpdateRequest)(nil),                        // 5: Scailo.DebitNotesServiceUpdateRequest
	(*DebitNotesServiceAutofillRequest)(nil),                      // 6: Scailo.DebitNotesServiceAutofillRequest
	(*DebitNoteAncillaryParameters)(nil),                          // 7: Scailo.DebitNoteAncillaryParameters
	(*DebitNote)(nil),                                             // 8: Scailo.DebitNote
	(*DebitNotesServiceItemCreateRequest)(nil),                    // 9: Scailo.DebitNotesServiceItemCreateRequest
	(*DebitNotesServiceMultipleItemsSingleton)(nil),               // 10: Scailo.DebitNotesServiceMultipleItemsSingleton
	(*DebitNotesServiceMultipleItemsCreateRequest)(nil),           // 11: Scailo.DebitNotesServiceMultipleItemsCreateRequest
	(*DebitNotesServiceItemUpdateRequest)(nil),                    // 12: Scailo.DebitNotesServiceItemUpdateRequest
	(*DebitNoteItem)(nil),                                         // 13: Scailo.DebitNoteItem
	(*DebitNotesList)(nil),                                        // 14: Scailo.DebitNotesList
	(*DebitNoteItemsList)(nil),                                    // 15: Scailo.DebitNoteItemsList
	(*DebitNoteItemHistoryRequest)(nil),                           // 16: Scailo.DebitNoteItemHistoryRequest
	(*DebitNoteItemProspectiveInfoRequest)(nil),                   // 17: Scailo.DebitNoteItemProspectiveInfoRequest
	(*DebitNotesServiceAlreadyAddedQuantityForSourceRequest)(nil), // 18: Scailo.DebitNotesServiceAlreadyAddedQuantityForSourceRequest
	(*DebitNoteItemsSearchRequest)(nil),                           // 19: Scailo.DebitNoteItemsSearchRequest
	(*DebitNotesServicePaginatedItemsResponse)(nil),               // 20: Scailo.DebitNotesServicePaginatedItemsResponse
	(*DebitNotesServicePaginationReq)(nil),                        // 21: Scailo.DebitNotesServicePaginationReq
	(*DebitNotesServicePaginationResponse)(nil),                   // 22: Scailo.DebitNotesServicePaginationResponse
	(*DebitNotesServiceFilterReq)(nil),                            // 23: Scailo.DebitNotesServiceFilterReq
	(*DebitNotesServiceCountReq)(nil),                             // 24: Scailo.DebitNotesServiceCountReq
	(*DebitNotesServiceSearchAllReq)(nil),                         // 25: Scailo.DebitNotesServiceSearchAllReq
	(*DebitNotesServiceReferenceCreateRequest)(nil),               // 26: Scailo.DebitNotesServiceReferenceCreateRequest
	(*DebitNoteReference)(nil),                                    // 27: Scailo.DebitNoteReference
	(*DebitNoteReferencesList)(nil),                               // 28: Scailo.DebitNoteReferencesList
	(*DebitNoteReturnStatistics)(nil),                             // 29: Scailo.DebitNoteReturnStatistics
	(*DebitNoteReturnStatisticsList)(nil),                         // 30: Scailo.DebitNoteReturnStatisticsList
	(*FormFieldDatumCreateRequest)(nil),                           // 31: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                      // 32: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                      // 33: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                                // 34: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                                  // 35: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                        // 36: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                              // 37: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                               // 38: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                           // 39: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                         // 40: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),                         // 41: Scailo.IdentifierWithEmailAttributes
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil),     // 42: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*IdentifierWithUserComment)(nil),                             // 43: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                                   // 44: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                            // 45: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                               // 46: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                                        // 47: Scailo.IdentifierUUID
	(*Empty)(nil),                                                 // 48: Scailo.Empty
	(*IdentifierUUIDWithFile)(nil),                                // 49: Scailo.IdentifierUUIDWithFile
	(*SimpleSearchReq)(nil),                                       // 50: Scailo.SimpleSearchReq
	(*IdentifiersList)(nil),                                       // 51: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                          // 52: Scailo.ActiveStatus
	(*FilterFamiliesReqForIdentifier)(nil),                        // 53: Scailo.FilterFamiliesReqForIdentifier
	(*CountInSLCStatusRequest)(nil),                               // 54: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                    // 55: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                             // 56: Scailo.MagicLink
	(*StandardFile)(nil),                                          // 57: Scailo.StandardFile
	(*FamiliesList)(nil),                                          // 58: Scailo.FamiliesList
	(*BooleanResponse)(nil),                                       // 59: Scailo.BooleanResponse
	(*DualQuantitiesResponse)(nil),                                // 60: Scailo.DualQuantitiesResponse
	(*CountResponse)(nil),                                         // 61: Scailo.CountResponse
	(*SumResponse)(nil),                                           // 62: Scailo.SumResponse
}
var file_debit_notes_scailo_proto_depIdxs = []int32{
	0,   // 0: Scailo.DebitNotesServiceCreateRequest.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	31,  // 1: Scailo.DebitNotesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	31,  // 2: Scailo.DebitNotesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	32,  // 3: Scailo.DebitNote.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 4: Scailo.DebitNote.approval_metadata:type_name -> Scailo.ApprovalMetadata
	34,  // 5: Scailo.DebitNote.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	35,  // 6: Scailo.DebitNote.logs:type_name -> Scailo.LogbookLogConciseSLC
	0,   // 7: Scailo.DebitNote.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	13,  // 8: Scailo.DebitNote.list:type_name -> Scailo.DebitNoteItem
	36,  // 9: Scailo.DebitNote.form_data:type_name -> Scailo.FormFieldDatum
	10,  // 10: Scailo.DebitNotesServiceMultipleItemsCreateRequest.list:type_name -> Scailo.DebitNotesServiceMultipleItemsSingleton
	32,  // 11: Scailo.DebitNoteItem.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 12: Scailo.DebitNoteItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	8,   // 13: Scailo.DebitNotesList.list:type_name -> Scailo.DebitNote
	13,  // 14: Scailo.DebitNoteItemsList.list:type_name -> Scailo.DebitNoteItem
	0,   // 15: Scailo.DebitNotesServiceAlreadyAddedQuantityForSourceRequest.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	37,  // 16: Scailo.DebitNoteItemsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 17: Scailo.DebitNoteItemsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	1,   // 18: Scailo.DebitNoteItemsSearchRequest.sort_key:type_name -> Scailo.DEBIT_NOTE_ITEM_SORT_KEY
	2,   // 19: Scailo.DebitNoteItemsSearchRequest.status:type_name -> Scailo.DEBIT_NOTE_ITEM_STATUS
	13,  // 20: Scailo.DebitNotesServicePaginatedItemsResponse.payload:type_name -> Scailo.DebitNoteItem
	37,  // 21: Scailo.DebitNotesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 22: Scailo.DebitNotesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 23: Scailo.DebitNotesServicePaginationReq.sort_key:type_name -> Scailo.DEBIT_NOTE_SORT_KEY
	34,  // 24: Scailo.DebitNotesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	8,   // 25: Scailo.DebitNotesServicePaginationResponse.payload:type_name -> Scailo.DebitNote
	37,  // 26: Scailo.DebitNotesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 27: Scailo.DebitNotesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 28: Scailo.DebitNotesServiceFilterReq.sort_key:type_name -> Scailo.DEBIT_NOTE_SORT_KEY
	34,  // 29: Scailo.DebitNotesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 30: Scailo.DebitNotesServiceFilterReq.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	39,  // 31: Scailo.DebitNotesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	37,  // 32: Scailo.DebitNotesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	34,  // 33: Scailo.DebitNotesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 34: Scailo.DebitNotesServiceCountReq.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	39,  // 35: Scailo.DebitNotesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	37,  // 36: Scailo.DebitNotesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 37: Scailo.DebitNotesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 38: Scailo.DebitNotesServiceSearchAllReq.sort_key:type_name -> Scailo.DEBIT_NOTE_SORT_KEY
	34,  // 39: Scailo.DebitNotesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 40: Scailo.DebitNotesServiceSearchAllReq.ref_from:type_name -> Scailo.DEBIT_NOTE_REF_FROM
	32,  // 41: Scailo.DebitNoteReference.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 42: Scailo.DebitNoteReference.approval_metadata:type_name -> Scailo.ApprovalMetadata
	27,  // 43: Scailo.DebitNoteReferencesList.list:type_name -> Scailo.DebitNoteReference
	29,  // 44: Scailo.DebitNoteReturnStatisticsList.list:type_name -> Scailo.DebitNoteReturnStatistics
	4,   // 45: Scailo.DebitNotesService.Create:input_type -> Scailo.DebitNotesServiceCreateRequest
	4,   // 46: Scailo.DebitNotesService.Draft:input_type -> Scailo.DebitNotesServiceCreateRequest
	5,   // 47: Scailo.DebitNotesService.DraftUpdate:input_type -> Scailo.DebitNotesServiceUpdateRequest
	40,  // 48: Scailo.DebitNotesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 49: Scailo.DebitNotesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 50: Scailo.DebitNotesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 51: Scailo.DebitNotesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	5,   // 52: Scailo.DebitNotesService.RevisionUpdate:input_type -> Scailo.DebitNotesServiceUpdateRequest
	40,  // 53: Scailo.DebitNotesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 54: Scailo.DebitNotesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 55: Scailo.DebitNotesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 56: Scailo.DebitNotesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 57: Scailo.DebitNotesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 58: Scailo.DebitNotesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 59: Scailo.DebitNotesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	41,  // 60: Scailo.DebitNotesService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	6,   // 61: Scailo.DebitNotesService.Autofill:input_type -> Scailo.DebitNotesServiceAutofillRequest
	42,  // 62: Scailo.DebitNotesService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	11,  // 63: Scailo.DebitNotesService.AddMultipleDebitNoteItems:input_type -> Scailo.DebitNotesServiceMultipleItemsCreateRequest
	9,   // 64: Scailo.DebitNotesService.AddDebitNoteItem:input_type -> Scailo.DebitNotesServiceItemCreateRequest
	12,  // 65: Scailo.DebitNotesService.ModifyDebitNoteItem:input_type -> Scailo.DebitNotesServiceItemUpdateRequest
	43,  // 66: Scailo.DebitNotesService.ApproveDebitNoteItem:input_type -> Scailo.IdentifierWithUserComment
	43,  // 67: Scailo.DebitNotesService.DeleteDebitNoteItem:input_type -> Scailo.IdentifierWithUserComment
	44,  // 68: Scailo.DebitNotesService.ReorderDebitNoteItems:input_type -> Scailo.ReorderItemsRequest
	45,  // 69: Scailo.DebitNotesService.ViewDebitNoteItemByID:input_type -> Scailo.Identifier
	46,  // 70: Scailo.DebitNotesService.ViewApprovedDebitNoteItems:input_type -> Scailo.IdentifierWithSearchKey
	46,  // 71: Scailo.DebitNotesService.ViewUnapprovedDebitNoteItems:input_type -> Scailo.IdentifierWithSearchKey
	16,  // 72: Scailo.DebitNotesService.ViewDebitNoteItemHistory:input_type -> Scailo.DebitNoteItemHistoryRequest
	19,  // 73: Scailo.DebitNotesService.ViewPaginatedApprovedDebitNoteItems:input_type -> Scailo.DebitNoteItemsSearchRequest
	19,  // 74: Scailo.DebitNotesService.ViewPaginatedUnapprovedDebitNoteItems:input_type -> Scailo.DebitNoteItemsSearchRequest
	19,  // 75: Scailo.DebitNotesService.SearchItemsWithPagination:input_type -> Scailo.DebitNoteItemsSearchRequest
	47,  // 76: Scailo.DebitNotesService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	48,  // 77: Scailo.DebitNotesService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	49,  // 78: Scailo.DebitNotesService.UploadDebitNoteItems:input_type -> Scailo.IdentifierUUIDWithFile
	26,  // 79: Scailo.DebitNotesService.AddDebitNoteReference:input_type -> Scailo.DebitNotesServiceReferenceCreateRequest
	43,  // 80: Scailo.DebitNotesService.ApproveDebitNoteReference:input_type -> Scailo.IdentifierWithUserComment
	43,  // 81: Scailo.DebitNotesService.DeleteDebitNoteReference:input_type -> Scailo.IdentifierWithUserComment
	45,  // 82: Scailo.DebitNotesService.ViewDebitNoteReferenceByID:input_type -> Scailo.Identifier
	45,  // 83: Scailo.DebitNotesService.ViewDebitNoteReferences:input_type -> Scailo.Identifier
	45,  // 84: Scailo.DebitNotesService.ViewByID:input_type -> Scailo.Identifier
	47,  // 85: Scailo.DebitNotesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	50,  // 86: Scailo.DebitNotesService.ViewByReferenceID:input_type -> Scailo.SimpleSearchReq
	45,  // 87: Scailo.DebitNotesService.ViewEssentialByID:input_type -> Scailo.Identifier
	47,  // 88: Scailo.DebitNotesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	51,  // 89: Scailo.DebitNotesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	47,  // 90: Scailo.DebitNotesService.ViewAncillaryParametersByUUID:input_type -> Scailo.IdentifierUUID
	52,  // 91: Scailo.DebitNotesService.ViewAll:input_type -> Scailo.ActiveStatus
	47,  // 92: Scailo.DebitNotesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	21,  // 93: Scailo.DebitNotesService.ViewWithPagination:input_type -> Scailo.DebitNotesServicePaginationReq
	46,  // 94: Scailo.DebitNotesService.ViewProspectiveFamilies:input_type -> Scailo.IdentifierWithSearchKey
	53,  // 95: Scailo.DebitNotesService.FilterProspectiveFamilies:input_type -> Scailo.FilterFamiliesReqForIdentifier
	17,  // 96: Scailo.DebitNotesService.ViewProspectiveDebitNoteItem:input_type -> Scailo.DebitNoteItemProspectiveInfoRequest
	47,  // 97: Scailo.DebitNotesService.ViewReturnedStatistics:input_type -> Scailo.IdentifierUUID
	47,  // 98: Scailo.DebitNotesService.IsDownloadable:input_type -> Scailo.IdentifierUUID
	47,  // 99: Scailo.DebitNotesService.DownloadByUUID:input_type -> Scailo.IdentifierUUID
	18,  // 100: Scailo.DebitNotesService.ViewAddedFamilyQuantityForSource:input_type -> Scailo.DebitNotesServiceAlreadyAddedQuantityForSourceRequest
	25,  // 101: Scailo.DebitNotesService.SearchAll:input_type -> Scailo.DebitNotesServiceSearchAllReq
	23,  // 102: Scailo.DebitNotesService.Filter:input_type -> Scailo.DebitNotesServiceFilterReq
	54,  // 103: Scailo.DebitNotesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	24,  // 104: Scailo.DebitNotesService.Count:input_type -> Scailo.DebitNotesServiceCountReq
	24,  // 105: Scailo.DebitNotesService.AccruedValue:input_type -> Scailo.DebitNotesServiceCountReq
	23,  // 106: Scailo.DebitNotesService.DownloadAsCSV:input_type -> Scailo.DebitNotesServiceFilterReq
	55,  // 107: Scailo.DebitNotesService.Create:output_type -> Scailo.IdentifierResponse
	55,  // 108: Scailo.DebitNotesService.Draft:output_type -> Scailo.IdentifierResponse
	55,  // 109: Scailo.DebitNotesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	55,  // 110: Scailo.DebitNotesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	55,  // 111: Scailo.DebitNotesService.Verify:output_type -> Scailo.IdentifierResponse
	55,  // 112: Scailo.DebitNotesService.Approve:output_type -> Scailo.IdentifierResponse
	55,  // 113: Scailo.DebitNotesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	55,  // 114: Scailo.DebitNotesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	55,  // 115: Scailo.DebitNotesService.Halt:output_type -> Scailo.IdentifierResponse
	55,  // 116: Scailo.DebitNotesService.Discard:output_type -> Scailo.IdentifierResponse
	55,  // 117: Scailo.DebitNotesService.Restore:output_type -> Scailo.IdentifierResponse
	55,  // 118: Scailo.DebitNotesService.Complete:output_type -> Scailo.IdentifierResponse
	55,  // 119: Scailo.DebitNotesService.Repeat:output_type -> Scailo.IdentifierResponse
	55,  // 120: Scailo.DebitNotesService.Reopen:output_type -> Scailo.IdentifierResponse
	55,  // 121: Scailo.DebitNotesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	55,  // 122: Scailo.DebitNotesService.SendEmail:output_type -> Scailo.IdentifierResponse
	55,  // 123: Scailo.DebitNotesService.Autofill:output_type -> Scailo.IdentifierResponse
	56,  // 124: Scailo.DebitNotesService.CreateMagicLink:output_type -> Scailo.MagicLink
	55,  // 125: Scailo.DebitNotesService.AddMultipleDebitNoteItems:output_type -> Scailo.IdentifierResponse
	55,  // 126: Scailo.DebitNotesService.AddDebitNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 127: Scailo.DebitNotesService.ModifyDebitNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 128: Scailo.DebitNotesService.ApproveDebitNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 129: Scailo.DebitNotesService.DeleteDebitNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 130: Scailo.DebitNotesService.ReorderDebitNoteItems:output_type -> Scailo.IdentifierResponse
	13,  // 131: Scailo.DebitNotesService.ViewDebitNoteItemByID:output_type -> Scailo.DebitNoteItem
	15,  // 132: Scailo.DebitNotesService.ViewApprovedDebitNoteItems:output_type -> Scailo.DebitNoteItemsList
	15,  // 133: Scailo.DebitNotesService.ViewUnapprovedDebitNoteItems:output_type -> Scailo.DebitNoteItemsList
	15,  // 134: Scailo.DebitNotesService.ViewDebitNoteItemHistory:output_type -> Scailo.DebitNoteItemsList
	20,  // 135: Scailo.DebitNotesService.ViewPaginatedApprovedDebitNoteItems:output_type -> Scailo.DebitNotesServicePaginatedItemsResponse
	20,  // 136: Scailo.DebitNotesService.ViewPaginatedUnapprovedDebitNoteItems:output_type -> Scailo.DebitNotesServicePaginatedItemsResponse
	20,  // 137: Scailo.DebitNotesService.SearchItemsWithPagination:output_type -> Scailo.DebitNotesServicePaginatedItemsResponse
	57,  // 138: Scailo.DebitNotesService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	57,  // 139: Scailo.DebitNotesService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	51,  // 140: Scailo.DebitNotesService.UploadDebitNoteItems:output_type -> Scailo.IdentifiersList
	55,  // 141: Scailo.DebitNotesService.AddDebitNoteReference:output_type -> Scailo.IdentifierResponse
	55,  // 142: Scailo.DebitNotesService.ApproveDebitNoteReference:output_type -> Scailo.IdentifierResponse
	55,  // 143: Scailo.DebitNotesService.DeleteDebitNoteReference:output_type -> Scailo.IdentifierResponse
	27,  // 144: Scailo.DebitNotesService.ViewDebitNoteReferenceByID:output_type -> Scailo.DebitNoteReference
	28,  // 145: Scailo.DebitNotesService.ViewDebitNoteReferences:output_type -> Scailo.DebitNoteReferencesList
	8,   // 146: Scailo.DebitNotesService.ViewByID:output_type -> Scailo.DebitNote
	8,   // 147: Scailo.DebitNotesService.ViewByUUID:output_type -> Scailo.DebitNote
	8,   // 148: Scailo.DebitNotesService.ViewByReferenceID:output_type -> Scailo.DebitNote
	8,   // 149: Scailo.DebitNotesService.ViewEssentialByID:output_type -> Scailo.DebitNote
	8,   // 150: Scailo.DebitNotesService.ViewEssentialByUUID:output_type -> Scailo.DebitNote
	14,  // 151: Scailo.DebitNotesService.ViewFromIDs:output_type -> Scailo.DebitNotesList
	7,   // 152: Scailo.DebitNotesService.ViewAncillaryParametersByUUID:output_type -> Scailo.DebitNoteAncillaryParameters
	14,  // 153: Scailo.DebitNotesService.ViewAll:output_type -> Scailo.DebitNotesList
	14,  // 154: Scailo.DebitNotesService.ViewAllForEntityUUID:output_type -> Scailo.DebitNotesList
	22,  // 155: Scailo.DebitNotesService.ViewWithPagination:output_type -> Scailo.DebitNotesServicePaginationResponse
	58,  // 156: Scailo.DebitNotesService.ViewProspectiveFamilies:output_type -> Scailo.FamiliesList
	58,  // 157: Scailo.DebitNotesService.FilterProspectiveFamilies:output_type -> Scailo.FamiliesList
	9,   // 158: Scailo.DebitNotesService.ViewProspectiveDebitNoteItem:output_type -> Scailo.DebitNotesServiceItemCreateRequest
	30,  // 159: Scailo.DebitNotesService.ViewReturnedStatistics:output_type -> Scailo.DebitNoteReturnStatisticsList
	59,  // 160: Scailo.DebitNotesService.IsDownloadable:output_type -> Scailo.BooleanResponse
	57,  // 161: Scailo.DebitNotesService.DownloadByUUID:output_type -> Scailo.StandardFile
	60,  // 162: Scailo.DebitNotesService.ViewAddedFamilyQuantityForSource:output_type -> Scailo.DualQuantitiesResponse
	14,  // 163: Scailo.DebitNotesService.SearchAll:output_type -> Scailo.DebitNotesList
	14,  // 164: Scailo.DebitNotesService.Filter:output_type -> Scailo.DebitNotesList
	61,  // 165: Scailo.DebitNotesService.CountInStatus:output_type -> Scailo.CountResponse
	61,  // 166: Scailo.DebitNotesService.Count:output_type -> Scailo.CountResponse
	62,  // 167: Scailo.DebitNotesService.AccruedValue:output_type -> Scailo.SumResponse
	57,  // 168: Scailo.DebitNotesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	107, // [107:169] is the sub-list for method output_type
	45,  // [45:107] is the sub-list for method input_type
	45,  // [45:45] is the sub-list for extension type_name
	45,  // [45:45] is the sub-list for extension extendee
	0,   // [0:45] is the sub-list for field type_name
}

func init() { file_debit_notes_scailo_proto_init() }
func file_debit_notes_scailo_proto_init() {
	if File_debit_notes_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_families_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_debit_notes_scailo_proto_rawDesc), len(file_debit_notes_scailo_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_debit_notes_scailo_proto_goTypes,
		DependencyIndexes: file_debit_notes_scailo_proto_depIdxs,
		EnumInfos:         file_debit_notes_scailo_proto_enumTypes,
		MessageInfos:      file_debit_notes_scailo_proto_msgTypes,
	}.Build()
	File_debit_notes_scailo_proto = out.File
	file_debit_notes_scailo_proto_goTypes = nil
	file_debit_notes_scailo_proto_depIdxs = nil
}
