// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: storages.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type STORAGE_SORT_KEY int32

const (
	// Fetch ordered results by id
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_ID_UNSPECIFIED STORAGE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_CREATED_AT STORAGE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_MODIFIED_AT STORAGE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_APPROVED_ON STORAGE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_APPROVED_BY STORAGE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_APPROVER_ROLE_ID STORAGE_SORT_KEY = 5
	// Fetch ordered results by the name
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_NAME STORAGE_SORT_KEY = 10
	// Fetch ordered results by the code
	STORAGE_SORT_KEY_STORAGE_SORT_KEY_CODE STORAGE_SORT_KEY = 11
)

// Enum value maps for STORAGE_SORT_KEY.
var (
	STORAGE_SORT_KEY_name = map[int32]string{
		0:  "STORAGE_SORT_KEY_ID_UNSPECIFIED",
		1:  "STORAGE_SORT_KEY_CREATED_AT",
		2:  "STORAGE_SORT_KEY_MODIFIED_AT",
		3:  "STORAGE_SORT_KEY_APPROVED_ON",
		4:  "STORAGE_SORT_KEY_APPROVED_BY",
		5:  "STORAGE_SORT_KEY_APPROVER_ROLE_ID",
		10: "STORAGE_SORT_KEY_NAME",
		11: "STORAGE_SORT_KEY_CODE",
	}
	STORAGE_SORT_KEY_value = map[string]int32{
		"STORAGE_SORT_KEY_ID_UNSPECIFIED":   0,
		"STORAGE_SORT_KEY_CREATED_AT":       1,
		"STORAGE_SORT_KEY_MODIFIED_AT":      2,
		"STORAGE_SORT_KEY_APPROVED_ON":      3,
		"STORAGE_SORT_KEY_APPROVED_BY":      4,
		"STORAGE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"STORAGE_SORT_KEY_NAME":             10,
		"STORAGE_SORT_KEY_CODE":             11,
	}
)

func (x STORAGE_SORT_KEY) Enum() *STORAGE_SORT_KEY {
	p := new(STORAGE_SORT_KEY)
	*p = x
	return p
}

func (x STORAGE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STORAGE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_storages_scailo_proto_enumTypes[0].Descriptor()
}

func (STORAGE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_storages_scailo_proto_enumTypes[0]
}

func (x STORAGE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STORAGE_SORT_KEY.Descriptor instead.
func (STORAGE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type StoragesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Storages a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Storages any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The name of the storage
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the storage is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated store
	StoreId uint64 `protobuf:"varint,12,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The ID of the associated non-leaf parent storage (0, if the first storage that is being created is a leaf storage)
	ParentStorageId uint64 `protobuf:"varint,13,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Stores if this is a leaf storage or a non-leaf storage
	IsLeaf bool `protobuf:"varint,14,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the storage
	Description   string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServiceCreateRequest) Reset() {
	*x = StoragesServiceCreateRequest{}
	mi := &file_storages_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServiceCreateRequest) ProtoMessage() {}

func (x *StoragesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*StoragesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *StoragesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StoragesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StoragesServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoragesServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StoragesServiceCreateRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoragesServiceCreateRequest) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *StoragesServiceCreateRequest) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *StoragesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type StoragesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Storages any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that storages if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The name of the storage
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the storage
	Description   string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServiceUpdateRequest) Reset() {
	*x = StoragesServiceUpdateRequest{}
	mi := &file_storages_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServiceUpdateRequest) ProtoMessage() {}

func (x *StoragesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*StoragesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *StoragesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StoragesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoragesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *StoragesServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoragesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type Storage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Storages a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Storages the metadata of this storage
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Storages the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this storage
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Storages the logs of every operation performed on this storage
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The name of the storage
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the storage is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated store
	StoreId uint64 `protobuf:"varint,12,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The ID of the associated non-leaf parent storage (0, if the first storage that is being created is a leaf storage)
	ParentStorageId uint64 `protobuf:"varint,13,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Stores if this is a leaf storage or a non-leaf storage
	IsLeaf bool `protobuf:"varint,14,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the storage
	Description   string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Storage) Reset() {
	*x = Storage{}
	mi := &file_storages_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Storage) ProtoMessage() {}

func (x *Storage) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Storage.ProtoReflect.Descriptor instead.
func (*Storage) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Storage) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Storage) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Storage) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Storage) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Storage) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Storage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Storage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Storage) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Storage) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *Storage) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *Storage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the message consisting of the list of records
type StoragesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Storage `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesList) Reset() {
	*x = StoragesList{}
	mi := &file_storages_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesList) ProtoMessage() {}

func (x *StoragesList) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesList.ProtoReflect.Descriptor instead.
func (*StoragesList) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *StoragesList) GetList() []*Storage {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type StoragesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STORAGE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STORAGE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this storage
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServicePaginationReq) Reset() {
	*x = StoragesServicePaginationReq{}
	mi := &file_storages_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServicePaginationReq) ProtoMessage() {}

func (x *StoragesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*StoragesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *StoragesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoragesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StoragesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StoragesServicePaginationReq) GetSortKey() STORAGE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STORAGE_SORT_KEY_STORAGE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StoragesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type StoragesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Storage `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServicePaginationResponse) Reset() {
	*x = StoragesServicePaginationResponse{}
	mi := &file_storages_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServicePaginationResponse) ProtoMessage() {}

func (x *StoragesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*StoragesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *StoragesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoragesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StoragesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StoragesServicePaginationResponse) GetPayload() []*Storage {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type StoragesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STORAGE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STORAGE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this storage
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the storage
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the storage is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated store
	StoreId uint64 `protobuf:"varint,22,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The ID of the associated non-leaf parent storage (0, if the first storage that is being created is a leaf storage)
	ParentStorageId uint64 `protobuf:"varint,23,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf BOOL_FILTER `protobuf:"varint,24,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	// Retrieve storages that are assigned to the given family ID
	FamilyId      uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServiceFilterReq) Reset() {
	*x = StoragesServiceFilterReq{}
	mi := &file_storages_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServiceFilterReq) ProtoMessage() {}

func (x *StoragesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*StoragesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *StoragesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StoragesServiceFilterReq) GetSortKey() STORAGE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STORAGE_SORT_KEY_STORAGE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StoragesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StoragesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StoragesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoragesServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StoragesServiceFilterReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *StoragesServiceFilterReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the base request payload of a count search
type StoragesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this storage
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the storage
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the storage is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated store
	StoreId uint64 `protobuf:"varint,22,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The ID of the associated non-leaf parent storage (0, if the first storage that is being created is a leaf storage)
	ParentStorageId uint64 `protobuf:"varint,23,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf BOOL_FILTER `protobuf:"varint,24,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	// Retrieve storages that are assigned to the given family ID
	FamilyId      uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServiceCountReq) Reset() {
	*x = StoragesServiceCountReq{}
	mi := &file_storages_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServiceCountReq) ProtoMessage() {}

func (x *StoragesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServiceCountReq.ProtoReflect.Descriptor instead.
func (*StoragesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *StoragesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StoragesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StoragesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StoragesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StoragesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StoragesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StoragesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StoragesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StoragesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StoragesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StoragesServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoragesServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StoragesServiceCountReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoragesServiceCountReq) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *StoragesServiceCountReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload for performing a generic search operation on records
type StoragesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STORAGE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STORAGE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the associated store
	StoreId uint64 `protobuf:"varint,22,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// The ID of the associated non-leaf parent storage (0, if the first storage that is being created is a leaf storage)
	ParentStorageId uint64 `protobuf:"varint,23,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf BOOL_FILTER `protobuf:"varint,24,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	// Retrieve storages that are assigned to the given family ID
	FamilyId      uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoragesServiceSearchAllReq) Reset() {
	*x = StoragesServiceSearchAllReq{}
	mi := &file_storages_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoragesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoragesServiceSearchAllReq) ProtoMessage() {}

func (x *StoragesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_storages_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoragesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*StoragesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_storages_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *StoragesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StoragesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StoragesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StoragesServiceSearchAllReq) GetSortKey() STORAGE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STORAGE_SORT_KEY_STORAGE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StoragesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StoragesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StoragesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *StoragesServiceSearchAllReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *StoragesServiceSearchAllReq) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *StoragesServiceSearchAllReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StoragesServiceSearchAllReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

var File_storages_scailo_proto protoreflect.FileDescriptor

const file_storages_scailo_proto_rawDesc = "" +
	"\n" +
	"\x15storages.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xb0\x02\n" +
	"\x1cStoragesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12\"\n" +
	"\bstore_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\astoreId\x123\n" +
	"\x11parent_storage_id\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\x0fparentStorageId\x12\x17\n" +
	"\ais_leaf\x18\x0e \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\"\xbc\x01\n" +
	"\x1cStoragesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\"\xbe\x03\n" +
	"\aStorage\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12\x19\n" +
	"\bstore_id\x18\f \x01(\x04R\astoreId\x12*\n" +
	"\x11parent_storage_id\x18\r \x01(\x04R\x0fparentStorageId\x12\x17\n" +
	"\ais_leaf\x18\x0e \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\"3\n" +
	"\fStoragesList\x12#\n" +
	"\x04list\x18\x01 \x03(\v2\x0f.Scailo.StorageR\x04list\"\xb3\x02\n" +
	"\x1cStoragesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.STORAGE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x92\x01\n" +
	"!StoragesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12)\n" +
	"\apayload\x18\x04 \x03(\v2\x0f.Scailo.StorageR\apayload\"\xb0\a\n" +
	"\x18StoragesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.STORAGE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12\x19\n" +
	"\bstore_id\x18\x16 \x01(\x04R\astoreId\x12*\n" +
	"\x11parent_storage_id\x18\x17 \x01(\x04R\x0fparentStorageId\x12,\n" +
	"\ais_leaf\x18\x18 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\"\xfe\x05\n" +
	"\x17StoragesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12\x19\n" +
	"\bstore_id\x18\x16 \x01(\x04R\astoreId\x12*\n" +
	"\x11parent_storage_id\x18\x17 \x01(\x04R\x0fparentStorageId\x12,\n" +
	"\ais_leaf\x18\x18 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\"\x8d\x04\n" +
	"\x1bStoragesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.STORAGE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x19\n" +
	"\bstore_id\x18\x16 \x01(\x04R\astoreId\x12*\n" +
	"\x11parent_storage_id\x18\x17 \x01(\x04R\x0fparentStorageId\x12,\n" +
	"\ais_leaf\x18\x18 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId*\x9b\x02\n" +
	"\x10STORAGE_SORT_KEY\x12#\n" +
	"\x1fSTORAGE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bSTORAGE_SORT_KEY_CREATED_AT\x10\x01\x12 \n" +
	"\x1cSTORAGE_SORT_KEY_MODIFIED_AT\x10\x02\x12 \n" +
	"\x1cSTORAGE_SORT_KEY_APPROVED_ON\x10\x03\x12 \n" +
	"\x1cSTORAGE_SORT_KEY_APPROVED_BY\x10\x04\x12%\n" +
	"!STORAGE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x19\n" +
	"\x15STORAGE_SORT_KEY_NAME\x10\n" +
	"\x12\x19\n" +
	"\x15STORAGE_SORT_KEY_CODE\x10\v2\xf5\x0e\n" +
	"\x0fStoragesService\x12J\n" +
	"\x06Create\x12$.Scailo.StoragesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x05Draft\x12$.Scailo.StoragesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\vDraftUpdate\x12$.Scailo.StoragesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x0eRevisionUpdate\x12$.Scailo.StoragesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12/\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Storage\x125\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Storage\x128\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Storage\x12>\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Storage\x12<\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x14.Scailo.StoragesList\x125\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x14.Scailo.StoragesList\x12D\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StoragesList\x12e\n" +
	"\x12ViewWithPagination\x12$.Scailo.StoragesServicePaginationReq\x1a).Scailo.StoragesServicePaginationResponse\x12F\n" +
	"\tSearchAll\x12#.Scailo.StoragesServiceSearchAllReq\x1a\x14.Scailo.StoragesList\x12@\n" +
	"\x06Filter\x12 .Scailo.StoragesServiceFilterReq\x1a\x14.Scailo.StoragesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12?\n" +
	"\x05Count\x12\x1f.Scailo.StoragesServiceCountReq\x1a\x15.Scailo.CountResponse\x12G\n" +
	"\rDownloadAsCSV\x12 .Scailo.StoragesServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBe\n" +
	"\n" +
	"com.ScailoB\x13StoragesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_storages_scailo_proto_rawDescOnce sync.Once
	file_storages_scailo_proto_rawDescData []byte
)

func file_storages_scailo_proto_rawDescGZIP() []byte {
	file_storages_scailo_proto_rawDescOnce.Do(func() {
		file_storages_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_storages_scailo_proto_rawDesc), len(file_storages_scailo_proto_rawDesc)))
	})
	return file_storages_scailo_proto_rawDescData
}

var file_storages_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_storages_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_storages_scailo_proto_goTypes = []any{
	(STORAGE_SORT_KEY)(0),                     // 0: Scailo.STORAGE_SORT_KEY
	(*StoragesServiceCreateRequest)(nil),      // 1: Scailo.StoragesServiceCreateRequest
	(*StoragesServiceUpdateRequest)(nil),      // 2: Scailo.StoragesServiceUpdateRequest
	(*Storage)(nil),                           // 3: Scailo.Storage
	(*StoragesList)(nil),                      // 4: Scailo.StoragesList
	(*StoragesServicePaginationReq)(nil),      // 5: Scailo.StoragesServicePaginationReq
	(*StoragesServicePaginationResponse)(nil), // 6: Scailo.StoragesServicePaginationResponse
	(*StoragesServiceFilterReq)(nil),          // 7: Scailo.StoragesServiceFilterReq
	(*StoragesServiceCountReq)(nil),           // 8: Scailo.StoragesServiceCountReq
	(*StoragesServiceSearchAllReq)(nil),       // 9: Scailo.StoragesServiceSearchAllReq
	(*EmployeeMetadata)(nil),                  // 10: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                  // 11: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),            // 12: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),              // 13: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                          // 14: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                           // 15: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),     // 16: Scailo.IdentifierUUIDWithUserComment
	(*Identifier)(nil),                        // 17: Scailo.Identifier
	(*IdentifierUUID)(nil),                    // 18: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                   // 19: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                      // 20: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),           // 21: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                      // 22: Scailo.StandardFile
	(*IdentifierResponse)(nil),                // 23: Scailo.IdentifierResponse
	(*CountResponse)(nil),                     // 24: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),               // 25: Scailo.IdentifierUUIDsList
}
var file_storages_scailo_proto_depIdxs = []int32{
	10, // 0: Scailo.Storage.metadata:type_name -> Scailo.EmployeeMetadata
	11, // 1: Scailo.Storage.approval_metadata:type_name -> Scailo.ApprovalMetadata
	12, // 2: Scailo.Storage.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	13, // 3: Scailo.Storage.logs:type_name -> Scailo.LogbookLogConciseSLC
	3,  // 4: Scailo.StoragesList.list:type_name -> Scailo.Storage
	14, // 5: Scailo.StoragesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 6: Scailo.StoragesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 7: Scailo.StoragesServicePaginationReq.sort_key:type_name -> Scailo.STORAGE_SORT_KEY
	12, // 8: Scailo.StoragesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 9: Scailo.StoragesServicePaginationResponse.payload:type_name -> Scailo.Storage
	14, // 10: Scailo.StoragesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 11: Scailo.StoragesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 12: Scailo.StoragesServiceFilterReq.sort_key:type_name -> Scailo.STORAGE_SORT_KEY
	12, // 13: Scailo.StoragesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 14: Scailo.StoragesServiceFilterReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 15: Scailo.StoragesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	12, // 16: Scailo.StoragesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 17: Scailo.StoragesServiceCountReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 18: Scailo.StoragesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 19: Scailo.StoragesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 20: Scailo.StoragesServiceSearchAllReq.sort_key:type_name -> Scailo.STORAGE_SORT_KEY
	12, // 21: Scailo.StoragesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 22: Scailo.StoragesServiceSearchAllReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	1,  // 23: Scailo.StoragesService.Create:input_type -> Scailo.StoragesServiceCreateRequest
	1,  // 24: Scailo.StoragesService.Draft:input_type -> Scailo.StoragesServiceCreateRequest
	2,  // 25: Scailo.StoragesService.DraftUpdate:input_type -> Scailo.StoragesServiceUpdateRequest
	16, // 26: Scailo.StoragesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 27: Scailo.StoragesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 28: Scailo.StoragesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 29: Scailo.StoragesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	2,  // 30: Scailo.StoragesService.RevisionUpdate:input_type -> Scailo.StoragesServiceUpdateRequest
	16, // 31: Scailo.StoragesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 32: Scailo.StoragesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 33: Scailo.StoragesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 34: Scailo.StoragesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	17, // 35: Scailo.StoragesService.ViewByID:input_type -> Scailo.Identifier
	18, // 36: Scailo.StoragesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	17, // 37: Scailo.StoragesService.ViewEssentialByID:input_type -> Scailo.Identifier
	18, // 38: Scailo.StoragesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	19, // 39: Scailo.StoragesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	20, // 40: Scailo.StoragesService.ViewAll:input_type -> Scailo.ActiveStatus
	18, // 41: Scailo.StoragesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	5,  // 42: Scailo.StoragesService.ViewWithPagination:input_type -> Scailo.StoragesServicePaginationReq
	9,  // 43: Scailo.StoragesService.SearchAll:input_type -> Scailo.StoragesServiceSearchAllReq
	7,  // 44: Scailo.StoragesService.Filter:input_type -> Scailo.StoragesServiceFilterReq
	21, // 45: Scailo.StoragesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	8,  // 46: Scailo.StoragesService.Count:input_type -> Scailo.StoragesServiceCountReq
	7,  // 47: Scailo.StoragesService.DownloadAsCSV:input_type -> Scailo.StoragesServiceFilterReq
	22, // 48: Scailo.StoragesService.ImportFromCSV:input_type -> Scailo.StandardFile
	23, // 49: Scailo.StoragesService.Create:output_type -> Scailo.IdentifierResponse
	23, // 50: Scailo.StoragesService.Draft:output_type -> Scailo.IdentifierResponse
	23, // 51: Scailo.StoragesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	23, // 52: Scailo.StoragesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	23, // 53: Scailo.StoragesService.Verify:output_type -> Scailo.IdentifierResponse
	23, // 54: Scailo.StoragesService.Approve:output_type -> Scailo.IdentifierResponse
	23, // 55: Scailo.StoragesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	23, // 56: Scailo.StoragesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	23, // 57: Scailo.StoragesService.Halt:output_type -> Scailo.IdentifierResponse
	23, // 58: Scailo.StoragesService.Discard:output_type -> Scailo.IdentifierResponse
	23, // 59: Scailo.StoragesService.Restore:output_type -> Scailo.IdentifierResponse
	23, // 60: Scailo.StoragesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	3,  // 61: Scailo.StoragesService.ViewByID:output_type -> Scailo.Storage
	3,  // 62: Scailo.StoragesService.ViewByUUID:output_type -> Scailo.Storage
	3,  // 63: Scailo.StoragesService.ViewEssentialByID:output_type -> Scailo.Storage
	3,  // 64: Scailo.StoragesService.ViewEssentialByUUID:output_type -> Scailo.Storage
	4,  // 65: Scailo.StoragesService.ViewFromIDs:output_type -> Scailo.StoragesList
	4,  // 66: Scailo.StoragesService.ViewAll:output_type -> Scailo.StoragesList
	4,  // 67: Scailo.StoragesService.ViewAllForEntityUUID:output_type -> Scailo.StoragesList
	6,  // 68: Scailo.StoragesService.ViewWithPagination:output_type -> Scailo.StoragesServicePaginationResponse
	4,  // 69: Scailo.StoragesService.SearchAll:output_type -> Scailo.StoragesList
	4,  // 70: Scailo.StoragesService.Filter:output_type -> Scailo.StoragesList
	24, // 71: Scailo.StoragesService.CountInStatus:output_type -> Scailo.CountResponse
	24, // 72: Scailo.StoragesService.Count:output_type -> Scailo.CountResponse
	22, // 73: Scailo.StoragesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	25, // 74: Scailo.StoragesService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	49, // [49:75] is the sub-list for method output_type
	23, // [23:49] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_storages_scailo_proto_init() }
func file_storages_scailo_proto_init() {
	if File_storages_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_storages_scailo_proto_rawDesc), len(file_storages_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storages_scailo_proto_goTypes,
		DependencyIndexes: file_storages_scailo_proto_depIdxs,
		EnumInfos:         file_storages_scailo_proto_enumTypes,
		MessageInfos:      file_storages_scailo_proto_msgTypes,
	}.Build()
	File_storages_scailo_proto = out.File
	file_storages_scailo_proto_goTypes = nil
	file_storages_scailo_proto_depIdxs = nil
}
