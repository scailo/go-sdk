// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: roles.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type ROLE_SORT_KEY int32

const (
	// Fetch ordered results by id
	ROLE_SORT_KEY_ROLE_SORT_KEY_ID_UNSPECIFIED ROLE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	ROLE_SORT_KEY_ROLE_SORT_KEY_CREATED_AT ROLE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	ROLE_SORT_KEY_ROLE_SORT_KEY_MODIFIED_AT ROLE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	ROLE_SORT_KEY_ROLE_SORT_KEY_APPROVED_ON ROLE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	ROLE_SORT_KEY_ROLE_SORT_KEY_APPROVED_BY ROLE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	ROLE_SORT_KEY_ROLE_SORT_KEY_APPROVER_ROLE_ID ROLE_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	ROLE_SORT_KEY_ROLE_SORT_KEY_COMPLETED_ON ROLE_SORT_KEY = 6
	// Fetch ordered results by the name
	ROLE_SORT_KEY_ROLE_SORT_KEY_NAME ROLE_SORT_KEY = 10
	// Fetch ordered results by the code
	ROLE_SORT_KEY_ROLE_SORT_KEY_CODE ROLE_SORT_KEY = 11
)

// Enum value maps for ROLE_SORT_KEY.
var (
	ROLE_SORT_KEY_name = map[int32]string{
		0:  "ROLE_SORT_KEY_ID_UNSPECIFIED",
		1:  "ROLE_SORT_KEY_CREATED_AT",
		2:  "ROLE_SORT_KEY_MODIFIED_AT",
		3:  "ROLE_SORT_KEY_APPROVED_ON",
		4:  "ROLE_SORT_KEY_APPROVED_BY",
		5:  "ROLE_SORT_KEY_APPROVER_ROLE_ID",
		6:  "ROLE_SORT_KEY_COMPLETED_ON",
		10: "ROLE_SORT_KEY_NAME",
		11: "ROLE_SORT_KEY_CODE",
	}
	ROLE_SORT_KEY_value = map[string]int32{
		"ROLE_SORT_KEY_ID_UNSPECIFIED":   0,
		"ROLE_SORT_KEY_CREATED_AT":       1,
		"ROLE_SORT_KEY_MODIFIED_AT":      2,
		"ROLE_SORT_KEY_APPROVED_ON":      3,
		"ROLE_SORT_KEY_APPROVED_BY":      4,
		"ROLE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"ROLE_SORT_KEY_COMPLETED_ON":     6,
		"ROLE_SORT_KEY_NAME":             10,
		"ROLE_SORT_KEY_CODE":             11,
	}
)

func (x ROLE_SORT_KEY) Enum() *ROLE_SORT_KEY {
	p := new(ROLE_SORT_KEY)
	*p = x
	return p
}

func (x ROLE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ROLE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_roles_scailo_proto_enumTypes[0].Descriptor()
}

func (ROLE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_roles_scailo_proto_enumTypes[0]
}

func (x ROLE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ROLE_SORT_KEY.Descriptor instead.
func (ROLE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type RolesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The name of the role
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the role
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the role
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Stores if this role has access to Vault
	VaultAccess bool `protobuf:"varint,13,opt,name=vault_access,json=vaultAccess,proto3" json:"vault_access,omitempty"`
	// Stores if the role has access to perform operations on the root folder in Vault
	VaultRootFolderInteractions bool `protobuf:"varint,14,opt,name=vault_root_folder_interactions,json=vaultRootFolderInteractions,proto3" json:"vault_root_folder_interactions,omitempty"`
	// Stores if the role has access via HTTP (or within local network)
	HttpAccess bool `protobuf:"varint,15,opt,name=http_access,json=httpAccess,proto3" json:"http_access,omitempty"`
	// Stores if the role has access via HTTPS (or through a public FQDN)
	HttpsAccess bool `protobuf:"varint,16,opt,name=https_access,json=httpsAccess,proto3" json:"https_access,omitempty"`
	// The list of accessible menu UIDs
	AccessList    []*RolesServiceAccessCreateAndUpdateRequest `protobuf:"bytes,20,rep,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceCreateRequest) Reset() {
	*x = RolesServiceCreateRequest{}
	mi := &file_roles_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceCreateRequest) ProtoMessage() {}

func (x *RolesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*RolesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *RolesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RolesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *RolesServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolesServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RolesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RolesServiceCreateRequest) GetVaultAccess() bool {
	if x != nil {
		return x.VaultAccess
	}
	return false
}

func (x *RolesServiceCreateRequest) GetVaultRootFolderInteractions() bool {
	if x != nil {
		return x.VaultRootFolderInteractions
	}
	return false
}

func (x *RolesServiceCreateRequest) GetHttpAccess() bool {
	if x != nil {
		return x.HttpAccess
	}
	return false
}

func (x *RolesServiceCreateRequest) GetHttpsAccess() bool {
	if x != nil {
		return x.HttpsAccess
	}
	return false
}

func (x *RolesServiceCreateRequest) GetAccessList() []*RolesServiceAccessCreateAndUpdateRequest {
	if x != nil {
		return x.AccessList
	}
	return nil
}

// Describes the parameters necessary to update a record
type RolesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The name of the role
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the role
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the role
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Stores if this role has access to Vault
	VaultAccess bool `protobuf:"varint,13,opt,name=vault_access,json=vaultAccess,proto3" json:"vault_access,omitempty"`
	// Stores if the role has access to perform operations on the root folder in Vault
	VaultRootFolderInteractions bool `protobuf:"varint,14,opt,name=vault_root_folder_interactions,json=vaultRootFolderInteractions,proto3" json:"vault_root_folder_interactions,omitempty"`
	// Stores if the role has access via HTTP (or within local network)
	HttpAccess bool `protobuf:"varint,15,opt,name=http_access,json=httpAccess,proto3" json:"http_access,omitempty"`
	// Stores if the role has access via HTTPS (or through a public FQDN)
	HttpsAccess bool `protobuf:"varint,16,opt,name=https_access,json=httpsAccess,proto3" json:"https_access,omitempty"`
	// The list of accessible menu UIDs
	AccessList    []*RolesServiceAccessCreateAndUpdateRequest `protobuf:"bytes,20,rep,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceUpdateRequest) Reset() {
	*x = RolesServiceUpdateRequest{}
	mi := &file_roles_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceUpdateRequest) ProtoMessage() {}

func (x *RolesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*RolesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *RolesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *RolesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RolesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *RolesServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolesServiceUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RolesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RolesServiceUpdateRequest) GetVaultAccess() bool {
	if x != nil {
		return x.VaultAccess
	}
	return false
}

func (x *RolesServiceUpdateRequest) GetVaultRootFolderInteractions() bool {
	if x != nil {
		return x.VaultRootFolderInteractions
	}
	return false
}

func (x *RolesServiceUpdateRequest) GetHttpAccess() bool {
	if x != nil {
		return x.HttpAccess
	}
	return false
}

func (x *RolesServiceUpdateRequest) GetHttpsAccess() bool {
	if x != nil {
		return x.HttpsAccess
	}
	return false
}

func (x *RolesServiceUpdateRequest) GetAccessList() []*RolesServiceAccessCreateAndUpdateRequest {
	if x != nil {
		return x.AccessList
	}
	return nil
}

// Describes the parameters that are part of a standard response
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this role
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this role
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this role
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this role was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The name of the role
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the role
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the role
	Description string `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	// Stores if this role has access to Vault
	VaultAccess bool `protobuf:"varint,13,opt,name=vault_access,json=vaultAccess,proto3" json:"vault_access,omitempty"`
	// Stores if the role has access to perform operations on the root folder in Vault
	VaultRootFolderInteractions bool `protobuf:"varint,14,opt,name=vault_root_folder_interactions,json=vaultRootFolderInteractions,proto3" json:"vault_root_folder_interactions,omitempty"`
	// Stores if the role has access via HTTP (or within local network)
	HttpAccess bool `protobuf:"varint,15,opt,name=http_access,json=httpAccess,proto3" json:"http_access,omitempty"`
	// Stores if the role has access via HTTPS (or through a public FQDN)
	HttpsAccess bool `protobuf:"varint,16,opt,name=https_access,json=httpsAccess,proto3" json:"https_access,omitempty"`
	// The list of associated role accesses
	AccessList    []*RoleAccess `protobuf:"bytes,20,rep,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_roles_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Role) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Role) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Role) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Role) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Role) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Role) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetVaultAccess() bool {
	if x != nil {
		return x.VaultAccess
	}
	return false
}

func (x *Role) GetVaultRootFolderInteractions() bool {
	if x != nil {
		return x.VaultRootFolderInteractions
	}
	return false
}

func (x *Role) GetHttpAccess() bool {
	if x != nil {
		return x.HttpAccess
	}
	return false
}

func (x *Role) GetHttpsAccess() bool {
	if x != nil {
		return x.HttpsAccess
	}
	return false
}

func (x *Role) GetAccessList() []*RoleAccess {
	if x != nil {
		return x.AccessList
	}
	return nil
}

// Describes the necessary data structure during creation/updation of a role access
type RolesServiceAccessCreateAndUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The menu UID (or internal code)
	MenuUid string `protobuf:"bytes,11,opt,name=menu_uid,json=menuUid,proto3" json:"menu_uid,omitempty"`
	// Denotes if the menu is accessible
	IsAccessible  bool `protobuf:"varint,12,opt,name=is_accessible,json=isAccessible,proto3" json:"is_accessible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceAccessCreateAndUpdateRequest) Reset() {
	*x = RolesServiceAccessCreateAndUpdateRequest{}
	mi := &file_roles_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceAccessCreateAndUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceAccessCreateAndUpdateRequest) ProtoMessage() {}

func (x *RolesServiceAccessCreateAndUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceAccessCreateAndUpdateRequest.ProtoReflect.Descriptor instead.
func (*RolesServiceAccessCreateAndUpdateRequest) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *RolesServiceAccessCreateAndUpdateRequest) GetMenuUid() string {
	if x != nil {
		return x.MenuUid
	}
	return ""
}

func (x *RolesServiceAccessCreateAndUpdateRequest) GetIsAccessible() bool {
	if x != nil {
		return x.IsAccessible
	}
	return false
}

// Describes the parameters for a role definition
type RolesServiceAccessDefinition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The menu UID (or internal code)
	MenuUid string `protobuf:"bytes,11,opt,name=menu_uid,json=menuUid,proto3" json:"menu_uid,omitempty"`
	// The name of the menu
	MenuName string `protobuf:"bytes,12,opt,name=menu_name,json=menuName,proto3" json:"menu_name,omitempty"`
	// The description of the menu
	MenuDescription string `protobuf:"bytes,13,opt,name=menu_description,json=menuDescription,proto3" json:"menu_description,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RolesServiceAccessDefinition) Reset() {
	*x = RolesServiceAccessDefinition{}
	mi := &file_roles_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceAccessDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceAccessDefinition) ProtoMessage() {}

func (x *RolesServiceAccessDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceAccessDefinition.ProtoReflect.Descriptor instead.
func (*RolesServiceAccessDefinition) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *RolesServiceAccessDefinition) GetMenuUid() string {
	if x != nil {
		return x.MenuUid
	}
	return ""
}

func (x *RolesServiceAccessDefinition) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *RolesServiceAccessDefinition) GetMenuDescription() string {
	if x != nil {
		return x.MenuDescription
	}
	return ""
}

// Describes the data structure of each role access on the platform
type RoleAccess struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this team
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// The associated Role ID
	RoleId uint64 `protobuf:"varint,10,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// The menu UID (or internal code)
	MenuUid string `protobuf:"bytes,11,opt,name=menu_uid,json=menuUid,proto3" json:"menu_uid,omitempty"`
	// Denotes if the menu is accessible
	IsAccessible  bool `protobuf:"varint,12,opt,name=is_accessible,json=isAccessible,proto3" json:"is_accessible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleAccess) Reset() {
	*x = RoleAccess{}
	mi := &file_roles_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAccess) ProtoMessage() {}

func (x *RoleAccess) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAccess.ProtoReflect.Descriptor instead.
func (*RoleAccess) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *RoleAccess) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RoleAccess) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RoleAccess) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *RoleAccess) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *RoleAccess) GetRoleId() uint64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleAccess) GetMenuUid() string {
	if x != nil {
		return x.MenuUid
	}
	return ""
}

func (x *RoleAccess) GetIsAccessible() bool {
	if x != nil {
		return x.IsAccessible
	}
	return false
}

// Describes the message consisting of the list of roles
type RolesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Role `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesList) Reset() {
	*x = RolesList{}
	mi := &file_roles_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesList) ProtoMessage() {}

func (x *RolesList) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesList.ProtoReflect.Descriptor instead.
func (*RolesList) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *RolesList) GetList() []*Role {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type RolesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ROLE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ROLE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this role
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServicePaginationReq) Reset() {
	*x = RolesServicePaginationReq{}
	mi := &file_roles_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServicePaginationReq) ProtoMessage() {}

func (x *RolesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*RolesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *RolesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *RolesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RolesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RolesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *RolesServicePaginationReq) GetSortKey() ROLE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ROLE_SORT_KEY_ROLE_SORT_KEY_ID_UNSPECIFIED
}

func (x *RolesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type RolesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Role `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServicePaginationResponse) Reset() {
	*x = RolesServicePaginationResponse{}
	mi := &file_roles_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServicePaginationResponse) ProtoMessage() {}

func (x *RolesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*RolesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *RolesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RolesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RolesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RolesServicePaginationResponse) GetPayload() []*Role {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type RolesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ROLE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ROLE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this role
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the role
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the code
	Code          string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceFilterReq) Reset() {
	*x = RolesServiceFilterReq{}
	mi := &file_roles_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceFilterReq) ProtoMessage() {}

func (x *RolesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*RolesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *RolesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *RolesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RolesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RolesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *RolesServiceFilterReq) GetSortKey() ROLE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ROLE_SORT_KEY_ROLE_SORT_KEY_ID_UNSPECIFIED
}

func (x *RolesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *RolesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *RolesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *RolesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *RolesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RolesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *RolesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *RolesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *RolesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *RolesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *RolesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *RolesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *RolesServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolesServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Describes the base request payload of a count search
type RolesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this role
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the role
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the code
	Code          string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceCountReq) Reset() {
	*x = RolesServiceCountReq{}
	mi := &file_roles_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceCountReq) ProtoMessage() {}

func (x *RolesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceCountReq.ProtoReflect.Descriptor instead.
func (*RolesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *RolesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *RolesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *RolesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *RolesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *RolesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *RolesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RolesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *RolesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *RolesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *RolesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *RolesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *RolesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *RolesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *RolesServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RolesServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Describes the request payload for performing a generic search operation on records
type RolesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey ROLE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.ROLE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RolesServiceSearchAllReq) Reset() {
	*x = RolesServiceSearchAllReq{}
	mi := &file_roles_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolesServiceSearchAllReq) ProtoMessage() {}

func (x *RolesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_roles_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*RolesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_roles_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *RolesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *RolesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RolesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RolesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *RolesServiceSearchAllReq) GetSortKey() ROLE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return ROLE_SORT_KEY_ROLE_SORT_KEY_ID_UNSPECIFIED
}

func (x *RolesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *RolesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *RolesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

var File_roles_scailo_proto protoreflect.FileDescriptor

const file_roles_scailo_proto_rawDesc = "" +
	"\n" +
	"\x12roles.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xba\x03\n" +
	"\x19RolesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12!\n" +
	"\fvault_access\x18\r \x01(\bR\vvaultAccess\x12C\n" +
	"\x1evault_root_folder_interactions\x18\x0e \x01(\bR\x1bvaultRootFolderInteractions\x12\x1f\n" +
	"\vhttp_access\x18\x0f \x01(\bR\n" +
	"httpAccess\x12!\n" +
	"\fhttps_access\x18\x10 \x01(\bR\vhttpsAccess\x12Q\n" +
	"\vaccess_list\x18\x14 \x03(\v20.Scailo.RolesServiceAccessCreateAndUpdateRequestR\n" +
	"accessList\"\xd5\x03\n" +
	"\x19RolesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12!\n" +
	"\fvault_access\x18\r \x01(\bR\vvaultAccess\x12C\n" +
	"\x1evault_root_folder_interactions\x18\x0e \x01(\bR\x1bvaultRootFolderInteractions\x12\x1f\n" +
	"\vhttp_access\x18\x0f \x01(\bR\n" +
	"httpAccess\x12!\n" +
	"\fhttps_access\x18\x10 \x01(\bR\vhttpsAccess\x12Q\n" +
	"\vaccess_list\x18\x14 \x03(\v20.Scailo.RolesServiceAccessCreateAndUpdateRequestR\n" +
	"accessList\"\xdf\x04\n" +
	"\x04Role\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12!\n" +
	"\fvault_access\x18\r \x01(\bR\vvaultAccess\x12C\n" +
	"\x1evault_root_folder_interactions\x18\x0e \x01(\bR\x1bvaultRootFolderInteractions\x12\x1f\n" +
	"\vhttp_access\x18\x0f \x01(\bR\n" +
	"httpAccess\x12!\n" +
	"\fhttps_access\x18\x10 \x01(\bR\vhttpsAccess\x123\n" +
	"\vaccess_list\x18\x14 \x03(\v2\x12.Scailo.RoleAccessR\n" +
	"accessList\"\x83\x01\n" +
	"(RolesServiceAccessCreateAndUpdateRequest\x122\n" +
	"\bmenu_uid\x18\v \x01(\tB\x17\xbaH\x14r\x122\x10^[0-9A-Za-z_-]+$R\amenuUid\x12#\n" +
	"\ris_accessible\x18\f \x01(\bR\fisAccessible\"\xac\x01\n" +
	"\x1cRolesServiceAccessDefinition\x122\n" +
	"\bmenu_uid\x18\v \x01(\tB\x17\xbaH\x14r\x122\x10^[0-9A-Za-z_-]+$R\amenuUid\x12$\n" +
	"\tmenu_name\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\bmenuName\x122\n" +
	"\x10menu_description\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x0fmenuDescription\"\xa8\x02\n" +
	"\n" +
	"RoleAccess\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12\x17\n" +
	"\arole_id\x18\n" +
	" \x01(\x04R\x06roleId\x12\x19\n" +
	"\bmenu_uid\x18\v \x01(\tR\amenuUid\x12#\n" +
	"\ris_accessible\x18\f \x01(\bR\fisAccessible\"-\n" +
	"\tRolesList\x12 \n" +
	"\x04list\x18\x01 \x03(\v2\f.Scailo.RoleR\x04list\"\xad\x02\n" +
	"\x19RolesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.ROLE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x8c\x01\n" +
	"\x1eRolesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12&\n" +
	"\apayload\x18\x04 \x03(\v2\f.Scailo.RoleR\apayload\"\xf0\x06\n" +
	"\x15RolesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.ROLE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\"\xc1\x05\n" +
	"\x14RolesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\"\xf5\x02\n" +
	"\x18RolesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.ROLE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey*\xa0\x02\n" +
	"\rROLE_SORT_KEY\x12 \n" +
	"\x1cROLE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18ROLE_SORT_KEY_CREATED_AT\x10\x01\x12\x1d\n" +
	"\x19ROLE_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1d\n" +
	"\x19ROLE_SORT_KEY_APPROVED_ON\x10\x03\x12\x1d\n" +
	"\x19ROLE_SORT_KEY_APPROVED_BY\x10\x04\x12\"\n" +
	"\x1eROLE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x1e\n" +
	"\x1aROLE_SORT_KEY_COMPLETED_ON\x10\x06\x12\x16\n" +
	"\x12ROLE_SORT_KEY_NAME\x10\n" +
	"\x12\x16\n" +
	"\x12ROLE_SORT_KEY_CODE\x10\v2\x86\x11\n" +
	"\fRolesService\x12G\n" +
	"\x06Create\x12!.Scailo.RolesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12F\n" +
	"\x05Draft\x12!.Scailo.RolesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\vDraftUpdate\x12!.Scailo.RolesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eRevisionUpdate\x12!.Scailo.RolesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x129\n" +
	"\x05Clone\x12\x14.Scailo.CloneRequest\x1a\x1a.Scailo.IdentifierResponse\x12,\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Role\x122\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Role\x125\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Role\x12;\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Role\x129\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x11.Scailo.RolesList\x122\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x11.Scailo.RolesList\x12A\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.RolesList\x12_\n" +
	"\x12ViewWithPagination\x12!.Scailo.RolesServicePaginationReq\x1a&.Scailo.RolesServicePaginationResponse\x12'\n" +
	"\bViewSelf\x12\r.Scailo.Empty\x1a\f.Scailo.Role\x12@\n" +
	"\tSearchAll\x12 .Scailo.RolesServiceSearchAllReq\x1a\x11.Scailo.RolesList\x12:\n" +
	"\x06Filter\x12\x1d.Scailo.RolesServiceFilterReq\x1a\x11.Scailo.RolesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12<\n" +
	"\x05Count\x12\x1c.Scailo.RolesServiceCountReq\x1a\x15.Scailo.CountResponse\x12D\n" +
	"\rDownloadAsCSV\x12\x1d.Scailo.RolesServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBb\n" +
	"\n" +
	"com.ScailoB\x10RolesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_roles_scailo_proto_rawDescOnce sync.Once
	file_roles_scailo_proto_rawDescData []byte
)

func file_roles_scailo_proto_rawDescGZIP() []byte {
	file_roles_scailo_proto_rawDescOnce.Do(func() {
		file_roles_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_roles_scailo_proto_rawDesc), len(file_roles_scailo_proto_rawDesc)))
	})
	return file_roles_scailo_proto_rawDescData
}

var file_roles_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_roles_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_roles_scailo_proto_goTypes = []any{
	(ROLE_SORT_KEY)(0),                               // 0: Scailo.ROLE_SORT_KEY
	(*RolesServiceCreateRequest)(nil),                // 1: Scailo.RolesServiceCreateRequest
	(*RolesServiceUpdateRequest)(nil),                // 2: Scailo.RolesServiceUpdateRequest
	(*Role)(nil),                                     // 3: Scailo.Role
	(*RolesServiceAccessCreateAndUpdateRequest)(nil), // 4: Scailo.RolesServiceAccessCreateAndUpdateRequest
	(*RolesServiceAccessDefinition)(nil),             // 5: Scailo.RolesServiceAccessDefinition
	(*RoleAccess)(nil),                               // 6: Scailo.RoleAccess
	(*RolesList)(nil),                                // 7: Scailo.RolesList
	(*RolesServicePaginationReq)(nil),                // 8: Scailo.RolesServicePaginationReq
	(*RolesServicePaginationResponse)(nil),           // 9: Scailo.RolesServicePaginationResponse
	(*RolesServiceFilterReq)(nil),                    // 10: Scailo.RolesServiceFilterReq
	(*RolesServiceCountReq)(nil),                     // 11: Scailo.RolesServiceCountReq
	(*RolesServiceSearchAllReq)(nil),                 // 12: Scailo.RolesServiceSearchAllReq
	(*EmployeeMetadata)(nil),                         // 13: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                         // 14: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                   // 15: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                     // 16: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                                 // 17: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                  // 18: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),            // 19: Scailo.IdentifierUUIDWithUserComment
	(*CloneRequest)(nil),                             // 20: Scailo.CloneRequest
	(*Identifier)(nil),                               // 21: Scailo.Identifier
	(*IdentifierUUID)(nil),                           // 22: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                          // 23: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                             // 24: Scailo.ActiveStatus
	(*Empty)(nil),                                    // 25: Scailo.Empty
	(*CountInSLCStatusRequest)(nil),                  // 26: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                             // 27: Scailo.StandardFile
	(*IdentifierResponse)(nil),                       // 28: Scailo.IdentifierResponse
	(*CountResponse)(nil),                            // 29: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),                      // 30: Scailo.IdentifierUUIDsList
}
var file_roles_scailo_proto_depIdxs = []int32{
	4,  // 0: Scailo.RolesServiceCreateRequest.access_list:type_name -> Scailo.RolesServiceAccessCreateAndUpdateRequest
	4,  // 1: Scailo.RolesServiceUpdateRequest.access_list:type_name -> Scailo.RolesServiceAccessCreateAndUpdateRequest
	13, // 2: Scailo.Role.metadata:type_name -> Scailo.EmployeeMetadata
	14, // 3: Scailo.Role.approval_metadata:type_name -> Scailo.ApprovalMetadata
	15, // 4: Scailo.Role.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	16, // 5: Scailo.Role.logs:type_name -> Scailo.LogbookLogConciseSLC
	6,  // 6: Scailo.Role.access_list:type_name -> Scailo.RoleAccess
	13, // 7: Scailo.RoleAccess.metadata:type_name -> Scailo.EmployeeMetadata
	14, // 8: Scailo.RoleAccess.approval_metadata:type_name -> Scailo.ApprovalMetadata
	3,  // 9: Scailo.RolesList.list:type_name -> Scailo.Role
	17, // 10: Scailo.RolesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	18, // 11: Scailo.RolesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 12: Scailo.RolesServicePaginationReq.sort_key:type_name -> Scailo.ROLE_SORT_KEY
	15, // 13: Scailo.RolesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 14: Scailo.RolesServicePaginationResponse.payload:type_name -> Scailo.Role
	17, // 15: Scailo.RolesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	18, // 16: Scailo.RolesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 17: Scailo.RolesServiceFilterReq.sort_key:type_name -> Scailo.ROLE_SORT_KEY
	15, // 18: Scailo.RolesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	17, // 19: Scailo.RolesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 20: Scailo.RolesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	17, // 21: Scailo.RolesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	18, // 22: Scailo.RolesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 23: Scailo.RolesServiceSearchAllReq.sort_key:type_name -> Scailo.ROLE_SORT_KEY
	15, // 24: Scailo.RolesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	1,  // 25: Scailo.RolesService.Create:input_type -> Scailo.RolesServiceCreateRequest
	1,  // 26: Scailo.RolesService.Draft:input_type -> Scailo.RolesServiceCreateRequest
	2,  // 27: Scailo.RolesService.DraftUpdate:input_type -> Scailo.RolesServiceUpdateRequest
	19, // 28: Scailo.RolesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 29: Scailo.RolesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 30: Scailo.RolesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 31: Scailo.RolesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	2,  // 32: Scailo.RolesService.RevisionUpdate:input_type -> Scailo.RolesServiceUpdateRequest
	19, // 33: Scailo.RolesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 34: Scailo.RolesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 35: Scailo.RolesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 36: Scailo.RolesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 37: Scailo.RolesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 38: Scailo.RolesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 39: Scailo.RolesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 40: Scailo.RolesService.Clone:input_type -> Scailo.CloneRequest
	21, // 41: Scailo.RolesService.ViewByID:input_type -> Scailo.Identifier
	22, // 42: Scailo.RolesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	21, // 43: Scailo.RolesService.ViewEssentialByID:input_type -> Scailo.Identifier
	22, // 44: Scailo.RolesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	23, // 45: Scailo.RolesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	24, // 46: Scailo.RolesService.ViewAll:input_type -> Scailo.ActiveStatus
	22, // 47: Scailo.RolesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	8,  // 48: Scailo.RolesService.ViewWithPagination:input_type -> Scailo.RolesServicePaginationReq
	25, // 49: Scailo.RolesService.ViewSelf:input_type -> Scailo.Empty
	12, // 50: Scailo.RolesService.SearchAll:input_type -> Scailo.RolesServiceSearchAllReq
	10, // 51: Scailo.RolesService.Filter:input_type -> Scailo.RolesServiceFilterReq
	26, // 52: Scailo.RolesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	11, // 53: Scailo.RolesService.Count:input_type -> Scailo.RolesServiceCountReq
	10, // 54: Scailo.RolesService.DownloadAsCSV:input_type -> Scailo.RolesServiceFilterReq
	27, // 55: Scailo.RolesService.ImportFromCSV:input_type -> Scailo.StandardFile
	28, // 56: Scailo.RolesService.Create:output_type -> Scailo.IdentifierResponse
	28, // 57: Scailo.RolesService.Draft:output_type -> Scailo.IdentifierResponse
	28, // 58: Scailo.RolesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	28, // 59: Scailo.RolesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	28, // 60: Scailo.RolesService.Verify:output_type -> Scailo.IdentifierResponse
	28, // 61: Scailo.RolesService.Approve:output_type -> Scailo.IdentifierResponse
	28, // 62: Scailo.RolesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	28, // 63: Scailo.RolesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	28, // 64: Scailo.RolesService.Halt:output_type -> Scailo.IdentifierResponse
	28, // 65: Scailo.RolesService.Discard:output_type -> Scailo.IdentifierResponse
	28, // 66: Scailo.RolesService.Restore:output_type -> Scailo.IdentifierResponse
	28, // 67: Scailo.RolesService.Complete:output_type -> Scailo.IdentifierResponse
	28, // 68: Scailo.RolesService.Repeat:output_type -> Scailo.IdentifierResponse
	28, // 69: Scailo.RolesService.Reopen:output_type -> Scailo.IdentifierResponse
	28, // 70: Scailo.RolesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	28, // 71: Scailo.RolesService.Clone:output_type -> Scailo.IdentifierResponse
	3,  // 72: Scailo.RolesService.ViewByID:output_type -> Scailo.Role
	3,  // 73: Scailo.RolesService.ViewByUUID:output_type -> Scailo.Role
	3,  // 74: Scailo.RolesService.ViewEssentialByID:output_type -> Scailo.Role
	3,  // 75: Scailo.RolesService.ViewEssentialByUUID:output_type -> Scailo.Role
	7,  // 76: Scailo.RolesService.ViewFromIDs:output_type -> Scailo.RolesList
	7,  // 77: Scailo.RolesService.ViewAll:output_type -> Scailo.RolesList
	7,  // 78: Scailo.RolesService.ViewAllForEntityUUID:output_type -> Scailo.RolesList
	9,  // 79: Scailo.RolesService.ViewWithPagination:output_type -> Scailo.RolesServicePaginationResponse
	3,  // 80: Scailo.RolesService.ViewSelf:output_type -> Scailo.Role
	7,  // 81: Scailo.RolesService.SearchAll:output_type -> Scailo.RolesList
	7,  // 82: Scailo.RolesService.Filter:output_type -> Scailo.RolesList
	29, // 83: Scailo.RolesService.CountInStatus:output_type -> Scailo.CountResponse
	29, // 84: Scailo.RolesService.Count:output_type -> Scailo.CountResponse
	27, // 85: Scailo.RolesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	30, // 86: Scailo.RolesService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	56, // [56:87] is the sub-list for method output_type
	25, // [25:56] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_roles_scailo_proto_init() }
func file_roles_scailo_proto_init() {
	if File_roles_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_roles_scailo_proto_rawDesc), len(file_roles_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roles_scailo_proto_goTypes,
		DependencyIndexes: file_roles_scailo_proto_depIdxs,
		EnumInfos:         file_roles_scailo_proto_enumTypes,
		MessageInfos:      file_roles_scailo_proto_msgTypes,
	}.Build()
	File_roles_scailo_proto = out.File
	file_roles_scailo_proto_goTypes = nil
	file_roles_scailo_proto_depIdxs = nil
}
