// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: credit_notes.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores all the possible references from which a credit note can be added
type CREDIT_NOTE_REF_FROM int32

const (
	// Used only in filters
	CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED CREDIT_NOTE_REF_FROM = 0
	// Denotes that the credit note originated from a sales order
	CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_SALES_ORDER CREDIT_NOTE_REF_FROM = 1
)

// Enum value maps for CREDIT_NOTE_REF_FROM.
var (
	CREDIT_NOTE_REF_FROM_name = map[int32]string{
		0: "CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED",
		1: "CREDIT_NOTE_REF_FROM_SALES_ORDER",
	}
	CREDIT_NOTE_REF_FROM_value = map[string]int32{
		"CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED": 0,
		"CREDIT_NOTE_REF_FROM_SALES_ORDER":     1,
	}
)

func (x CREDIT_NOTE_REF_FROM) Enum() *CREDIT_NOTE_REF_FROM {
	p := new(CREDIT_NOTE_REF_FROM)
	*p = x
	return p
}

func (x CREDIT_NOTE_REF_FROM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CREDIT_NOTE_REF_FROM) Descriptor() protoreflect.EnumDescriptor {
	return file_credit_notes_scailo_proto_enumTypes[0].Descriptor()
}

func (CREDIT_NOTE_REF_FROM) Type() protoreflect.EnumType {
	return &file_credit_notes_scailo_proto_enumTypes[0]
}

func (x CREDIT_NOTE_REF_FROM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CREDIT_NOTE_REF_FROM.Descriptor instead.
func (CREDIT_NOTE_REF_FROM) EnumDescriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type CREDIT_NOTE_ITEM_SORT_KEY int32

const (
	// Fetch ordered results by id
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED CREDIT_NOTE_ITEM_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT CREDIT_NOTE_ITEM_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT CREDIT_NOTE_ITEM_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON CREDIT_NOTE_ITEM_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY CREDIT_NOTE_ITEM_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID CREDIT_NOTE_ITEM_SORT_KEY = 5
	// Fetch ordered results by the family ID
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID CREDIT_NOTE_ITEM_SORT_KEY = 10
	// Fetch ordered results by the internal quantity
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY CREDIT_NOTE_ITEM_SORT_KEY = 11
	// Fetch ordered results by the client unit of material ID
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID CREDIT_NOTE_ITEM_SORT_KEY = 12
	// Fetch ordered results by the client quantity
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY CREDIT_NOTE_ITEM_SORT_KEY = 13
	// Fetch ordered results by the client family code
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE CREDIT_NOTE_ITEM_SORT_KEY = 14
	// Fetch ordered results by the unit price
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE CREDIT_NOTE_ITEM_SORT_KEY = 15
	// Fetch ordered results by the tax group ID
	CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID CREDIT_NOTE_ITEM_SORT_KEY = 16
)

// Enum value maps for CREDIT_NOTE_ITEM_SORT_KEY.
var (
	CREDIT_NOTE_ITEM_SORT_KEY_name = map[int32]string{
		0:  "CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED",
		1:  "CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT",
		2:  "CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT",
		3:  "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON",
		4:  "CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY",
		5:  "CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID",
		10: "CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID",
		11: "CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY",
		12: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID",
		13: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY",
		14: "CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE",
		15: "CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE",
		16: "CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID",
	}
	CREDIT_NOTE_ITEM_SORT_KEY_value = map[string]int32{
		"CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED":     0,
		"CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT":         1,
		"CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT":        2,
		"CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON":        3,
		"CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY":        4,
		"CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID":   5,
		"CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID":          10,
		"CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY":  11,
		"CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID":      12,
		"CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY":    13,
		"CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE": 14,
		"CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE":         15,
		"CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID":       16,
	}
)

func (x CREDIT_NOTE_ITEM_SORT_KEY) Enum() *CREDIT_NOTE_ITEM_SORT_KEY {
	p := new(CREDIT_NOTE_ITEM_SORT_KEY)
	*p = x
	return p
}

func (x CREDIT_NOTE_ITEM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CREDIT_NOTE_ITEM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_credit_notes_scailo_proto_enumTypes[1].Descriptor()
}

func (CREDIT_NOTE_ITEM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_credit_notes_scailo_proto_enumTypes[1]
}

func (x CREDIT_NOTE_ITEM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CREDIT_NOTE_ITEM_SORT_KEY.Descriptor instead.
func (CREDIT_NOTE_ITEM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the applicable statuses of credit note items
type CREDIT_NOTE_ITEM_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	CREDIT_NOTE_ITEM_STATUS_CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED CREDIT_NOTE_ITEM_STATUS = 0
	// Denotes that the credit note items must have been approved
	CREDIT_NOTE_ITEM_STATUS_CREDIT_NOTE_ITEM_STATUS_APPROVED CREDIT_NOTE_ITEM_STATUS = 1
	// Denotes that the credit note items must be waiting for approval
	CREDIT_NOTE_ITEM_STATUS_CREDIT_NOTE_ITEM_STATUS_UNAPPROVED CREDIT_NOTE_ITEM_STATUS = 2
)

// Enum value maps for CREDIT_NOTE_ITEM_STATUS.
var (
	CREDIT_NOTE_ITEM_STATUS_name = map[int32]string{
		0: "CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED",
		1: "CREDIT_NOTE_ITEM_STATUS_APPROVED",
		2: "CREDIT_NOTE_ITEM_STATUS_UNAPPROVED",
	}
	CREDIT_NOTE_ITEM_STATUS_value = map[string]int32{
		"CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED": 0,
		"CREDIT_NOTE_ITEM_STATUS_APPROVED":        1,
		"CREDIT_NOTE_ITEM_STATUS_UNAPPROVED":      2,
	}
)

func (x CREDIT_NOTE_ITEM_STATUS) Enum() *CREDIT_NOTE_ITEM_STATUS {
	p := new(CREDIT_NOTE_ITEM_STATUS)
	*p = x
	return p
}

func (x CREDIT_NOTE_ITEM_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CREDIT_NOTE_ITEM_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_credit_notes_scailo_proto_enumTypes[2].Descriptor()
}

func (CREDIT_NOTE_ITEM_STATUS) Type() protoreflect.EnumType {
	return &file_credit_notes_scailo_proto_enumTypes[2]
}

func (x CREDIT_NOTE_ITEM_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CREDIT_NOTE_ITEM_STATUS.Descriptor instead.
func (CREDIT_NOTE_ITEM_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the available sort keys
type CREDIT_NOTE_SORT_KEY int32

const (
	// Fetch ordered results by id
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED CREDIT_NOTE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_CREATED_AT CREDIT_NOTE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_MODIFIED_AT CREDIT_NOTE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_APPROVED_ON CREDIT_NOTE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_APPROVED_BY CREDIT_NOTE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID CREDIT_NOTE_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_COMPLETED_ON CREDIT_NOTE_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_REFERENCE_ID CREDIT_NOTE_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER CREDIT_NOTE_SORT_KEY = 11
	// Fetch ordered results by the total value
	CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_TOTAL_VALUE CREDIT_NOTE_SORT_KEY = 30
)

// Enum value maps for CREDIT_NOTE_SORT_KEY.
var (
	CREDIT_NOTE_SORT_KEY_name = map[int32]string{
		0:  "CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED",
		1:  "CREDIT_NOTE_SORT_KEY_CREATED_AT",
		2:  "CREDIT_NOTE_SORT_KEY_MODIFIED_AT",
		3:  "CREDIT_NOTE_SORT_KEY_APPROVED_ON",
		4:  "CREDIT_NOTE_SORT_KEY_APPROVED_BY",
		5:  "CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID",
		6:  "CREDIT_NOTE_SORT_KEY_COMPLETED_ON",
		10: "CREDIT_NOTE_SORT_KEY_REFERENCE_ID",
		11: "CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER",
		30: "CREDIT_NOTE_SORT_KEY_TOTAL_VALUE",
	}
	CREDIT_NOTE_SORT_KEY_value = map[string]int32{
		"CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED":   0,
		"CREDIT_NOTE_SORT_KEY_CREATED_AT":       1,
		"CREDIT_NOTE_SORT_KEY_MODIFIED_AT":      2,
		"CREDIT_NOTE_SORT_KEY_APPROVED_ON":      3,
		"CREDIT_NOTE_SORT_KEY_APPROVED_BY":      4,
		"CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"CREDIT_NOTE_SORT_KEY_COMPLETED_ON":     6,
		"CREDIT_NOTE_SORT_KEY_REFERENCE_ID":     10,
		"CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER": 11,
		"CREDIT_NOTE_SORT_KEY_TOTAL_VALUE":      30,
	}
)

func (x CREDIT_NOTE_SORT_KEY) Enum() *CREDIT_NOTE_SORT_KEY {
	p := new(CREDIT_NOTE_SORT_KEY)
	*p = x
	return p
}

func (x CREDIT_NOTE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CREDIT_NOTE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_credit_notes_scailo_proto_enumTypes[3].Descriptor()
}

func (CREDIT_NOTE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_credit_notes_scailo_proto_enumTypes[3]
}

func (x CREDIT_NOTE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CREDIT_NOTE_SORT_KEY.Descriptor instead.
func (CREDIT_NOTE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{3}
}

// Describes the parameters necessary to create a record
type CreditNotesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the credit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The associated ID of the bank account
	BankAccountId uint64 `protobuf:"varint,15,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,16,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,17,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceCreateRequest) Reset() {
	*x = CreditNotesServiceCreateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceCreateRequest) ProtoMessage() {}

func (x *CreditNotesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *CreditNotesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNotesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CreditNotesServiceCreateRequest) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetBankAccountId() uint64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNotesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type CreditNotesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the credit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The associated ID of the bank account
	BankAccountId uint64 `protobuf:"varint,15,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,16,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,17,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceUpdateRequest) Reset() {
	*x = CreditNotesServiceUpdateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceUpdateRequest) ProtoMessage() {}

func (x *CreditNotesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *CreditNotesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *CreditNotesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CreditNotesServiceUpdateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetBankAccountId() uint64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNotesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to perform an autofill request
type CreditNotesServiceAutofillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the record that needs to be updated
	Uuid          string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceAutofillRequest) Reset() {
	*x = CreditNotesServiceAutofillRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceAutofillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceAutofillRequest) ProtoMessage() {}

func (x *CreditNotesServiceAutofillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceAutofillRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceAutofillRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *CreditNotesServiceAutofillRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceAutofillRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// Stores the UUID references of the record
type CreditNoteAncillaryParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the ref_id (the UUID of the associated ref_id)
	RefUuid string `protobuf:"bytes,213,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// The UUID of the currency (the UUID of the associated currency)
	CurrencyUuid  string `protobuf:"bytes,214,opt,name=currency_uuid,json=currencyUuid,proto3" json:"currency_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteAncillaryParameters) Reset() {
	*x = CreditNoteAncillaryParameters{}
	mi := &file_credit_notes_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteAncillaryParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteAncillaryParameters) ProtoMessage() {}

func (x *CreditNoteAncillaryParameters) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteAncillaryParameters.ProtoReflect.Descriptor instead.
func (*CreditNoteAncillaryParameters) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *CreditNoteAncillaryParameters) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *CreditNoteAncillaryParameters) GetCurrencyUuid() string {
	if x != nil {
		return x.CurrencyUuid
	}
	return ""
}

// Describes the parameters that are part of a standard response
type CreditNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this credit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this credit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this credit note
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this credit note was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the credit note
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated ID of the currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The associated ID of the bank account
	BankAccountId uint64 `protobuf:"varint,15,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	// Any miscellaneous cost
	MiscellaneousCost uint64 `protobuf:"varint,16,opt,name=miscellaneous_cost,json=miscellaneousCost,proto3" json:"miscellaneous_cost,omitempty"`
	// The optional discount amount
	OverallDiscount uint64 `protobuf:"varint,17,opt,name=overall_discount,json=overallDiscount,proto3" json:"overall_discount,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Stores the total value of the credit note (as a double, which requires no adjustments)
	TotalValue float64 `protobuf:"fixed64,20,opt,name=total_value,json=totalValue,proto3" json:"total_value,omitempty"`
	// The list of associated credit note items
	List []*CreditNoteItem `protobuf:"bytes,30,rep,name=list,proto3" json:"list,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,40,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNote) Reset() {
	*x = CreditNote{}
	mi := &file_credit_notes_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNote) ProtoMessage() {}

func (x *CreditNote) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNote.ProtoReflect.Descriptor instead.
func (*CreditNote) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *CreditNote) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNote) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreditNote) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *CreditNote) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *CreditNote) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *CreditNote) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *CreditNote) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *CreditNote) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CreditNote) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *CreditNote) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNote) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNote) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *CreditNote) GetBankAccountId() uint64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreditNote) GetMiscellaneousCost() uint64 {
	if x != nil {
		return x.MiscellaneousCost
	}
	return 0
}

func (x *CreditNote) GetOverallDiscount() uint64 {
	if x != nil {
		return x.OverallDiscount
	}
	return 0
}

func (x *CreditNote) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNote) GetTotalValue() float64 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *CreditNote) GetList() []*CreditNoteItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *CreditNote) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters required to add an item to a credit note
type CreditNotesServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being supplied in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the client's unit of material
	ClientUomId uint64 `protobuf:"varint,13,opt,name=client_uom_id,json=clientUomId,proto3" json:"client_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in client's unit of material
	ClientQuantity uint64 `protobuf:"varint,14,opt,name=client_quantity,json=clientQuantity,proto3" json:"client_quantity,omitempty"`
	// The family code as represented by the client
	ClientFamilyCode string `protobuf:"bytes,15,opt,name=client_family_code,json=clientFamilyCode,proto3" json:"client_family_code,omitempty"`
	// The unit price of the item (as supplied to the client)
	UnitPrice uint64 `protobuf:"varint,16,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,17,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,19,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditNotesServiceItemCreateRequest) Reset() {
	*x = CreditNotesServiceItemCreateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceItemCreateRequest) ProtoMessage() {}

func (x *CreditNotesServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *CreditNotesServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceItemCreateRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetClientUomId() uint64 {
	if x != nil {
		return x.ClientUomId
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetClientQuantity() uint64 {
	if x != nil {
		return x.ClientQuantity
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetClientFamilyCode() string {
	if x != nil {
		return x.ClientFamilyCode
	}
	return ""
}

func (x *CreditNotesServiceItemCreateRequest) GetUnitPrice() uint64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNotesServiceItemCreateRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters required to add an individual item as part of multiple item addition to a credit note
type CreditNotesServiceMultipleItemsSingleton struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being supplied in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the client's unit of material
	ClientUomId uint64 `protobuf:"varint,13,opt,name=client_uom_id,json=clientUomId,proto3" json:"client_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in client's unit of material
	ClientQuantity uint64 `protobuf:"varint,14,opt,name=client_quantity,json=clientQuantity,proto3" json:"client_quantity,omitempty"`
	// The family code as represented by the client
	ClientFamilyCode string `protobuf:"bytes,15,opt,name=client_family_code,json=clientFamilyCode,proto3" json:"client_family_code,omitempty"`
	// The unit price of the item (as supplied to the client)
	UnitPrice uint64 `protobuf:"varint,16,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,17,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,19,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditNotesServiceMultipleItemsSingleton) Reset() {
	*x = CreditNotesServiceMultipleItemsSingleton{}
	mi := &file_credit_notes_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceMultipleItemsSingleton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceMultipleItemsSingleton) ProtoMessage() {}

func (x *CreditNotesServiceMultipleItemsSingleton) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceMultipleItemsSingleton.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceMultipleItemsSingleton) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetClientUomId() uint64 {
	if x != nil {
		return x.ClientUomId
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetClientQuantity() uint64 {
	if x != nil {
		return x.ClientQuantity
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetClientFamilyCode() string {
	if x != nil {
		return x.ClientFamilyCode
	}
	return ""
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetUnitPrice() uint64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsSingleton) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters required to add multiple items to a credit note
type CreditNotesServiceMultipleItemsCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// List of items
	List          []*CreditNotesServiceMultipleItemsSingleton `protobuf:"bytes,11,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceMultipleItemsCreateRequest) Reset() {
	*x = CreditNotesServiceMultipleItemsCreateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceMultipleItemsCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceMultipleItemsCreateRequest) ProtoMessage() {}

func (x *CreditNotesServiceMultipleItemsCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceMultipleItemsCreateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceMultipleItemsCreateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *CreditNotesServiceMultipleItemsCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceMultipleItemsCreateRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNotesServiceMultipleItemsCreateRequest) GetList() []*CreditNotesServiceMultipleItemsSingleton {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters required to update an item in a credit note
type CreditNotesServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The quantity (in cents) being supplied in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the client's unit of material
	ClientUomId uint64 `protobuf:"varint,13,opt,name=client_uom_id,json=clientUomId,proto3" json:"client_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in client's unit of material
	ClientQuantity uint64 `protobuf:"varint,14,opt,name=client_quantity,json=clientQuantity,proto3" json:"client_quantity,omitempty"`
	// The family code as represented by the client
	ClientFamilyCode string `protobuf:"bytes,15,opt,name=client_family_code,json=clientFamilyCode,proto3" json:"client_family_code,omitempty"`
	// The unit price of the item (as supplied to the client)
	UnitPrice uint64 `protobuf:"varint,16,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,17,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,19,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditNotesServiceItemUpdateRequest) Reset() {
	*x = CreditNotesServiceItemUpdateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceItemUpdateRequest) ProtoMessage() {}

func (x *CreditNotesServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *CreditNotesServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetClientUomId() uint64 {
	if x != nil {
		return x.ClientUomId
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetClientQuantity() uint64 {
	if x != nil {
		return x.ClientQuantity
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetClientFamilyCode() string {
	if x != nil {
		return x.ClientFamilyCode
	}
	return ""
}

func (x *CreditNotesServiceItemUpdateRequest) GetUnitPrice() uint64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNotesServiceItemUpdateRequest) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the parameters that constitute an item associated to a credit note
type CreditNoteItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this credit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being supplied in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// Stores the ID of the client's unit of material
	ClientUomId uint64 `protobuf:"varint,13,opt,name=client_uom_id,json=clientUomId,proto3" json:"client_uom_id,omitempty"`
	// Stores the quantity (in cents) being admitted in client's unit of material
	ClientQuantity uint64 `protobuf:"varint,14,opt,name=client_quantity,json=clientQuantity,proto3" json:"client_quantity,omitempty"`
	// The family code as represented by the client
	ClientFamilyCode string `protobuf:"bytes,15,opt,name=client_family_code,json=clientFamilyCode,proto3" json:"client_family_code,omitempty"`
	// The unit price of the item (as supplied to the client)
	UnitPrice uint64 `protobuf:"varint,16,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,17,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The applicable round off amount (optional, and can be positive or negative)
	RoundOff int64 `protobuf:"varint,18,opt,name=round_off,json=roundOff,proto3" json:"round_off,omitempty"`
	// Optional specifications
	Specifications string `protobuf:"bytes,19,opt,name=specifications,proto3" json:"specifications,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreditNoteItem) Reset() {
	*x = CreditNoteItem{}
	mi := &file_credit_notes_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteItem) ProtoMessage() {}

func (x *CreditNoteItem) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteItem.ProtoReflect.Descriptor instead.
func (*CreditNoteItem) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *CreditNoteItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNoteItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreditNoteItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *CreditNoteItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *CreditNoteItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNoteItem) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNoteItem) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNoteItem) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *CreditNoteItem) GetClientUomId() uint64 {
	if x != nil {
		return x.ClientUomId
	}
	return 0
}

func (x *CreditNoteItem) GetClientQuantity() uint64 {
	if x != nil {
		return x.ClientQuantity
	}
	return 0
}

func (x *CreditNoteItem) GetClientFamilyCode() string {
	if x != nil {
		return x.ClientFamilyCode
	}
	return ""
}

func (x *CreditNoteItem) GetUnitPrice() uint64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *CreditNoteItem) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *CreditNoteItem) GetRoundOff() int64 {
	if x != nil {
		return x.RoundOff
	}
	return 0
}

func (x *CreditNoteItem) GetSpecifications() string {
	if x != nil {
		return x.Specifications
	}
	return ""
}

// Describes the message consisting of the list of credit notes
type CreditNotesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*CreditNote `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesList) Reset() {
	*x = CreditNotesList{}
	mi := &file_credit_notes_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesList) ProtoMessage() {}

func (x *CreditNotesList) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesList.ProtoReflect.Descriptor instead.
func (*CreditNotesList) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *CreditNotesList) GetList() []*CreditNote {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of credit note items
type CreditNoteItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*CreditNoteItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteItemsList) Reset() {
	*x = CreditNoteItemsList{}
	mi := &file_credit_notes_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteItemsList) ProtoMessage() {}

func (x *CreditNoteItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteItemsList.ProtoReflect.Descriptor instead.
func (*CreditNoteItemsList) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *CreditNoteItemsList) GetList() []*CreditNoteItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type CreditNoteItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteItemHistoryRequest) Reset() {
	*x = CreditNoteItemHistoryRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteItemHistoryRequest) ProtoMessage() {}

func (x *CreditNoteItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*CreditNoteItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *CreditNoteItemHistoryRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNoteItemHistoryRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the parameters that are required to retrieve the info of a prospective credit note item
type CreditNoteItemProspectiveInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteItemProspectiveInfoRequest) Reset() {
	*x = CreditNoteItemProspectiveInfoRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteItemProspectiveInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteItemProspectiveInfoRequest) ProtoMessage() {}

func (x *CreditNoteItemProspectiveInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteItemProspectiveInfoRequest.ProtoReflect.Descriptor instead.
func (*CreditNoteItemProspectiveInfoRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *CreditNoteItemProspectiveInfoRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNoteItemProspectiveInfoRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
type CreditNotesServiceAlreadyAddedQuantityForSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,1,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,2,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated family ID
	FamilyId      uint64 `protobuf:"varint,3,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) Reset() {
	*x = CreditNotesServiceAlreadyAddedQuantityForSourceRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceAlreadyAddedQuantityForSourceRequest) ProtoMessage() {}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceAlreadyAddedQuantityForSourceRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceAlreadyAddedQuantityForSourceRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNotesServiceAlreadyAddedQuantityForSourceRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload to retrieve approved or unapproved items.
type CreditNoteItemsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey CREDIT_NOTE_ITEM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.CREDIT_NOTE_ITEM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the items
	Status CREDIT_NOTE_ITEM_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.CREDIT_NOTE_ITEM_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the credit note
	CreditNoteId uint64 `protobuf:"varint,20,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,21,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The ID of the client's unit of material
	ClientUomId uint64 `protobuf:"varint,23,opt,name=client_uom_id,json=clientUomId,proto3" json:"client_uom_id,omitempty"`
	// Stores the family code as given by the client
	ClientFamilyCode string `protobuf:"bytes,25,opt,name=client_family_code,json=clientFamilyCode,proto3" json:"client_family_code,omitempty"`
	// The ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,27,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteItemsSearchRequest) Reset() {
	*x = CreditNoteItemsSearchRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteItemsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteItemsSearchRequest) ProtoMessage() {}

func (x *CreditNoteItemsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteItemsSearchRequest.ProtoReflect.Descriptor instead.
func (*CreditNoteItemsSearchRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *CreditNoteItemsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *CreditNoteItemsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *CreditNoteItemsSearchRequest) GetSortKey() CREDIT_NOTE_ITEM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return CREDIT_NOTE_ITEM_SORT_KEY_CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED
}

func (x *CreditNoteItemsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNoteItemsSearchRequest) GetStatus() CREDIT_NOTE_ITEM_STATUS {
	if x != nil {
		return x.Status
	}
	return CREDIT_NOTE_ITEM_STATUS_CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED
}

func (x *CreditNoteItemsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetClientUomId() uint64 {
	if x != nil {
		return x.ClientUomId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetClientFamilyCode() string {
	if x != nil {
		return x.ClientFamilyCode
	}
	return ""
}

func (x *CreditNoteItemsSearchRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *CreditNoteItemsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination items request
type CreditNotesServicePaginatedItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*CreditNoteItem `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServicePaginatedItemsResponse) Reset() {
	*x = CreditNotesServicePaginatedItemsResponse{}
	mi := &file_credit_notes_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServicePaginatedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServicePaginatedItemsResponse) ProtoMessage() {}

func (x *CreditNotesServicePaginatedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServicePaginatedItemsResponse.ProtoReflect.Descriptor instead.
func (*CreditNotesServicePaginatedItemsResponse) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *CreditNotesServicePaginatedItemsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNotesServicePaginatedItemsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNotesServicePaginatedItemsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CreditNotesServicePaginatedItemsResponse) GetPayload() []*CreditNoteItem {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes a pagination request to retrieve records
type CreditNotesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey CREDIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.CREDIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this credit note
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServicePaginationReq) Reset() {
	*x = CreditNotesServicePaginationReq{}
	mi := &file_credit_notes_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServicePaginationReq) ProtoMessage() {}

func (x *CreditNotesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*CreditNotesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *CreditNotesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *CreditNotesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNotesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNotesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *CreditNotesServicePaginationReq) GetSortKey() CREDIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *CreditNotesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type CreditNotesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*CreditNote `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServicePaginationResponse) Reset() {
	*x = CreditNotesServicePaginationResponse{}
	mi := &file_credit_notes_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServicePaginationResponse) ProtoMessage() {}

func (x *CreditNotesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*CreditNotesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *CreditNotesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNotesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNotesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CreditNotesServicePaginationResponse) GetPayload() []*CreditNote {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type CreditNotesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey CREDIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.CREDIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this credit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the credit note
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,24,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The associated ID of the bank account
	BankAccountId uint64 `protobuf:"varint,25,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,40,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Sales Order related filters
	// The associated consignee client ID of the linked sales order
	ConsigneeClientId uint64 `protobuf:"varint,50,opt,name=consignee_client_id,json=consigneeClientId,proto3" json:"consignee_client_id,omitempty"`
	// The associated buyer client ID of the linked sales order
	BuyerClientId uint64 `protobuf:"varint,51,opt,name=buyer_client_id,json=buyerClientId,proto3" json:"buyer_client_id,omitempty"`
	// The ID of the associated project of the linked sales order
	ProjectId uint64 `protobuf:"varint,52,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Stores the minimum value of the credit note (ignored if 0)
	TotalValueMin uint64 `protobuf:"varint,70,opt,name=total_value_min,json=totalValueMin,proto3" json:"total_value_min,omitempty"`
	// Stores the maximum value of the credit note (ignored if 0)
	TotalValueMax uint64 `protobuf:"varint,71,opt,name=total_value_max,json=totalValueMax,proto3" json:"total_value_max,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceFilterReq) Reset() {
	*x = CreditNotesServiceFilterReq{}
	mi := &file_credit_notes_scailo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceFilterReq) ProtoMessage() {}

func (x *CreditNotesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{19}
}

func (x *CreditNotesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *CreditNotesServiceFilterReq) GetSortKey() CREDIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *CreditNotesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNotesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CreditNotesServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *CreditNotesServiceFilterReq) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceFilterReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetBankAccountId() uint64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetConsigneeClientId() uint64 {
	if x != nil {
		return x.ConsigneeClientId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetBuyerClientId() uint64 {
	if x != nil {
		return x.BuyerClientId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetTotalValueMin() uint64 {
	if x != nil {
		return x.TotalValueMin
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetTotalValueMax() uint64 {
	if x != nil {
		return x.TotalValueMax
	}
	return 0
}

func (x *CreditNotesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type CreditNotesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this credit note
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the credit note
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,24,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The associated ID of the bank account
	BankAccountId uint64 `protobuf:"varint,25,opt,name=bank_account_id,json=bankAccountId,proto3" json:"bank_account_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,40,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Sales Order related filters
	// The associated consignee client ID of the linked sales order
	ConsigneeClientId uint64 `protobuf:"varint,50,opt,name=consignee_client_id,json=consigneeClientId,proto3" json:"consignee_client_id,omitempty"`
	// The associated buyer client ID of the linked sales order
	BuyerClientId uint64 `protobuf:"varint,51,opt,name=buyer_client_id,json=buyerClientId,proto3" json:"buyer_client_id,omitempty"`
	// The ID of the associated project of the linked sales order
	ProjectId uint64 `protobuf:"varint,52,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Stores the minimum value of the credit note (ignored if 0)
	TotalValueMin uint64 `protobuf:"varint,70,opt,name=total_value_min,json=totalValueMin,proto3" json:"total_value_min,omitempty"`
	// Stores the maximum value of the credit note (ignored if 0)
	TotalValueMax uint64 `protobuf:"varint,71,opt,name=total_value_max,json=totalValueMax,proto3" json:"total_value_max,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceCountReq) Reset() {
	*x = CreditNotesServiceCountReq{}
	mi := &file_credit_notes_scailo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceCountReq) ProtoMessage() {}

func (x *CreditNotesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceCountReq.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{20}
}

func (x *CreditNotesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNotesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *CreditNotesServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *CreditNotesServiceCountReq) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceCountReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetBankAccountId() uint64 {
	if x != nil {
		return x.BankAccountId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetConsigneeClientId() uint64 {
	if x != nil {
		return x.ConsigneeClientId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetBuyerClientId() uint64 {
	if x != nil {
		return x.BuyerClientId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetTotalValueMin() uint64 {
	if x != nil {
		return x.TotalValueMin
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetTotalValueMax() uint64 {
	if x != nil {
		return x.TotalValueMax
	}
	return 0
}

func (x *CreditNotesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type CreditNotesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey CREDIT_NOTE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.CREDIT_NOTE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The associated reference
	RefFrom CREDIT_NOTE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.CREDIT_NOTE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Sales Order related filters
	// The associated consignee client ID of the linked sales order
	ConsigneeClientId uint64 `protobuf:"varint,50,opt,name=consignee_client_id,json=consigneeClientId,proto3" json:"consignee_client_id,omitempty"`
	// The associated buyer client ID of the linked sales order
	BuyerClientId uint64 `protobuf:"varint,51,opt,name=buyer_client_id,json=buyerClientId,proto3" json:"buyer_client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceSearchAllReq) Reset() {
	*x = CreditNotesServiceSearchAllReq{}
	mi := &file_credit_notes_scailo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceSearchAllReq) ProtoMessage() {}

func (x *CreditNotesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{21}
}

func (x *CreditNotesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreditNotesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CreditNotesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *CreditNotesServiceSearchAllReq) GetSortKey() CREDIT_NOTE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return CREDIT_NOTE_SORT_KEY_CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED
}

func (x *CreditNotesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNotesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *CreditNotesServiceSearchAllReq) GetRefFrom() CREDIT_NOTE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return CREDIT_NOTE_REF_FROM_CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED
}

func (x *CreditNotesServiceSearchAllReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *CreditNotesServiceSearchAllReq) GetConsigneeClientId() uint64 {
	if x != nil {
		return x.ConsigneeClientId
	}
	return 0
}

func (x *CreditNotesServiceSearchAllReq) GetBuyerClientId() uint64 {
	if x != nil {
		return x.BuyerClientId
	}
	return 0
}

// Describes the parameters necessary to create a credit note reference
type CreditNotesServiceReferenceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the sales return ID
	SalesReturnId uint64 `protobuf:"varint,11,opt,name=sales_return_id,json=salesReturnId,proto3" json:"sales_return_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNotesServiceReferenceCreateRequest) Reset() {
	*x = CreditNotesServiceReferenceCreateRequest{}
	mi := &file_credit_notes_scailo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNotesServiceReferenceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNotesServiceReferenceCreateRequest) ProtoMessage() {}

func (x *CreditNotesServiceReferenceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNotesServiceReferenceCreateRequest.ProtoReflect.Descriptor instead.
func (*CreditNotesServiceReferenceCreateRequest) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{22}
}

func (x *CreditNotesServiceReferenceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNotesServiceReferenceCreateRequest) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNotesServiceReferenceCreateRequest) GetSalesReturnId() uint64 {
	if x != nil {
		return x.SalesReturnId
	}
	return 0
}

// Describes the parameters that constitute a credit note reference
type CreditNoteReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this credit note
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the credit note ID
	CreditNoteId uint64 `protobuf:"varint,10,opt,name=credit_note_id,json=creditNoteId,proto3" json:"credit_note_id,omitempty"`
	// Stores the sales return ID
	SalesReturnId uint64 `protobuf:"varint,11,opt,name=sales_return_id,json=salesReturnId,proto3" json:"sales_return_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteReference) Reset() {
	*x = CreditNoteReference{}
	mi := &file_credit_notes_scailo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteReference) ProtoMessage() {}

func (x *CreditNoteReference) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteReference.ProtoReflect.Descriptor instead.
func (*CreditNoteReference) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{23}
}

func (x *CreditNoteReference) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *CreditNoteReference) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreditNoteReference) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *CreditNoteReference) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *CreditNoteReference) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *CreditNoteReference) GetCreditNoteId() uint64 {
	if x != nil {
		return x.CreditNoteId
	}
	return 0
}

func (x *CreditNoteReference) GetSalesReturnId() uint64 {
	if x != nil {
		return x.SalesReturnId
	}
	return 0
}

// Describes the message consisting of the list of credit note references
type CreditNoteReferencesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*CreditNoteReference `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteReferencesList) Reset() {
	*x = CreditNoteReferencesList{}
	mi := &file_credit_notes_scailo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteReferencesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteReferencesList) ProtoMessage() {}

func (x *CreditNoteReferencesList) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteReferencesList.ProtoReflect.Descriptor instead.
func (*CreditNoteReferencesList) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{24}
}

func (x *CreditNoteReferencesList) GetList() []*CreditNoteReference {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the returned statistics of the credit note
type CreditNoteReturnStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the ID of the family
	FamilyId uint64 `protobuf:"varint,1,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the billed quantity
	BilledQuantity uint64 `protobuf:"varint,2,opt,name=billed_quantity,json=billedQuantity,proto3" json:"billed_quantity,omitempty"`
	// Stores the returned quantity
	ReturnedQuantity uint64 `protobuf:"varint,3,opt,name=returned_quantity,json=returnedQuantity,proto3" json:"returned_quantity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreditNoteReturnStatistics) Reset() {
	*x = CreditNoteReturnStatistics{}
	mi := &file_credit_notes_scailo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteReturnStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteReturnStatistics) ProtoMessage() {}

func (x *CreditNoteReturnStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteReturnStatistics.ProtoReflect.Descriptor instead.
func (*CreditNoteReturnStatistics) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{25}
}

func (x *CreditNoteReturnStatistics) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *CreditNoteReturnStatistics) GetBilledQuantity() uint64 {
	if x != nil {
		return x.BilledQuantity
	}
	return 0
}

func (x *CreditNoteReturnStatistics) GetReturnedQuantity() uint64 {
	if x != nil {
		return x.ReturnedQuantity
	}
	return 0
}

// Describes the list of returned statistics of the credit note
type CreditNoteReturnStatisticsList struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	List          []*CreditNoteReturnStatistics `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditNoteReturnStatisticsList) Reset() {
	*x = CreditNoteReturnStatisticsList{}
	mi := &file_credit_notes_scailo_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditNoteReturnStatisticsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditNoteReturnStatisticsList) ProtoMessage() {}

func (x *CreditNoteReturnStatisticsList) ProtoReflect() protoreflect.Message {
	mi := &file_credit_notes_scailo_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditNoteReturnStatisticsList.ProtoReflect.Descriptor instead.
func (*CreditNoteReturnStatisticsList) Descriptor() ([]byte, []int) {
	return file_credit_notes_scailo_proto_rawDescGZIP(), []int{26}
}

func (x *CreditNoteReturnStatisticsList) GetList() []*CreditNoteReturnStatistics {
	if x != nil {
		return x.List
	}
	return nil
}

var File_credit_notes_scailo_proto protoreflect.FileDescriptor

const file_credit_notes_scailo_proto_rawDesc = "" +
	"\n" +
	"\x19credit_notes.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x15families.scailo.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\xcf\x04\n" +
	"\x1fCreditNotesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x127\n" +
	"\bref_from\x18\f \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x12/\n" +
	"\x0fbank_account_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02 \x00R\rbankAccountId\x126\n" +
	"\x12miscellaneous_cost\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11miscellaneousCost\x122\n" +
	"\x10overall_discount\x18\x11 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\x91\x04\n" +
	"\x1fCreditNotesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x12/\n" +
	"\x0fbank_account_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02 \x00R\rbankAccountId\x126\n" +
	"\x12miscellaneous_cost\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\x11miscellaneousCost\x122\n" +
	"\x10overall_discount\x18\x11 \x01(\x04B\a\xbaH\x042\x02(\x00R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"d\n" +
	"!CreditNotesServiceAutofillRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\"a\n" +
	"\x1dCreditNoteAncillaryParameters\x12\x1a\n" +
	"\bref_uuid\x18\xd5\x01 \x01(\tR\arefUuid\x12$\n" +
	"\rcurrency_uuid\x18\xd6\x01 \x01(\tR\fcurrencyUuid\"\xc1\x06\n" +
	"\n" +
	"CreditNote\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x127\n" +
	"\bref_from\x18\f \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\r \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x0e \x01(\x04R\n" +
	"currencyId\x12&\n" +
	"\x0fbank_account_id\x18\x0f \x01(\x04R\rbankAccountId\x12-\n" +
	"\x12miscellaneous_cost\x18\x10 \x01(\x04R\x11miscellaneousCost\x12)\n" +
	"\x10overall_discount\x18\x11 \x01(\x04R\x0foverallDiscount\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12\x1f\n" +
	"\vtotal_value\x18\x14 \x01(\x01R\n" +
	"totalValue\x12*\n" +
	"\x04list\x18\x1e \x03(\v2\x16.Scailo.CreditNoteItemR\x04list\x123\n" +
	"\tform_data\x18( \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"\xf8\x03\n" +
	"#CreditNotesServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12-\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fcreditNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rclient_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vclientUomId\x120\n" +
	"\x0fclient_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0eclientQuantity\x12,\n" +
	"\x12client_family_code\x18\x0f \x01(\tR\x10clientFamilyCode\x12&\n" +
	"\n" +
	"unit_price\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\tunitPrice\x12)\n" +
	"\ftax_group_id\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x13 \x01(\tR\x0especifications\"\xab\x03\n" +
	"(CreditNotesServiceMultipleItemsSingleton\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rclient_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vclientUomId\x120\n" +
	"\x0fclient_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0eclientQuantity\x12,\n" +
	"\x12client_family_code\x18\x0f \x01(\tR\x10clientFamilyCode\x12&\n" +
	"\n" +
	"unit_price\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\tunitPrice\x12)\n" +
	"\ftax_group_id\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x13 \x01(\tR\x0especifications\"\xc6\x01\n" +
	",CreditNotesServiceMultipleItemsCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12-\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fcreditNoteId\x12D\n" +
	"\x04list\x18\v \x03(\v20.Scailo.CreditNotesServiceMultipleItemsSingletonR\x04list\"\xbc\x03\n" +
	"#CreditNotesServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12+\n" +
	"\rclient_uom_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vclientUomId\x120\n" +
	"\x0fclient_quantity\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\x0eclientQuantity\x12,\n" +
	"\x12client_family_code\x18\x0f \x01(\tR\x10clientFamilyCode\x12&\n" +
	"\n" +
	"unit_price\x18\x10 \x01(\x04B\a\xbaH\x042\x02(\x00R\tunitPrice\x12)\n" +
	"\ftax_group_id\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x13 \x01(\tR\x0especifications\"\xe7\x04\n" +
	"\x0eCreditNoteItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12$\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04R\fcreditNoteId\x12\x1b\n" +
	"\tfamily_id\x18\v \x01(\x04R\bfamilyId\x12+\n" +
	"\x11internal_quantity\x18\f \x01(\x04R\x10internalQuantity\x12\"\n" +
	"\rclient_uom_id\x18\r \x01(\x04R\vclientUomId\x12'\n" +
	"\x0fclient_quantity\x18\x0e \x01(\x04R\x0eclientQuantity\x12,\n" +
	"\x12client_family_code\x18\x0f \x01(\tR\x10clientFamilyCode\x12\x1d\n" +
	"\n" +
	"unit_price\x18\x10 \x01(\x04R\tunitPrice\x12 \n" +
	"\ftax_group_id\x18\x11 \x01(\x04R\n" +
	"taxGroupId\x12\x1b\n" +
	"\tround_off\x18\x12 \x01(\x03R\broundOff\x12&\n" +
	"\x0especifications\x18\x13 \x01(\tR\x0especifications\"9\n" +
	"\x0fCreditNotesList\x12&\n" +
	"\x04list\x18\x01 \x03(\v2\x12.Scailo.CreditNoteR\x04list\"A\n" +
	"\x13CreditNoteItemsList\x12*\n" +
	"\x04list\x18\x01 \x03(\v2\x16.Scailo.CreditNoteItemR\x04list\"s\n" +
	"\x1cCreditNoteItemHistoryRequest\x12-\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fcreditNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"{\n" +
	"$CreditNoteItemProspectiveInfoRequest\x12-\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fcreditNoteId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xb7\x01\n" +
	"6CreditNotesServiceAlreadyAddedQuantityForSourceRequest\x127\n" +
	"\bref_from\x18\x01 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12$\n" +
	"\tfamily_id\x18\x03 \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xe7\x05\n" +
	"\x1cCreditNoteItemsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12<\n" +
	"\bsort_key\x18\x05 \x01(\x0e2!.Scailo.CREDIT_NOTE_ITEM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x127\n" +
	"\x06status\x18\a \x01(\x0e2\x1f.Scailo.CREDIT_NOTE_ITEM_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12$\n" +
	"\x0ecredit_note_id\x18\x14 \x01(\x04R\fcreditNoteId\x12\x1b\n" +
	"\tfamily_id\x18\x15 \x01(\x04R\bfamilyId\x12\"\n" +
	"\rclient_uom_id\x18\x17 \x01(\x04R\vclientUomId\x12,\n" +
	"\x12client_family_code\x18\x19 \x01(\tR\x10clientFamilyCode\x12 \n" +
	"\ftax_group_id\x18\x1b \x01(\x04R\n" +
	"taxGroupId\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xa0\x01\n" +
	"(CreditNotesServicePaginatedItemsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x120\n" +
	"\apayload\x18\x04 \x03(\v2\x16.Scailo.CreditNoteItemR\apayload\"\xba\x02\n" +
	"\x1fCreditNotesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x98\x01\n" +
	"$CreditNotesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12,\n" +
	"\apayload\x18\x04 \x03(\v2\x12.Scailo.CreditNoteR\apayload\"\xe2\n" +
	"\n" +
	"\x1bCreditNotesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x127\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x18 \x01(\x04R\n" +
	"currencyId\x12&\n" +
	"\x0fbank_account_id\x18\x19 \x01(\x04R\rbankAccountId\x12\x1b\n" +
	"\tfamily_id\x18( \x01(\x04R\bfamilyId\x12.\n" +
	"\x13consignee_client_id\x182 \x01(\x04R\x11consigneeClientId\x12&\n" +
	"\x0fbuyer_client_id\x183 \x01(\x04R\rbuyerClientId\x12\x1d\n" +
	"\n" +
	"project_id\x184 \x01(\x04R\tprojectId\x12&\n" +
	"\x0ftotal_value_min\x18F \x01(\x04R\rtotalValueMin\x12&\n" +
	"\x0ftotal_value_max\x18G \x01(\x04R\rtotalValueMax\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xac\t\n" +
	"\x1aCreditNotesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x127\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x18 \x01(\x04R\n" +
	"currencyId\x12&\n" +
	"\x0fbank_account_id\x18\x19 \x01(\x04R\rbankAccountId\x12\x1b\n" +
	"\tfamily_id\x18( \x01(\x04R\bfamilyId\x12.\n" +
	"\x13consignee_client_id\x182 \x01(\x04R\x11consigneeClientId\x12&\n" +
	"\x0fbuyer_client_id\x183 \x01(\x04R\rbuyerClientId\x12\x1d\n" +
	"\n" +
	"project_id\x184 \x01(\x04R\tprojectId\x12&\n" +
	"\x0ftotal_value_min\x18F \x01(\x04R\rtotalValueMin\x12&\n" +
	"\x0ftotal_value_max\x18G \x01(\x04R\rtotalValueMax\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xaa\x04\n" +
	"\x1eCreditNotesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x127\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1c.Scailo.CREDIT_NOTE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12.\n" +
	"\x13consignee_client_id\x182 \x01(\x04R\x11consigneeClientId\x12&\n" +
	"\x0fbuyer_client_id\x183 \x01(\x04R\rbuyerClientId\"\xad\x01\n" +
	"(CreditNotesServiceReferenceCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12-\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\fcreditNoteId\x12/\n" +
	"\x0fsales_return_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\rsalesReturnId\"\xc9\x02\n" +
	"\x13CreditNoteReference\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12$\n" +
	"\x0ecredit_note_id\x18\n" +
	" \x01(\x04R\fcreditNoteId\x12&\n" +
	"\x0fsales_return_id\x18\v \x01(\x04R\rsalesReturnId\"K\n" +
	"\x18CreditNoteReferencesList\x12/\n" +
	"\x04list\x18\x01 \x03(\v2\x1b.Scailo.CreditNoteReferenceR\x04list\"\x8f\x01\n" +
	"\x1aCreditNoteReturnStatistics\x12\x1b\n" +
	"\tfamily_id\x18\x01 \x01(\x04R\bfamilyId\x12'\n" +
	"\x0fbilled_quantity\x18\x02 \x01(\x04R\x0ebilledQuantity\x12+\n" +
	"\x11returned_quantity\x18\x03 \x01(\x04R\x10returnedQuantity\"X\n" +
	"\x1eCreditNoteReturnStatisticsList\x126\n" +
	"\x04list\x18\x01 \x03(\v2\".Scailo.CreditNoteReturnStatisticsR\x04list*f\n" +
	"\x14CREDIT_NOTE_REF_FROM\x12(\n" +
	"$CREDIT_NOTE_REF_FROM_ANY_UNSPECIFIED\x10\x00\x12$\n" +
	" CREDIT_NOTE_REF_FROM_SALES_ORDER\x10\x01*\xe2\x04\n" +
	"\x19CREDIT_NOTE_ITEM_SORT_KEY\x12,\n" +
	"(CREDIT_NOTE_ITEM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12(\n" +
	"$CREDIT_NOTE_ITEM_SORT_KEY_CREATED_AT\x10\x01\x12)\n" +
	"%CREDIT_NOTE_ITEM_SORT_KEY_MODIFIED_AT\x10\x02\x12)\n" +
	"%CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_ON\x10\x03\x12)\n" +
	"%CREDIT_NOTE_ITEM_SORT_KEY_APPROVED_BY\x10\x04\x12.\n" +
	"*CREDIT_NOTE_ITEM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12'\n" +
	"#CREDIT_NOTE_ITEM_SORT_KEY_FAMILY_ID\x10\n" +
	"\x12/\n" +
	"+CREDIT_NOTE_ITEM_SORT_KEY_INTERNAL_QUANTITY\x10\v\x12+\n" +
	"'CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_UOM_ID\x10\f\x12-\n" +
	")CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_QUANTITY\x10\r\x120\n" +
	",CREDIT_NOTE_ITEM_SORT_KEY_CLIENT_FAMILY_CODE\x10\x0e\x12(\n" +
	"$CREDIT_NOTE_ITEM_SORT_KEY_UNIT_PRICE\x10\x0f\x12*\n" +
	"&CREDIT_NOTE_ITEM_SORT_KEY_TAX_GROUP_ID\x10\x10*\x94\x01\n" +
	"\x17CREDIT_NOTE_ITEM_STATUS\x12+\n" +
	"'CREDIT_NOTE_ITEM_STATUS_ANY_UNSPECIFIED\x10\x00\x12$\n" +
	" CREDIT_NOTE_ITEM_STATUS_APPROVED\x10\x01\x12&\n" +
	"\"CREDIT_NOTE_ITEM_STATUS_UNAPPROVED\x10\x02*\xa0\x03\n" +
	"\x14CREDIT_NOTE_SORT_KEY\x12'\n" +
	"#CREDIT_NOTE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fCREDIT_NOTE_SORT_KEY_CREATED_AT\x10\x01\x12$\n" +
	" CREDIT_NOTE_SORT_KEY_MODIFIED_AT\x10\x02\x12$\n" +
	" CREDIT_NOTE_SORT_KEY_APPROVED_ON\x10\x03\x12$\n" +
	" CREDIT_NOTE_SORT_KEY_APPROVED_BY\x10\x04\x12)\n" +
	"%CREDIT_NOTE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12%\n" +
	"!CREDIT_NOTE_SORT_KEY_COMPLETED_ON\x10\x06\x12%\n" +
	"!CREDIT_NOTE_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12)\n" +
	"%CREDIT_NOTE_SORT_KEY_FINAL_REF_NUMBER\x10\v\x12$\n" +
	" CREDIT_NOTE_SORT_KEY_TOTAL_VALUE\x10\x1e2\xf7(\n" +
	"\x12CreditNotesService\x12M\n" +
	"\x06Create\x12'.Scailo.CreditNotesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\x05Draft\x12'.Scailo.CreditNotesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\vDraftUpdate\x12'.Scailo.CreditNotesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x0eRevisionUpdate\x12'.Scailo.CreditNotesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\bAutofill\x12).Scailo.CreditNotesServiceAutofillRequest\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12n\n" +
	"\x1aAddMultipleCreditNoteItems\x124.Scailo.CreditNotesServiceMultipleItemsCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12\\\n" +
	"\x11AddCreditNoteItem\x12+.Scailo.CreditNotesServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x14ModifyCreditNoteItem\x12+.Scailo.CreditNotesServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12V\n" +
	"\x15ApproveCreditNoteItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x14DeleteCreditNoteItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\x16ReorderCreditNoteItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12D\n" +
	"\x16ViewCreditNoteItemByID\x12\x12.Scailo.Identifier\x1a\x16.Scailo.CreditNoteItem\x12[\n" +
	"\x1bViewApprovedCreditNoteItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1b.Scailo.CreditNoteItemsList\x12]\n" +
	"\x1dViewUnapprovedCreditNoteItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1b.Scailo.CreditNoteItemsList\x12^\n" +
	"\x19ViewCreditNoteItemHistory\x12$.Scailo.CreditNoteItemHistoryRequest\x1a\x1b.Scailo.CreditNoteItemsList\x12~\n" +
	"$ViewPaginatedApprovedCreditNoteItems\x12$.Scailo.CreditNoteItemsSearchRequest\x1a0.Scailo.CreditNotesServicePaginatedItemsResponse\x12\x80\x01\n" +
	"&ViewPaginatedUnapprovedCreditNoteItems\x12$.Scailo.CreditNoteItemsSearchRequest\x1a0.Scailo.CreditNotesServicePaginatedItemsResponse\x12s\n" +
	"\x19SearchItemsWithPagination\x12$.Scailo.CreditNoteItemsSearchRequest\x1a0.Scailo.CreditNotesServicePaginatedItemsResponse\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12P\n" +
	"\x15UploadCreditNoteItems\x12\x1e.Scailo.IdentifierUUIDWithFile\x1a\x17.Scailo.IdentifiersList\x12f\n" +
	"\x16AddCreditNoteReference\x120.Scailo.CreditNotesServiceReferenceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12[\n" +
	"\x1aApproveCreditNoteReference\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Z\n" +
	"\x19DeleteCreditNoteReference\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\x1bViewCreditNoteReferenceByID\x12\x12.Scailo.Identifier\x1a\x1b.Scailo.CreditNoteReference\x12P\n" +
	"\x18ViewCreditNoteReferences\x12\x12.Scailo.Identifier\x1a .Scailo.CreditNoteReferencesList\x122\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.CreditNote\x128\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.CreditNote\x12@\n" +
	"\x11ViewByReferenceID\x12\x17.Scailo.SimpleSearchReq\x1a\x12.Scailo.CreditNote\x12;\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.CreditNote\x12A\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x12.Scailo.CreditNote\x12?\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x17.Scailo.CreditNotesList\x12^\n" +
	"\x1dViewAncillaryParametersByUUID\x12\x16.Scailo.IdentifierUUID\x1a%.Scailo.CreditNoteAncillaryParameters\x128\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x17.Scailo.CreditNotesList\x12G\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.CreditNotesList\x12k\n" +
	"\x12ViewWithPagination\x12'.Scailo.CreditNotesServicePaginationReq\x1a,.Scailo.CreditNotesServicePaginationResponse\x12P\n" +
	"\x17ViewProspectiveFamilies\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x14.Scailo.FamiliesList\x12Y\n" +
	"\x19FilterProspectiveFamilies\x12&.Scailo.FilterFamiliesReqForIdentifier\x1a\x14.Scailo.FamiliesList\x12z\n" +
	"\x1dViewProspectiveCreditNoteItem\x12,.Scailo.CreditNoteItemProspectiveInfoRequest\x1a+.Scailo.CreditNotesServiceItemCreateRequest\x12X\n" +
	"\x16ViewReturnedStatistics\x12\x16.Scailo.IdentifierUUID\x1a&.Scailo.CreditNoteReturnStatisticsList\x12A\n" +
	"\x0eIsDownloadable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12>\n" +
	"\x0eDownloadByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12\x82\x01\n" +
	" ViewAddedFamilyQuantityForSource\x12>.Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest\x1a\x1e.Scailo.DualQuantitiesResponse\x12L\n" +
	"\tSearchAll\x12&.Scailo.CreditNotesServiceSearchAllReq\x1a\x17.Scailo.CreditNotesList\x12F\n" +
	"\x06Filter\x12#.Scailo.CreditNotesServiceFilterReq\x1a\x17.Scailo.CreditNotesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12B\n" +
	"\x05Count\x12\".Scailo.CreditNotesServiceCountReq\x1a\x15.Scailo.CountResponse\x12G\n" +
	"\fAccruedValue\x12\".Scailo.CreditNotesServiceCountReq\x1a\x13.Scailo.SumResponse\x12J\n" +
	"\rDownloadAsCSV\x12#.Scailo.CreditNotesServiceFilterReq\x1a\x14.Scailo.StandardFileBh\n" +
	"\n" +
	"com.ScailoB\x16CreditNotesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_credit_notes_scailo_proto_rawDescOnce sync.Once
	file_credit_notes_scailo_proto_rawDescData []byte
)

func file_credit_notes_scailo_proto_rawDescGZIP() []byte {
	file_credit_notes_scailo_proto_rawDescOnce.Do(func() {
		file_credit_notes_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_credit_notes_scailo_proto_rawDesc), len(file_credit_notes_scailo_proto_rawDesc)))
	})
	return file_credit_notes_scailo_proto_rawDescData
}

var file_credit_notes_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_credit_notes_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_credit_notes_scailo_proto_goTypes = []any{
	(CREDIT_NOTE_REF_FROM)(0),                                      // 0: Scailo.CREDIT_NOTE_REF_FROM
	(CREDIT_NOTE_ITEM_SORT_KEY)(0),                                 // 1: Scailo.CREDIT_NOTE_ITEM_SORT_KEY
	(CREDIT_NOTE_ITEM_STATUS)(0),                                   // 2: Scailo.CREDIT_NOTE_ITEM_STATUS
	(CREDIT_NOTE_SORT_KEY)(0),                                      // 3: Scailo.CREDIT_NOTE_SORT_KEY
	(*CreditNotesServiceCreateRequest)(nil),                        // 4: Scailo.CreditNotesServiceCreateRequest
	(*CreditNotesServiceUpdateRequest)(nil),                        // 5: Scailo.CreditNotesServiceUpdateRequest
	(*CreditNotesServiceAutofillRequest)(nil),                      // 6: Scailo.CreditNotesServiceAutofillRequest
	(*CreditNoteAncillaryParameters)(nil),                          // 7: Scailo.CreditNoteAncillaryParameters
	(*CreditNote)(nil),                                             // 8: Scailo.CreditNote
	(*CreditNotesServiceItemCreateRequest)(nil),                    // 9: Scailo.CreditNotesServiceItemCreateRequest
	(*CreditNotesServiceMultipleItemsSingleton)(nil),               // 10: Scailo.CreditNotesServiceMultipleItemsSingleton
	(*CreditNotesServiceMultipleItemsCreateRequest)(nil),           // 11: Scailo.CreditNotesServiceMultipleItemsCreateRequest
	(*CreditNotesServiceItemUpdateRequest)(nil),                    // 12: Scailo.CreditNotesServiceItemUpdateRequest
	(*CreditNoteItem)(nil),                                         // 13: Scailo.CreditNoteItem
	(*CreditNotesList)(nil),                                        // 14: Scailo.CreditNotesList
	(*CreditNoteItemsList)(nil),                                    // 15: Scailo.CreditNoteItemsList
	(*CreditNoteItemHistoryRequest)(nil),                           // 16: Scailo.CreditNoteItemHistoryRequest
	(*CreditNoteItemProspectiveInfoRequest)(nil),                   // 17: Scailo.CreditNoteItemProspectiveInfoRequest
	(*CreditNotesServiceAlreadyAddedQuantityForSourceRequest)(nil), // 18: Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest
	(*CreditNoteItemsSearchRequest)(nil),                           // 19: Scailo.CreditNoteItemsSearchRequest
	(*CreditNotesServicePaginatedItemsResponse)(nil),               // 20: Scailo.CreditNotesServicePaginatedItemsResponse
	(*CreditNotesServicePaginationReq)(nil),                        // 21: Scailo.CreditNotesServicePaginationReq
	(*CreditNotesServicePaginationResponse)(nil),                   // 22: Scailo.CreditNotesServicePaginationResponse
	(*CreditNotesServiceFilterReq)(nil),                            // 23: Scailo.CreditNotesServiceFilterReq
	(*CreditNotesServiceCountReq)(nil),                             // 24: Scailo.CreditNotesServiceCountReq
	(*CreditNotesServiceSearchAllReq)(nil),                         // 25: Scailo.CreditNotesServiceSearchAllReq
	(*CreditNotesServiceReferenceCreateRequest)(nil),               // 26: Scailo.CreditNotesServiceReferenceCreateRequest
	(*CreditNoteReference)(nil),                                    // 27: Scailo.CreditNoteReference
	(*CreditNoteReferencesList)(nil),                               // 28: Scailo.CreditNoteReferencesList
	(*CreditNoteReturnStatistics)(nil),                             // 29: Scailo.CreditNoteReturnStatistics
	(*CreditNoteReturnStatisticsList)(nil),                         // 30: Scailo.CreditNoteReturnStatisticsList
	(*FormFieldDatumCreateRequest)(nil),                            // 31: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                       // 32: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                       // 33: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                                 // 34: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                                   // 35: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                         // 36: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                               // 37: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                                // 38: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                            // 39: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                          // 40: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),                          // 41: Scailo.IdentifierWithEmailAttributes
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil),      // 42: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*IdentifierWithUserComment)(nil),                              // 43: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                                    // 44: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                             // 45: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                                // 46: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                                         // 47: Scailo.IdentifierUUID
	(*Empty)(nil),                                                  // 48: Scailo.Empty
	(*IdentifierUUIDWithFile)(nil),                                 // 49: Scailo.IdentifierUUIDWithFile
	(*SimpleSearchReq)(nil),                                        // 50: Scailo.SimpleSearchReq
	(*IdentifiersList)(nil),                                        // 51: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                           // 52: Scailo.ActiveStatus
	(*FilterFamiliesReqForIdentifier)(nil),                         // 53: Scailo.FilterFamiliesReqForIdentifier
	(*CountInSLCStatusRequest)(nil),                                // 54: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                     // 55: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                              // 56: Scailo.MagicLink
	(*StandardFile)(nil),                                           // 57: Scailo.StandardFile
	(*FamiliesList)(nil),                                           // 58: Scailo.FamiliesList
	(*BooleanResponse)(nil),                                        // 59: Scailo.BooleanResponse
	(*DualQuantitiesResponse)(nil),                                 // 60: Scailo.DualQuantitiesResponse
	(*CountResponse)(nil),                                          // 61: Scailo.CountResponse
	(*SumResponse)(nil),                                            // 62: Scailo.SumResponse
}
var file_credit_notes_scailo_proto_depIdxs = []int32{
	0,   // 0: Scailo.CreditNotesServiceCreateRequest.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	31,  // 1: Scailo.CreditNotesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	31,  // 2: Scailo.CreditNotesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	32,  // 3: Scailo.CreditNote.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 4: Scailo.CreditNote.approval_metadata:type_name -> Scailo.ApprovalMetadata
	34,  // 5: Scailo.CreditNote.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	35,  // 6: Scailo.CreditNote.logs:type_name -> Scailo.LogbookLogConciseSLC
	0,   // 7: Scailo.CreditNote.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	13,  // 8: Scailo.CreditNote.list:type_name -> Scailo.CreditNoteItem
	36,  // 9: Scailo.CreditNote.form_data:type_name -> Scailo.FormFieldDatum
	10,  // 10: Scailo.CreditNotesServiceMultipleItemsCreateRequest.list:type_name -> Scailo.CreditNotesServiceMultipleItemsSingleton
	32,  // 11: Scailo.CreditNoteItem.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 12: Scailo.CreditNoteItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	8,   // 13: Scailo.CreditNotesList.list:type_name -> Scailo.CreditNote
	13,  // 14: Scailo.CreditNoteItemsList.list:type_name -> Scailo.CreditNoteItem
	0,   // 15: Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	37,  // 16: Scailo.CreditNoteItemsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 17: Scailo.CreditNoteItemsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	1,   // 18: Scailo.CreditNoteItemsSearchRequest.sort_key:type_name -> Scailo.CREDIT_NOTE_ITEM_SORT_KEY
	2,   // 19: Scailo.CreditNoteItemsSearchRequest.status:type_name -> Scailo.CREDIT_NOTE_ITEM_STATUS
	13,  // 20: Scailo.CreditNotesServicePaginatedItemsResponse.payload:type_name -> Scailo.CreditNoteItem
	37,  // 21: Scailo.CreditNotesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 22: Scailo.CreditNotesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 23: Scailo.CreditNotesServicePaginationReq.sort_key:type_name -> Scailo.CREDIT_NOTE_SORT_KEY
	34,  // 24: Scailo.CreditNotesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	8,   // 25: Scailo.CreditNotesServicePaginationResponse.payload:type_name -> Scailo.CreditNote
	37,  // 26: Scailo.CreditNotesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 27: Scailo.CreditNotesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 28: Scailo.CreditNotesServiceFilterReq.sort_key:type_name -> Scailo.CREDIT_NOTE_SORT_KEY
	34,  // 29: Scailo.CreditNotesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 30: Scailo.CreditNotesServiceFilterReq.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	39,  // 31: Scailo.CreditNotesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	37,  // 32: Scailo.CreditNotesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	34,  // 33: Scailo.CreditNotesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 34: Scailo.CreditNotesServiceCountReq.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	39,  // 35: Scailo.CreditNotesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	37,  // 36: Scailo.CreditNotesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	38,  // 37: Scailo.CreditNotesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	3,   // 38: Scailo.CreditNotesServiceSearchAllReq.sort_key:type_name -> Scailo.CREDIT_NOTE_SORT_KEY
	34,  // 39: Scailo.CreditNotesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 40: Scailo.CreditNotesServiceSearchAllReq.ref_from:type_name -> Scailo.CREDIT_NOTE_REF_FROM
	32,  // 41: Scailo.CreditNoteReference.metadata:type_name -> Scailo.EmployeeMetadata
	33,  // 42: Scailo.CreditNoteReference.approval_metadata:type_name -> Scailo.ApprovalMetadata
	27,  // 43: Scailo.CreditNoteReferencesList.list:type_name -> Scailo.CreditNoteReference
	29,  // 44: Scailo.CreditNoteReturnStatisticsList.list:type_name -> Scailo.CreditNoteReturnStatistics
	4,   // 45: Scailo.CreditNotesService.Create:input_type -> Scailo.CreditNotesServiceCreateRequest
	4,   // 46: Scailo.CreditNotesService.Draft:input_type -> Scailo.CreditNotesServiceCreateRequest
	5,   // 47: Scailo.CreditNotesService.DraftUpdate:input_type -> Scailo.CreditNotesServiceUpdateRequest
	40,  // 48: Scailo.CreditNotesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 49: Scailo.CreditNotesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 50: Scailo.CreditNotesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 51: Scailo.CreditNotesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	5,   // 52: Scailo.CreditNotesService.RevisionUpdate:input_type -> Scailo.CreditNotesServiceUpdateRequest
	40,  // 53: Scailo.CreditNotesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 54: Scailo.CreditNotesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 55: Scailo.CreditNotesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 56: Scailo.CreditNotesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 57: Scailo.CreditNotesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 58: Scailo.CreditNotesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	40,  // 59: Scailo.CreditNotesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	41,  // 60: Scailo.CreditNotesService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	6,   // 61: Scailo.CreditNotesService.Autofill:input_type -> Scailo.CreditNotesServiceAutofillRequest
	42,  // 62: Scailo.CreditNotesService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	11,  // 63: Scailo.CreditNotesService.AddMultipleCreditNoteItems:input_type -> Scailo.CreditNotesServiceMultipleItemsCreateRequest
	9,   // 64: Scailo.CreditNotesService.AddCreditNoteItem:input_type -> Scailo.CreditNotesServiceItemCreateRequest
	12,  // 65: Scailo.CreditNotesService.ModifyCreditNoteItem:input_type -> Scailo.CreditNotesServiceItemUpdateRequest
	43,  // 66: Scailo.CreditNotesService.ApproveCreditNoteItem:input_type -> Scailo.IdentifierWithUserComment
	43,  // 67: Scailo.CreditNotesService.DeleteCreditNoteItem:input_type -> Scailo.IdentifierWithUserComment
	44,  // 68: Scailo.CreditNotesService.ReorderCreditNoteItems:input_type -> Scailo.ReorderItemsRequest
	45,  // 69: Scailo.CreditNotesService.ViewCreditNoteItemByID:input_type -> Scailo.Identifier
	46,  // 70: Scailo.CreditNotesService.ViewApprovedCreditNoteItems:input_type -> Scailo.IdentifierWithSearchKey
	46,  // 71: Scailo.CreditNotesService.ViewUnapprovedCreditNoteItems:input_type -> Scailo.IdentifierWithSearchKey
	16,  // 72: Scailo.CreditNotesService.ViewCreditNoteItemHistory:input_type -> Scailo.CreditNoteItemHistoryRequest
	19,  // 73: Scailo.CreditNotesService.ViewPaginatedApprovedCreditNoteItems:input_type -> Scailo.CreditNoteItemsSearchRequest
	19,  // 74: Scailo.CreditNotesService.ViewPaginatedUnapprovedCreditNoteItems:input_type -> Scailo.CreditNoteItemsSearchRequest
	19,  // 75: Scailo.CreditNotesService.SearchItemsWithPagination:input_type -> Scailo.CreditNoteItemsSearchRequest
	47,  // 76: Scailo.CreditNotesService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	48,  // 77: Scailo.CreditNotesService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	49,  // 78: Scailo.CreditNotesService.UploadCreditNoteItems:input_type -> Scailo.IdentifierUUIDWithFile
	26,  // 79: Scailo.CreditNotesService.AddCreditNoteReference:input_type -> Scailo.CreditNotesServiceReferenceCreateRequest
	43,  // 80: Scailo.CreditNotesService.ApproveCreditNoteReference:input_type -> Scailo.IdentifierWithUserComment
	43,  // 81: Scailo.CreditNotesService.DeleteCreditNoteReference:input_type -> Scailo.IdentifierWithUserComment
	45,  // 82: Scailo.CreditNotesService.ViewCreditNoteReferenceByID:input_type -> Scailo.Identifier
	45,  // 83: Scailo.CreditNotesService.ViewCreditNoteReferences:input_type -> Scailo.Identifier
	45,  // 84: Scailo.CreditNotesService.ViewByID:input_type -> Scailo.Identifier
	47,  // 85: Scailo.CreditNotesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	50,  // 86: Scailo.CreditNotesService.ViewByReferenceID:input_type -> Scailo.SimpleSearchReq
	45,  // 87: Scailo.CreditNotesService.ViewEssentialByID:input_type -> Scailo.Identifier
	47,  // 88: Scailo.CreditNotesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	51,  // 89: Scailo.CreditNotesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	47,  // 90: Scailo.CreditNotesService.ViewAncillaryParametersByUUID:input_type -> Scailo.IdentifierUUID
	52,  // 91: Scailo.CreditNotesService.ViewAll:input_type -> Scailo.ActiveStatus
	47,  // 92: Scailo.CreditNotesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	21,  // 93: Scailo.CreditNotesService.ViewWithPagination:input_type -> Scailo.CreditNotesServicePaginationReq
	46,  // 94: Scailo.CreditNotesService.ViewProspectiveFamilies:input_type -> Scailo.IdentifierWithSearchKey
	53,  // 95: Scailo.CreditNotesService.FilterProspectiveFamilies:input_type -> Scailo.FilterFamiliesReqForIdentifier
	17,  // 96: Scailo.CreditNotesService.ViewProspectiveCreditNoteItem:input_type -> Scailo.CreditNoteItemProspectiveInfoRequest
	47,  // 97: Scailo.CreditNotesService.ViewReturnedStatistics:input_type -> Scailo.IdentifierUUID
	47,  // 98: Scailo.CreditNotesService.IsDownloadable:input_type -> Scailo.IdentifierUUID
	47,  // 99: Scailo.CreditNotesService.DownloadByUUID:input_type -> Scailo.IdentifierUUID
	18,  // 100: Scailo.CreditNotesService.ViewAddedFamilyQuantityForSource:input_type -> Scailo.CreditNotesServiceAlreadyAddedQuantityForSourceRequest
	25,  // 101: Scailo.CreditNotesService.SearchAll:input_type -> Scailo.CreditNotesServiceSearchAllReq
	23,  // 102: Scailo.CreditNotesService.Filter:input_type -> Scailo.CreditNotesServiceFilterReq
	54,  // 103: Scailo.CreditNotesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	24,  // 104: Scailo.CreditNotesService.Count:input_type -> Scailo.CreditNotesServiceCountReq
	24,  // 105: Scailo.CreditNotesService.AccruedValue:input_type -> Scailo.CreditNotesServiceCountReq
	23,  // 106: Scailo.CreditNotesService.DownloadAsCSV:input_type -> Scailo.CreditNotesServiceFilterReq
	55,  // 107: Scailo.CreditNotesService.Create:output_type -> Scailo.IdentifierResponse
	55,  // 108: Scailo.CreditNotesService.Draft:output_type -> Scailo.IdentifierResponse
	55,  // 109: Scailo.CreditNotesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	55,  // 110: Scailo.CreditNotesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	55,  // 111: Scailo.CreditNotesService.Verify:output_type -> Scailo.IdentifierResponse
	55,  // 112: Scailo.CreditNotesService.Approve:output_type -> Scailo.IdentifierResponse
	55,  // 113: Scailo.CreditNotesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	55,  // 114: Scailo.CreditNotesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	55,  // 115: Scailo.CreditNotesService.Halt:output_type -> Scailo.IdentifierResponse
	55,  // 116: Scailo.CreditNotesService.Discard:output_type -> Scailo.IdentifierResponse
	55,  // 117: Scailo.CreditNotesService.Restore:output_type -> Scailo.IdentifierResponse
	55,  // 118: Scailo.CreditNotesService.Complete:output_type -> Scailo.IdentifierResponse
	55,  // 119: Scailo.CreditNotesService.Repeat:output_type -> Scailo.IdentifierResponse
	55,  // 120: Scailo.CreditNotesService.Reopen:output_type -> Scailo.IdentifierResponse
	55,  // 121: Scailo.CreditNotesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	55,  // 122: Scailo.CreditNotesService.SendEmail:output_type -> Scailo.IdentifierResponse
	55,  // 123: Scailo.CreditNotesService.Autofill:output_type -> Scailo.IdentifierResponse
	56,  // 124: Scailo.CreditNotesService.CreateMagicLink:output_type -> Scailo.MagicLink
	55,  // 125: Scailo.CreditNotesService.AddMultipleCreditNoteItems:output_type -> Scailo.IdentifierResponse
	55,  // 126: Scailo.CreditNotesService.AddCreditNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 127: Scailo.CreditNotesService.ModifyCreditNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 128: Scailo.CreditNotesService.ApproveCreditNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 129: Scailo.CreditNotesService.DeleteCreditNoteItem:output_type -> Scailo.IdentifierResponse
	55,  // 130: Scailo.CreditNotesService.ReorderCreditNoteItems:output_type -> Scailo.IdentifierResponse
	13,  // 131: Scailo.CreditNotesService.ViewCreditNoteItemByID:output_type -> Scailo.CreditNoteItem
	15,  // 132: Scailo.CreditNotesService.ViewApprovedCreditNoteItems:output_type -> Scailo.CreditNoteItemsList
	15,  // 133: Scailo.CreditNotesService.ViewUnapprovedCreditNoteItems:output_type -> Scailo.CreditNoteItemsList
	15,  // 134: Scailo.CreditNotesService.ViewCreditNoteItemHistory:output_type -> Scailo.CreditNoteItemsList
	20,  // 135: Scailo.CreditNotesService.ViewPaginatedApprovedCreditNoteItems:output_type -> Scailo.CreditNotesServicePaginatedItemsResponse
	20,  // 136: Scailo.CreditNotesService.ViewPaginatedUnapprovedCreditNoteItems:output_type -> Scailo.CreditNotesServicePaginatedItemsResponse
	20,  // 137: Scailo.CreditNotesService.SearchItemsWithPagination:output_type -> Scailo.CreditNotesServicePaginatedItemsResponse
	57,  // 138: Scailo.CreditNotesService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	57,  // 139: Scailo.CreditNotesService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	51,  // 140: Scailo.CreditNotesService.UploadCreditNoteItems:output_type -> Scailo.IdentifiersList
	55,  // 141: Scailo.CreditNotesService.AddCreditNoteReference:output_type -> Scailo.IdentifierResponse
	55,  // 142: Scailo.CreditNotesService.ApproveCreditNoteReference:output_type -> Scailo.IdentifierResponse
	55,  // 143: Scailo.CreditNotesService.DeleteCreditNoteReference:output_type -> Scailo.IdentifierResponse
	27,  // 144: Scailo.CreditNotesService.ViewCreditNoteReferenceByID:output_type -> Scailo.CreditNoteReference
	28,  // 145: Scailo.CreditNotesService.ViewCreditNoteReferences:output_type -> Scailo.CreditNoteReferencesList
	8,   // 146: Scailo.CreditNotesService.ViewByID:output_type -> Scailo.CreditNote
	8,   // 147: Scailo.CreditNotesService.ViewByUUID:output_type -> Scailo.CreditNote
	8,   // 148: Scailo.CreditNotesService.ViewByReferenceID:output_type -> Scailo.CreditNote
	8,   // 149: Scailo.CreditNotesService.ViewEssentialByID:output_type -> Scailo.CreditNote
	8,   // 150: Scailo.CreditNotesService.ViewEssentialByUUID:output_type -> Scailo.CreditNote
	14,  // 151: Scailo.CreditNotesService.ViewFromIDs:output_type -> Scailo.CreditNotesList
	7,   // 152: Scailo.CreditNotesService.ViewAncillaryParametersByUUID:output_type -> Scailo.CreditNoteAncillaryParameters
	14,  // 153: Scailo.CreditNotesService.ViewAll:output_type -> Scailo.CreditNotesList
	14,  // 154: Scailo.CreditNotesService.ViewAllForEntityUUID:output_type -> Scailo.CreditNotesList
	22,  // 155: Scailo.CreditNotesService.ViewWithPagination:output_type -> Scailo.CreditNotesServicePaginationResponse
	58,  // 156: Scailo.CreditNotesService.ViewProspectiveFamilies:output_type -> Scailo.FamiliesList
	58,  // 157: Scailo.CreditNotesService.FilterProspectiveFamilies:output_type -> Scailo.FamiliesList
	9,   // 158: Scailo.CreditNotesService.ViewProspectiveCreditNoteItem:output_type -> Scailo.CreditNotesServiceItemCreateRequest
	30,  // 159: Scailo.CreditNotesService.ViewReturnedStatistics:output_type -> Scailo.CreditNoteReturnStatisticsList
	59,  // 160: Scailo.CreditNotesService.IsDownloadable:output_type -> Scailo.BooleanResponse
	57,  // 161: Scailo.CreditNotesService.DownloadByUUID:output_type -> Scailo.StandardFile
	60,  // 162: Scailo.CreditNotesService.ViewAddedFamilyQuantityForSource:output_type -> Scailo.DualQuantitiesResponse
	14,  // 163: Scailo.CreditNotesService.SearchAll:output_type -> Scailo.CreditNotesList
	14,  // 164: Scailo.CreditNotesService.Filter:output_type -> Scailo.CreditNotesList
	61,  // 165: Scailo.CreditNotesService.CountInStatus:output_type -> Scailo.CountResponse
	61,  // 166: Scailo.CreditNotesService.Count:output_type -> Scailo.CountResponse
	62,  // 167: Scailo.CreditNotesService.AccruedValue:output_type -> Scailo.SumResponse
	57,  // 168: Scailo.CreditNotesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	107, // [107:169] is the sub-list for method output_type
	45,  // [45:107] is the sub-list for method input_type
	45,  // [45:45] is the sub-list for extension type_name
	45,  // [45:45] is the sub-list for extension extendee
	0,   // [0:45] is the sub-list for field type_name
}

func init() { file_credit_notes_scailo_proto_init() }
func file_credit_notes_scailo_proto_init() {
	if File_credit_notes_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_families_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_credit_notes_scailo_proto_rawDesc), len(file_credit_notes_scailo_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_credit_notes_scailo_proto_goTypes,
		DependencyIndexes: file_credit_notes_scailo_proto_depIdxs,
		EnumInfos:         file_credit_notes_scailo_proto_enumTypes,
		MessageInfos:      file_credit_notes_scailo_proto_msgTypes,
	}.Build()
	File_credit_notes_scailo_proto = out.File
	file_credit_notes_scailo_proto_goTypes = nil
	file_credit_notes_scailo_proto_depIdxs = nil
}
