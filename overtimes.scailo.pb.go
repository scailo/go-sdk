// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: overtimes.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type OVERTIME_SORT_KEY int32

const (
	// Fetch ordered results by id
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_ID_UNSPECIFIED OVERTIME_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_CREATED_AT OVERTIME_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_MODIFIED_AT OVERTIME_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_APPROVED_ON OVERTIME_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_APPROVED_BY OVERTIME_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_APPROVER_ROLE_ID OVERTIME_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_COMPLETED_ON OVERTIME_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_REFERENCE_ID OVERTIME_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_FINAL_REF_NUMBER OVERTIME_SORT_KEY = 11
	// Fetch ordered results by the user ID
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_USER_ID OVERTIME_SORT_KEY = 12
	// Fetch ordered results by the "from timestamp"
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_FROM_TIMESTAMP OVERTIME_SORT_KEY = 13
	// Fetch ordered results by the "to timestamp"
	OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_TO_TIMESTAMP OVERTIME_SORT_KEY = 14
)

// Enum value maps for OVERTIME_SORT_KEY.
var (
	OVERTIME_SORT_KEY_name = map[int32]string{
		0:  "OVERTIME_SORT_KEY_ID_UNSPECIFIED",
		1:  "OVERTIME_SORT_KEY_CREATED_AT",
		2:  "OVERTIME_SORT_KEY_MODIFIED_AT",
		3:  "OVERTIME_SORT_KEY_APPROVED_ON",
		4:  "OVERTIME_SORT_KEY_APPROVED_BY",
		5:  "OVERTIME_SORT_KEY_APPROVER_ROLE_ID",
		6:  "OVERTIME_SORT_KEY_COMPLETED_ON",
		10: "OVERTIME_SORT_KEY_REFERENCE_ID",
		11: "OVERTIME_SORT_KEY_FINAL_REF_NUMBER",
		12: "OVERTIME_SORT_KEY_USER_ID",
		13: "OVERTIME_SORT_KEY_FROM_TIMESTAMP",
		14: "OVERTIME_SORT_KEY_TO_TIMESTAMP",
	}
	OVERTIME_SORT_KEY_value = map[string]int32{
		"OVERTIME_SORT_KEY_ID_UNSPECIFIED":   0,
		"OVERTIME_SORT_KEY_CREATED_AT":       1,
		"OVERTIME_SORT_KEY_MODIFIED_AT":      2,
		"OVERTIME_SORT_KEY_APPROVED_ON":      3,
		"OVERTIME_SORT_KEY_APPROVED_BY":      4,
		"OVERTIME_SORT_KEY_APPROVER_ROLE_ID": 5,
		"OVERTIME_SORT_KEY_COMPLETED_ON":     6,
		"OVERTIME_SORT_KEY_REFERENCE_ID":     10,
		"OVERTIME_SORT_KEY_FINAL_REF_NUMBER": 11,
		"OVERTIME_SORT_KEY_USER_ID":          12,
		"OVERTIME_SORT_KEY_FROM_TIMESTAMP":   13,
		"OVERTIME_SORT_KEY_TO_TIMESTAMP":     14,
	}
)

func (x OVERTIME_SORT_KEY) Enum() *OVERTIME_SORT_KEY {
	p := new(OVERTIME_SORT_KEY)
	*p = x
	return p
}

func (x OVERTIME_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OVERTIME_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_overtimes_scailo_proto_enumTypes[0].Descriptor()
}

func (OVERTIME_SORT_KEY) Type() protoreflect.EnumType {
	return &file_overtimes_scailo_proto_enumTypes[0]
}

func (x OVERTIME_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OVERTIME_SORT_KEY.Descriptor instead.
func (OVERTIME_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type OvertimesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the overtime
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The ID of the user who has requested for overtime
	UserId uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The UNIX timestamp from when the overtime begins
	FromTimestamp uint64 `protobuf:"varint,12,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	// The UNIX timestamp from when the overtime ends
	ToTimestamp uint64 `protobuf:"varint,13,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	// The description of the overtime
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServiceCreateRequest) Reset() {
	*x = OvertimesServiceCreateRequest{}
	mi := &file_overtimes_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServiceCreateRequest) ProtoMessage() {}

func (x *OvertimesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*OvertimesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *OvertimesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *OvertimesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *OvertimesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *OvertimesServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *OvertimesServiceCreateRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OvertimesServiceCreateRequest) GetFromTimestamp() uint64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *OvertimesServiceCreateRequest) GetToTimestamp() uint64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *OvertimesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OvertimesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type OvertimesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the overtime
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The UNIX timestamp from when the overtime begins
	FromTimestamp uint64 `protobuf:"varint,12,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	// The UNIX timestamp from when the overtime ends
	ToTimestamp uint64 `protobuf:"varint,13,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	// The description of the overtime
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServiceUpdateRequest) Reset() {
	*x = OvertimesServiceUpdateRequest{}
	mi := &file_overtimes_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServiceUpdateRequest) ProtoMessage() {}

func (x *OvertimesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*OvertimesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *OvertimesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *OvertimesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OvertimesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *OvertimesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *OvertimesServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *OvertimesServiceUpdateRequest) GetFromTimestamp() uint64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *OvertimesServiceUpdateRequest) GetToTimestamp() uint64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *OvertimesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OvertimesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a standard response
type Overtime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this overtime
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this overtime
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this overtime
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this overtime was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference_id of the overtime
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user who has requested for overtime
	UserId uint64 `protobuf:"varint,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The UNIX timestamp from when the overtime begins
	FromTimestamp uint64 `protobuf:"varint,13,opt,name=from_timestamp,json=fromTimestamp,proto3" json:"from_timestamp,omitempty"`
	// The UNIX timestamp from when the overtime ends
	ToTimestamp uint64 `protobuf:"varint,14,opt,name=to_timestamp,json=toTimestamp,proto3" json:"to_timestamp,omitempty"`
	// The description of the overtime
	Description string `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Overtime) Reset() {
	*x = Overtime{}
	mi := &file_overtimes_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Overtime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Overtime) ProtoMessage() {}

func (x *Overtime) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Overtime.ProtoReflect.Descriptor instead.
func (*Overtime) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Overtime) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Overtime) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Overtime) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Overtime) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Overtime) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Overtime) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Overtime) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Overtime) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *Overtime) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *Overtime) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Overtime) GetFromTimestamp() uint64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *Overtime) GetToTimestamp() uint64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *Overtime) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Overtime) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the message consisting of the list of records
type OvertimesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Overtime `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesList) Reset() {
	*x = OvertimesList{}
	mi := &file_overtimes_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesList) ProtoMessage() {}

func (x *OvertimesList) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesList.ProtoReflect.Descriptor instead.
func (*OvertimesList) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *OvertimesList) GetList() []*Overtime {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type OvertimesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey OVERTIME_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.OVERTIME_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this overtime
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServicePaginationReq) Reset() {
	*x = OvertimesServicePaginationReq{}
	mi := &file_overtimes_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServicePaginationReq) ProtoMessage() {}

func (x *OvertimesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*OvertimesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *OvertimesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *OvertimesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OvertimesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OvertimesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *OvertimesServicePaginationReq) GetSortKey() OVERTIME_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_ID_UNSPECIFIED
}

func (x *OvertimesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type OvertimesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Overtime `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServicePaginationResponse) Reset() {
	*x = OvertimesServicePaginationResponse{}
	mi := &file_overtimes_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServicePaginationResponse) ProtoMessage() {}

func (x *OvertimesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*OvertimesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *OvertimesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OvertimesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OvertimesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OvertimesServicePaginationResponse) GetPayload() []*Overtime {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type OvertimesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey OVERTIME_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.OVERTIME_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this overtime
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference_id of the overtime
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user who has requested for overtime
	UserId uint64 `protobuf:"varint,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The start range of "from timestamp"
	FromTimestampStart uint64 `protobuf:"varint,24,opt,name=from_timestamp_start,json=fromTimestampStart,proto3" json:"from_timestamp_start,omitempty"`
	// The end range of "from timestamp"
	FromTimestampEnd uint64 `protobuf:"varint,25,opt,name=from_timestamp_end,json=fromTimestampEnd,proto3" json:"from_timestamp_end,omitempty"`
	// The start range of "to timestamp"
	ToTimestampStart uint64 `protobuf:"varint,26,opt,name=to_timestamp_start,json=toTimestampStart,proto3" json:"to_timestamp_start,omitempty"`
	// The end range of "to timestamp"
	ToTimestampEnd uint64 `protobuf:"varint,27,opt,name=to_timestamp_end,json=toTimestampEnd,proto3" json:"to_timestamp_end,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServiceFilterReq) Reset() {
	*x = OvertimesServiceFilterReq{}
	mi := &file_overtimes_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServiceFilterReq) ProtoMessage() {}

func (x *OvertimesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*OvertimesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *OvertimesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *OvertimesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *OvertimesServiceFilterReq) GetSortKey() OVERTIME_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_ID_UNSPECIFIED
}

func (x *OvertimesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *OvertimesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *OvertimesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *OvertimesServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *OvertimesServiceFilterReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetFromTimestampStart() uint64 {
	if x != nil {
		return x.FromTimestampStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetFromTimestampEnd() uint64 {
	if x != nil {
		return x.FromTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetToTimestampStart() uint64 {
	if x != nil {
		return x.ToTimestampStart
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetToTimestampEnd() uint64 {
	if x != nil {
		return x.ToTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type OvertimesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this overtime
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference_id of the overtime
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The ID of the user who has requested for overtime
	UserId uint64 `protobuf:"varint,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The start range of "from timestamp"
	FromTimestampStart uint64 `protobuf:"varint,24,opt,name=from_timestamp_start,json=fromTimestampStart,proto3" json:"from_timestamp_start,omitempty"`
	// The end range of "from timestamp"
	FromTimestampEnd uint64 `protobuf:"varint,25,opt,name=from_timestamp_end,json=fromTimestampEnd,proto3" json:"from_timestamp_end,omitempty"`
	// The start range of "to timestamp"
	ToTimestampStart uint64 `protobuf:"varint,26,opt,name=to_timestamp_start,json=toTimestampStart,proto3" json:"to_timestamp_start,omitempty"`
	// The end range of "to timestamp"
	ToTimestampEnd uint64 `protobuf:"varint,27,opt,name=to_timestamp_end,json=toTimestampEnd,proto3" json:"to_timestamp_end,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServiceCountReq) Reset() {
	*x = OvertimesServiceCountReq{}
	mi := &file_overtimes_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServiceCountReq) ProtoMessage() {}

func (x *OvertimesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServiceCountReq.ProtoReflect.Descriptor instead.
func (*OvertimesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *OvertimesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *OvertimesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *OvertimesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *OvertimesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *OvertimesServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *OvertimesServiceCountReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetFromTimestampStart() uint64 {
	if x != nil {
		return x.FromTimestampStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetFromTimestampEnd() uint64 {
	if x != nil {
		return x.FromTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetToTimestampStart() uint64 {
	if x != nil {
		return x.ToTimestampStart
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetToTimestampEnd() uint64 {
	if x != nil {
		return x.ToTimestampEnd
	}
	return 0
}

func (x *OvertimesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type OvertimesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey OVERTIME_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.OVERTIME_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the user who has requested for overtime
	UserId        uint64 `protobuf:"varint,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OvertimesServiceSearchAllReq) Reset() {
	*x = OvertimesServiceSearchAllReq{}
	mi := &file_overtimes_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OvertimesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OvertimesServiceSearchAllReq) ProtoMessage() {}

func (x *OvertimesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_overtimes_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OvertimesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*OvertimesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_overtimes_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *OvertimesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *OvertimesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OvertimesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OvertimesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *OvertimesServiceSearchAllReq) GetSortKey() OVERTIME_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return OVERTIME_SORT_KEY_OVERTIME_SORT_KEY_ID_UNSPECIFIED
}

func (x *OvertimesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *OvertimesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *OvertimesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *OvertimesServiceSearchAllReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_overtimes_scailo_proto protoreflect.FileDescriptor

const file_overtimes_scailo_proto_rawDesc = "" +
	"\n" +
	"\x16overtimes.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\"\xc7\x03\n" +
	"\x1dOvertimesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\x12.\n" +
	"\x0efrom_timestamp\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\rfromTimestamp\x12*\n" +
	"\fto_timestamp\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vtoTimestamp\x127\n" +
	"\vdescription\x18\x0e \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vdescription\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xc0\x03\n" +
	"\x1dOvertimesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12.\n" +
	"\x0efrom_timestamp\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\rfromTimestamp\x12*\n" +
	"\fto_timestamp\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\vtoTimestamp\x127\n" +
	"\vdescription\x18\x0e \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vdescription\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xe7\x04\n" +
	"\bOvertime\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\f \x01(\x04R\x06userId\x12%\n" +
	"\x0efrom_timestamp\x18\r \x01(\x04R\rfromTimestamp\x12!\n" +
	"\fto_timestamp\x18\x0e \x01(\x04R\vtoTimestamp\x12 \n" +
	"\vdescription\x18\x0f \x01(\tR\vdescription\x123\n" +
	"\tform_data\x18\x1e \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"5\n" +
	"\rOvertimesList\x12$\n" +
	"\x04list\x18\x01 \x03(\v2\x10.Scailo.OvertimeR\x04list\"\xb5\x02\n" +
	"\x1dOvertimesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x124\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x19.Scailo.OVERTIME_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x94\x01\n" +
	"\"OvertimesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12*\n" +
	"\apayload\x18\x04 \x03(\v2\x10.Scailo.OvertimeR\apayload\"\xb1\t\n" +
	"\x19OvertimesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x124\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x19.Scailo.OVERTIME_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\x16 \x01(\x04R\x06userId\x120\n" +
	"\x14from_timestamp_start\x18\x18 \x01(\x04R\x12fromTimestampStart\x12,\n" +
	"\x12from_timestamp_end\x18\x19 \x01(\x04R\x10fromTimestampEnd\x12,\n" +
	"\x12to_timestamp_start\x18\x1a \x01(\x04R\x10toTimestampStart\x12(\n" +
	"\x10to_timestamp_end\x18\x1b \x01(\x04R\x0etoTimestampEnd\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xfe\a\n" +
	"\x18OvertimesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x17\n" +
	"\auser_id\x18\x16 \x01(\x04R\x06userId\x120\n" +
	"\x14from_timestamp_start\x18\x18 \x01(\x04R\x12fromTimestampStart\x12,\n" +
	"\x12from_timestamp_end\x18\x19 \x01(\x04R\x10fromTimestampEnd\x12,\n" +
	"\x12to_timestamp_start\x18\x1a \x01(\x04R\x10toTimestampStart\x12(\n" +
	"\x10to_timestamp_end\x18\x1b \x01(\x04R\x0etoTimestampEnd\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\x96\x03\n" +
	"\x1cOvertimesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x124\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x19.Scailo.OVERTIME_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x17\n" +
	"\auser_id\x18\x16 \x01(\x04R\x06userId*\xc5\x03\n" +
	"\x11OVERTIME_SORT_KEY\x12$\n" +
	" OVERTIME_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cOVERTIME_SORT_KEY_CREATED_AT\x10\x01\x12!\n" +
	"\x1dOVERTIME_SORT_KEY_MODIFIED_AT\x10\x02\x12!\n" +
	"\x1dOVERTIME_SORT_KEY_APPROVED_ON\x10\x03\x12!\n" +
	"\x1dOVERTIME_SORT_KEY_APPROVED_BY\x10\x04\x12&\n" +
	"\"OVERTIME_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\"\n" +
	"\x1eOVERTIME_SORT_KEY_COMPLETED_ON\x10\x06\x12\"\n" +
	"\x1eOVERTIME_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12&\n" +
	"\"OVERTIME_SORT_KEY_FINAL_REF_NUMBER\x10\v\x12\x1d\n" +
	"\x19OVERTIME_SORT_KEY_USER_ID\x10\f\x12$\n" +
	" OVERTIME_SORT_KEY_FROM_TIMESTAMP\x10\r\x12\"\n" +
	"\x1eOVERTIME_SORT_KEY_TO_TIMESTAMP\x10\x0e2\xe1\x0f\n" +
	"\x10OvertimesService\x12K\n" +
	"\x06Create\x12%.Scailo.OvertimesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x05Draft\x12%.Scailo.OvertimesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12P\n" +
	"\vDraftUpdate\x12%.Scailo.OvertimesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12S\n" +
	"\x0eRevisionUpdate\x12%.Scailo.OvertimesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x120\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x10.Scailo.Overtime\x126\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x10.Scailo.Overtime\x129\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x10.Scailo.Overtime\x12?\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x10.Scailo.Overtime\x12=\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x15.Scailo.OvertimesList\x126\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x15.Scailo.OvertimesList\x12E\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.OvertimesList\x12g\n" +
	"\x12ViewWithPagination\x12%.Scailo.OvertimesServicePaginationReq\x1a*.Scailo.OvertimesServicePaginationResponse\x12H\n" +
	"\tSearchAll\x12$.Scailo.OvertimesServiceSearchAllReq\x1a\x15.Scailo.OvertimesList\x12B\n" +
	"\x06Filter\x12!.Scailo.OvertimesServiceFilterReq\x1a\x15.Scailo.OvertimesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12@\n" +
	"\x05Count\x12 .Scailo.OvertimesServiceCountReq\x1a\x15.Scailo.CountResponse\x12H\n" +
	"\rDownloadAsCSV\x12!.Scailo.OvertimesServiceFilterReq\x1a\x14.Scailo.StandardFileBf\n" +
	"\n" +
	"com.ScailoB\x14OvertimesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_overtimes_scailo_proto_rawDescOnce sync.Once
	file_overtimes_scailo_proto_rawDescData []byte
)

func file_overtimes_scailo_proto_rawDescGZIP() []byte {
	file_overtimes_scailo_proto_rawDescOnce.Do(func() {
		file_overtimes_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_overtimes_scailo_proto_rawDesc), len(file_overtimes_scailo_proto_rawDesc)))
	})
	return file_overtimes_scailo_proto_rawDescData
}

var file_overtimes_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_overtimes_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_overtimes_scailo_proto_goTypes = []any{
	(OVERTIME_SORT_KEY)(0),                     // 0: Scailo.OVERTIME_SORT_KEY
	(*OvertimesServiceCreateRequest)(nil),      // 1: Scailo.OvertimesServiceCreateRequest
	(*OvertimesServiceUpdateRequest)(nil),      // 2: Scailo.OvertimesServiceUpdateRequest
	(*Overtime)(nil),                           // 3: Scailo.Overtime
	(*OvertimesList)(nil),                      // 4: Scailo.OvertimesList
	(*OvertimesServicePaginationReq)(nil),      // 5: Scailo.OvertimesServicePaginationReq
	(*OvertimesServicePaginationResponse)(nil), // 6: Scailo.OvertimesServicePaginationResponse
	(*OvertimesServiceFilterReq)(nil),          // 7: Scailo.OvertimesServiceFilterReq
	(*OvertimesServiceCountReq)(nil),           // 8: Scailo.OvertimesServiceCountReq
	(*OvertimesServiceSearchAllReq)(nil),       // 9: Scailo.OvertimesServiceSearchAllReq
	(*FormFieldDatumCreateRequest)(nil),        // 10: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                   // 11: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                   // 12: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),             // 13: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),               // 14: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                     // 15: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                           // 16: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                            // 17: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),        // 18: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),      // 19: Scailo.IdentifierUUIDWithUserComment
	(*Identifier)(nil),                         // 20: Scailo.Identifier
	(*IdentifierUUID)(nil),                     // 21: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                    // 22: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                       // 23: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),            // 24: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                 // 25: Scailo.IdentifierResponse
	(*CountResponse)(nil),                      // 26: Scailo.CountResponse
	(*StandardFile)(nil),                       // 27: Scailo.StandardFile
}
var file_overtimes_scailo_proto_depIdxs = []int32{
	10, // 0: Scailo.OvertimesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	10, // 1: Scailo.OvertimesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	11, // 2: Scailo.Overtime.metadata:type_name -> Scailo.EmployeeMetadata
	12, // 3: Scailo.Overtime.approval_metadata:type_name -> Scailo.ApprovalMetadata
	13, // 4: Scailo.Overtime.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 5: Scailo.Overtime.logs:type_name -> Scailo.LogbookLogConciseSLC
	15, // 6: Scailo.Overtime.form_data:type_name -> Scailo.FormFieldDatum
	3,  // 7: Scailo.OvertimesList.list:type_name -> Scailo.Overtime
	16, // 8: Scailo.OvertimesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 9: Scailo.OvertimesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 10: Scailo.OvertimesServicePaginationReq.sort_key:type_name -> Scailo.OVERTIME_SORT_KEY
	13, // 11: Scailo.OvertimesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 12: Scailo.OvertimesServicePaginationResponse.payload:type_name -> Scailo.Overtime
	16, // 13: Scailo.OvertimesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 14: Scailo.OvertimesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 15: Scailo.OvertimesServiceFilterReq.sort_key:type_name -> Scailo.OVERTIME_SORT_KEY
	13, // 16: Scailo.OvertimesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	18, // 17: Scailo.OvertimesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	16, // 18: Scailo.OvertimesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	13, // 19: Scailo.OvertimesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	18, // 20: Scailo.OvertimesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	16, // 21: Scailo.OvertimesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 22: Scailo.OvertimesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 23: Scailo.OvertimesServiceSearchAllReq.sort_key:type_name -> Scailo.OVERTIME_SORT_KEY
	13, // 24: Scailo.OvertimesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	1,  // 25: Scailo.OvertimesService.Create:input_type -> Scailo.OvertimesServiceCreateRequest
	1,  // 26: Scailo.OvertimesService.Draft:input_type -> Scailo.OvertimesServiceCreateRequest
	2,  // 27: Scailo.OvertimesService.DraftUpdate:input_type -> Scailo.OvertimesServiceUpdateRequest
	19, // 28: Scailo.OvertimesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 29: Scailo.OvertimesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 30: Scailo.OvertimesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 31: Scailo.OvertimesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	2,  // 32: Scailo.OvertimesService.RevisionUpdate:input_type -> Scailo.OvertimesServiceUpdateRequest
	19, // 33: Scailo.OvertimesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 34: Scailo.OvertimesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 35: Scailo.OvertimesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 36: Scailo.OvertimesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 37: Scailo.OvertimesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	19, // 38: Scailo.OvertimesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 39: Scailo.OvertimesService.ViewByID:input_type -> Scailo.Identifier
	21, // 40: Scailo.OvertimesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	20, // 41: Scailo.OvertimesService.ViewEssentialByID:input_type -> Scailo.Identifier
	21, // 42: Scailo.OvertimesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	22, // 43: Scailo.OvertimesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	23, // 44: Scailo.OvertimesService.ViewAll:input_type -> Scailo.ActiveStatus
	21, // 45: Scailo.OvertimesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	5,  // 46: Scailo.OvertimesService.ViewWithPagination:input_type -> Scailo.OvertimesServicePaginationReq
	9,  // 47: Scailo.OvertimesService.SearchAll:input_type -> Scailo.OvertimesServiceSearchAllReq
	7,  // 48: Scailo.OvertimesService.Filter:input_type -> Scailo.OvertimesServiceFilterReq
	24, // 49: Scailo.OvertimesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	8,  // 50: Scailo.OvertimesService.Count:input_type -> Scailo.OvertimesServiceCountReq
	7,  // 51: Scailo.OvertimesService.DownloadAsCSV:input_type -> Scailo.OvertimesServiceFilterReq
	25, // 52: Scailo.OvertimesService.Create:output_type -> Scailo.IdentifierResponse
	25, // 53: Scailo.OvertimesService.Draft:output_type -> Scailo.IdentifierResponse
	25, // 54: Scailo.OvertimesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	25, // 55: Scailo.OvertimesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	25, // 56: Scailo.OvertimesService.Verify:output_type -> Scailo.IdentifierResponse
	25, // 57: Scailo.OvertimesService.Approve:output_type -> Scailo.IdentifierResponse
	25, // 58: Scailo.OvertimesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	25, // 59: Scailo.OvertimesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	25, // 60: Scailo.OvertimesService.Halt:output_type -> Scailo.IdentifierResponse
	25, // 61: Scailo.OvertimesService.Discard:output_type -> Scailo.IdentifierResponse
	25, // 62: Scailo.OvertimesService.Restore:output_type -> Scailo.IdentifierResponse
	25, // 63: Scailo.OvertimesService.Complete:output_type -> Scailo.IdentifierResponse
	25, // 64: Scailo.OvertimesService.Repeat:output_type -> Scailo.IdentifierResponse
	25, // 65: Scailo.OvertimesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	3,  // 66: Scailo.OvertimesService.ViewByID:output_type -> Scailo.Overtime
	3,  // 67: Scailo.OvertimesService.ViewByUUID:output_type -> Scailo.Overtime
	3,  // 68: Scailo.OvertimesService.ViewEssentialByID:output_type -> Scailo.Overtime
	3,  // 69: Scailo.OvertimesService.ViewEssentialByUUID:output_type -> Scailo.Overtime
	4,  // 70: Scailo.OvertimesService.ViewFromIDs:output_type -> Scailo.OvertimesList
	4,  // 71: Scailo.OvertimesService.ViewAll:output_type -> Scailo.OvertimesList
	4,  // 72: Scailo.OvertimesService.ViewAllForEntityUUID:output_type -> Scailo.OvertimesList
	6,  // 73: Scailo.OvertimesService.ViewWithPagination:output_type -> Scailo.OvertimesServicePaginationResponse
	4,  // 74: Scailo.OvertimesService.SearchAll:output_type -> Scailo.OvertimesList
	4,  // 75: Scailo.OvertimesService.Filter:output_type -> Scailo.OvertimesList
	26, // 76: Scailo.OvertimesService.CountInStatus:output_type -> Scailo.CountResponse
	26, // 77: Scailo.OvertimesService.Count:output_type -> Scailo.CountResponse
	27, // 78: Scailo.OvertimesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	52, // [52:79] is the sub-list for method output_type
	25, // [25:52] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_overtimes_scailo_proto_init() }
func file_overtimes_scailo_proto_init() {
	if File_overtimes_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_overtimes_scailo_proto_rawDesc), len(file_overtimes_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_overtimes_scailo_proto_goTypes,
		DependencyIndexes: file_overtimes_scailo_proto_depIdxs,
		EnumInfos:         file_overtimes_scailo_proto_enumTypes,
		MessageInfos:      file_overtimes_scailo_proto_msgTypes,
	}.Build()
	File_overtimes_scailo_proto = out.File
	file_overtimes_scailo_proto_goTypes = nil
	file_overtimes_scailo_proto_depIdxs = nil
}
