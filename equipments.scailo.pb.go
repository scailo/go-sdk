// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: equipments.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores all the possible references from which a equipment can be added
type EQUIPMENT_REF_FROM int32

const (
	// Used only in filters
	EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED EQUIPMENT_REF_FROM = 0
	// Denotes that the equipment originated from initial stock
	EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_INITIAL_STOCK EQUIPMENT_REF_FROM = 1
	// Denotes that the equipment originated from a goods receipt
	EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_GOODS_RECEIPT EQUIPMENT_REF_FROM = 2
	// Denotes that the equipment originated from an inward job free issue material
	EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL EQUIPMENT_REF_FROM = 3
)

// Enum value maps for EQUIPMENT_REF_FROM.
var (
	EQUIPMENT_REF_FROM_name = map[int32]string{
		0: "EQUIPMENT_REF_FROM_ANY_UNSPECIFIED",
		1: "EQUIPMENT_REF_FROM_INITIAL_STOCK",
		2: "EQUIPMENT_REF_FROM_GOODS_RECEIPT",
		3: "EQUIPMENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL",
	}
	EQUIPMENT_REF_FROM_value = map[string]int32{
		"EQUIPMENT_REF_FROM_ANY_UNSPECIFIED":                0,
		"EQUIPMENT_REF_FROM_INITIAL_STOCK":                  1,
		"EQUIPMENT_REF_FROM_GOODS_RECEIPT":                  2,
		"EQUIPMENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL": 3,
	}
)

func (x EQUIPMENT_REF_FROM) Enum() *EQUIPMENT_REF_FROM {
	p := new(EQUIPMENT_REF_FROM)
	*p = x
	return p
}

func (x EQUIPMENT_REF_FROM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EQUIPMENT_REF_FROM) Descriptor() protoreflect.EnumDescriptor {
	return file_equipments_scailo_proto_enumTypes[0].Descriptor()
}

func (EQUIPMENT_REF_FROM) Type() protoreflect.EnumType {
	return &file_equipments_scailo_proto_enumTypes[0]
}

func (x EQUIPMENT_REF_FROM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EQUIPMENT_REF_FROM.Descriptor instead.
func (EQUIPMENT_REF_FROM) EnumDescriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type EquipmentsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,18,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// Stores the reference from
	RefFrom EQUIPMENT_REF_FROM `protobuf:"varint,31,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.EQUIPMENT_REF_FROM" json:"ref_from,omitempty"`
	// Stores the ID of the reference
	RefId uint64 `protobuf:"varint,32,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Stores the ID of the associated family
	FamilyId uint64 `protobuf:"varint,33,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the internal code (as given by user)
	InternalItemCode string `protobuf:"bytes,35,opt,name=internal_item_code,json=internalItemCode,proto3" json:"internal_item_code,omitempty"`
	// Stores the quantity (in cents)
	Quantity uint64 `protobuf:"varint,37,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,39,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// Stores an optional quantity in the secondary unit of equipment
	SecondaryQuantity uint64 `protobuf:"varint,40,opt,name=secondary_quantity,json=secondaryQuantity,proto3" json:"secondary_quantity,omitempty"`
	// Stores an optional shelf life as a timestamp
	ShelfLifeTimestamp uint64 `protobuf:"varint,41,opt,name=shelf_life_timestamp,json=shelfLifeTimestamp,proto3" json:"shelf_life_timestamp,omitempty"`
	// Stores an optional warranty as a timestamp
	WarrantyTimestamp uint64 `protobuf:"varint,42,opt,name=warranty_timestamp,json=warrantyTimestamp,proto3" json:"warranty_timestamp,omitempty"`
	// The location ID of where the item needs to be stored
	LocationId uint64 `protobuf:"varint,54,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The description of the equipment
	Description string `protobuf:"bytes,60,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,80,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceCreateRequest) Reset() {
	*x = EquipmentsServiceCreateRequest{}
	mi := &file_equipments_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceCreateRequest) ProtoMessage() {}

func (x *EquipmentsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *EquipmentsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *EquipmentsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *EquipmentsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetRefFrom() EQUIPMENT_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetInternalItemCode() string {
	if x != nil {
		return x.InternalItemCode
	}
	return ""
}

func (x *EquipmentsServiceCreateRequest) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetSecondaryQuantity() uint64 {
	if x != nil {
		return x.SecondaryQuantity
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetShelfLifeTimestamp() uint64 {
	if x != nil {
		return x.ShelfLifeTimestamp
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetWarrantyTimestamp() uint64 {
	if x != nil {
		return x.WarrantyTimestamp
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *EquipmentsServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EquipmentsServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type EquipmentsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,18,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// Stores the internal code (as given by user)
	InternalItemCode string `protobuf:"bytes,35,opt,name=internal_item_code,json=internalItemCode,proto3" json:"internal_item_code,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,38,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// Stores an optional quantity in the secondary unit of equipment
	SecondaryQuantity uint64 `protobuf:"varint,39,opt,name=secondary_quantity,json=secondaryQuantity,proto3" json:"secondary_quantity,omitempty"`
	// Stores an optional shelf life as a timestamp
	ShelfLifeTimestamp uint64 `protobuf:"varint,40,opt,name=shelf_life_timestamp,json=shelfLifeTimestamp,proto3" json:"shelf_life_timestamp,omitempty"`
	// Stores an optional warranty as a timestamp
	WarrantyTimestamp uint64 `protobuf:"varint,41,opt,name=warranty_timestamp,json=warrantyTimestamp,proto3" json:"warranty_timestamp,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic bool `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3" json:"is_qc_report_public,omitempty"`
	// Stores any applicable remaining dimensions as a string
	RemainingDimensions string `protobuf:"bytes,55,opt,name=remaining_dimensions,json=remainingDimensions,proto3" json:"remaining_dimensions,omitempty"`
	// The description of the equipment
	Description string `protobuf:"bytes,60,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,80,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceUpdateRequest) Reset() {
	*x = EquipmentsServiceUpdateRequest{}
	mi := &file_equipments_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceUpdateRequest) ProtoMessage() {}

func (x *EquipmentsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *EquipmentsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *EquipmentsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *EquipmentsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetInternalItemCode() string {
	if x != nil {
		return x.InternalItemCode
	}
	return ""
}

func (x *EquipmentsServiceUpdateRequest) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetSecondaryQuantity() uint64 {
	if x != nil {
		return x.SecondaryQuantity
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetShelfLifeTimestamp() uint64 {
	if x != nil {
		return x.ShelfLifeTimestamp
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetWarrantyTimestamp() uint64 {
	if x != nil {
		return x.WarrantyTimestamp
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *EquipmentsServiceUpdateRequest) GetIsQcReportPublic() bool {
	if x != nil {
		return x.IsQcReportPublic
	}
	return false
}

func (x *EquipmentsServiceUpdateRequest) GetRemainingDimensions() string {
	if x != nil {
		return x.RemainingDimensions
	}
	return ""
}

func (x *EquipmentsServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EquipmentsServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to send a equipment to store
type EquipmentsServiceSendToStoreRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Stores an optional shelf life as a timestamp
	ShelfLifeTimestamp uint64 `protobuf:"varint,40,opt,name=shelf_life_timestamp,json=shelfLifeTimestamp,proto3" json:"shelf_life_timestamp,omitempty"`
	// Stores an optional warranty as a timestamp
	WarrantyTimestamp uint64 `protobuf:"varint,41,opt,name=warranty_timestamp,json=warrantyTimestamp,proto3" json:"warranty_timestamp,omitempty"`
	// Stores the store to which the equipment is sent to
	StoreId uint64 `protobuf:"varint,50,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic bool `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3" json:"is_qc_report_public,omitempty"`
	// Stores any applicable remaining dimensions as a string
	RemainingDimensions string `protobuf:"bytes,55,opt,name=remaining_dimensions,json=remainingDimensions,proto3" json:"remaining_dimensions,omitempty"`
	// The description of the equipment
	Description   string `protobuf:"bytes,60,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceSendToStoreRequest) Reset() {
	*x = EquipmentsServiceSendToStoreRequest{}
	mi := &file_equipments_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceSendToStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceSendToStoreRequest) ProtoMessage() {}

func (x *EquipmentsServiceSendToStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceSendToStoreRequest.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceSendToStoreRequest) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *EquipmentsServiceSendToStoreRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *EquipmentsServiceSendToStoreRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentsServiceSendToStoreRequest) GetShelfLifeTimestamp() uint64 {
	if x != nil {
		return x.ShelfLifeTimestamp
	}
	return 0
}

func (x *EquipmentsServiceSendToStoreRequest) GetWarrantyTimestamp() uint64 {
	if x != nil {
		return x.WarrantyTimestamp
	}
	return 0
}

func (x *EquipmentsServiceSendToStoreRequest) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *EquipmentsServiceSendToStoreRequest) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *EquipmentsServiceSendToStoreRequest) GetIsQcReportPublic() bool {
	if x != nil {
		return x.IsQcReportPublic
	}
	return false
}

func (x *EquipmentsServiceSendToStoreRequest) GetRemainingDimensions() string {
	if x != nil {
		return x.RemainingDimensions
	}
	return ""
}

func (x *EquipmentsServiceSendToStoreRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type Equipment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this equipment
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The status of this equipment
	Status INVENTORY_LIFECYCLE `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.INVENTORY_LIFECYCLE" json:"status,omitempty"`
	// Stores the logs of every operation performed on this equipment
	Logs []*LogbookLogInventoryLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when the item was admitted into store
	StoreIntakeAt uint64 `protobuf:"varint,10,opt,name=store_intake_at,json=storeIntakeAt,proto3" json:"store_intake_at,omitempty"`
	// The timestamp of when the item was either consumed or rejected
	ConsumedOrRejectedAt uint64 `protobuf:"varint,11,opt,name=consumed_or_rejected_at,json=consumedOrRejectedAt,proto3" json:"consumed_or_rejected_at,omitempty"`
	// The timestamp of when the rework process began
	ReworkStartAt uint64 `protobuf:"varint,12,opt,name=rework_start_at,json=reworkStartAt,proto3" json:"rework_start_at,omitempty"`
	// The timestamp of when the rework process ended
	ReworkEndAt uint64 `protobuf:"varint,13,opt,name=rework_end_at,json=reworkEndAt,proto3" json:"rework_end_at,omitempty"`
	// The timestamp of when the item was either returned or scrapped
	ReturnedOrScrappedAt uint64 `protobuf:"varint,14,opt,name=returned_or_scrapped_at,json=returnedOrScrappedAt,proto3" json:"returned_or_scrapped_at,omitempty"`
	// The timestamp of when the item was discarded
	DiscardedAt uint64 `protobuf:"varint,15,opt,name=discarded_at,json=discardedAt,proto3" json:"discarded_at,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,18,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The ID of the parent inventory item (if applicable)
	ParentRefId uint64 `protobuf:"varint,30,opt,name=parent_ref_id,json=parentRefId,proto3" json:"parent_ref_id,omitempty"`
	// Stores the reference from
	RefFrom EQUIPMENT_REF_FROM `protobuf:"varint,31,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.EQUIPMENT_REF_FROM" json:"ref_from,omitempty"`
	// Stores the ID of the reference
	RefId uint64 `protobuf:"varint,32,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Stores the ID of the associated family
	FamilyId uint64 `protobuf:"varint,33,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The auto generated code of the equipment
	Code string `protobuf:"bytes,34,opt,name=code,proto3" json:"code,omitempty"`
	// Stores the internal code (as given by user)
	InternalItemCode string `protobuf:"bytes,35,opt,name=internal_item_code,json=internalItemCode,proto3" json:"internal_item_code,omitempty"`
	// The computed hash of the equipment
	Hash string `protobuf:"bytes,36,opt,name=hash,proto3" json:"hash,omitempty"`
	// Stores the quantity (in cents)
	Quantity uint64 `protobuf:"varint,37,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// Stores the remaining quantity (in cents)
	QuantityRemaining uint64 `protobuf:"varint,38,opt,name=quantity_remaining,json=quantityRemaining,proto3" json:"quantity_remaining,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,39,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// Stores an optional quantity in the secondary unit of equipment
	SecondaryQuantity uint64 `protobuf:"varint,40,opt,name=secondary_quantity,json=secondaryQuantity,proto3" json:"secondary_quantity,omitempty"`
	// Stores an optional shelf life as a timestamp
	ShelfLifeTimestamp uint64 `protobuf:"varint,41,opt,name=shelf_life_timestamp,json=shelfLifeTimestamp,proto3" json:"shelf_life_timestamp,omitempty"`
	// Stores an optional warranty as a timestamp
	WarrantyTimestamp uint64 `protobuf:"varint,42,opt,name=warranty_timestamp,json=warrantyTimestamp,proto3" json:"warranty_timestamp,omitempty"`
	// Stores the store to which the equipment is sent to
	StoreId uint64 `protobuf:"varint,50,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic bool `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3" json:"is_qc_report_public,omitempty"`
	// The location ID of where the item needs to be stored
	LocationId uint64 `protobuf:"varint,54,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Stores any applicable remaining dimensions as a string
	RemainingDimensions string `protobuf:"bytes,55,opt,name=remaining_dimensions,json=remainingDimensions,proto3" json:"remaining_dimensions,omitempty"`
	// The description of the equipment
	Description string `protobuf:"bytes,60,opt,name=description,proto3" json:"description,omitempty"`
	// The short URL of the item
	ShortUrl string `protobuf:"bytes,70,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,80,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Equipment) Reset() {
	*x = Equipment{}
	mi := &file_equipments_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Equipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Equipment) ProtoMessage() {}

func (x *Equipment) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Equipment.ProtoReflect.Descriptor instead.
func (*Equipment) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *Equipment) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Equipment) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Equipment) GetStatus() INVENTORY_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return INVENTORY_LIFECYCLE_INVENTORY_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *Equipment) GetLogs() []*LogbookLogInventoryLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Equipment) GetStoreIntakeAt() uint64 {
	if x != nil {
		return x.StoreIntakeAt
	}
	return 0
}

func (x *Equipment) GetConsumedOrRejectedAt() uint64 {
	if x != nil {
		return x.ConsumedOrRejectedAt
	}
	return 0
}

func (x *Equipment) GetReworkStartAt() uint64 {
	if x != nil {
		return x.ReworkStartAt
	}
	return 0
}

func (x *Equipment) GetReworkEndAt() uint64 {
	if x != nil {
		return x.ReworkEndAt
	}
	return 0
}

func (x *Equipment) GetReturnedOrScrappedAt() uint64 {
	if x != nil {
		return x.ReturnedOrScrappedAt
	}
	return 0
}

func (x *Equipment) GetDiscardedAt() uint64 {
	if x != nil {
		return x.DiscardedAt
	}
	return 0
}

func (x *Equipment) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Equipment) GetParentRefId() uint64 {
	if x != nil {
		return x.ParentRefId
	}
	return 0
}

func (x *Equipment) GetRefFrom() EQUIPMENT_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED
}

func (x *Equipment) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *Equipment) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *Equipment) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Equipment) GetInternalItemCode() string {
	if x != nil {
		return x.InternalItemCode
	}
	return ""
}

func (x *Equipment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Equipment) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Equipment) GetQuantityRemaining() uint64 {
	if x != nil {
		return x.QuantityRemaining
	}
	return 0
}

func (x *Equipment) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *Equipment) GetSecondaryQuantity() uint64 {
	if x != nil {
		return x.SecondaryQuantity
	}
	return 0
}

func (x *Equipment) GetShelfLifeTimestamp() uint64 {
	if x != nil {
		return x.ShelfLifeTimestamp
	}
	return 0
}

func (x *Equipment) GetWarrantyTimestamp() uint64 {
	if x != nil {
		return x.WarrantyTimestamp
	}
	return 0
}

func (x *Equipment) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Equipment) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *Equipment) GetIsQcReportPublic() bool {
	if x != nil {
		return x.IsQcReportPublic
	}
	return false
}

func (x *Equipment) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Equipment) GetRemainingDimensions() string {
	if x != nil {
		return x.RemainingDimensions
	}
	return ""
}

func (x *Equipment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Equipment) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *Equipment) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the message consisting of the list of records
type EquipmentsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Equipment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsList) Reset() {
	*x = EquipmentsList{}
	mi := &file_equipments_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsList) ProtoMessage() {}

func (x *EquipmentsList) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsList.ProtoReflect.Descriptor instead.
func (*EquipmentsList) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *EquipmentsList) GetList() []*Equipment {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type EquipmentsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey INVENTORY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.INVENTORY_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this equipment
	Status        INVENTORY_LIFECYCLE `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.INVENTORY_LIFECYCLE" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServicePaginationReq) Reset() {
	*x = EquipmentsServicePaginationReq{}
	mi := &file_equipments_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServicePaginationReq) ProtoMessage() {}

func (x *EquipmentsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*EquipmentsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *EquipmentsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EquipmentsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EquipmentsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *EquipmentsServicePaginationReq) GetSortKey() INVENTORY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return INVENTORY_SORT_KEY_INVENTORY_SORT_KEY_ID_UNSPECIFIED
}

func (x *EquipmentsServicePaginationReq) GetStatus() INVENTORY_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return INVENTORY_LIFECYCLE_INVENTORY_LIFECYCLE_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type EquipmentsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Equipment `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServicePaginationResponse) Reset() {
	*x = EquipmentsServicePaginationResponse{}
	mi := &file_equipments_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServicePaginationResponse) ProtoMessage() {}

func (x *EquipmentsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*EquipmentsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *EquipmentsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EquipmentsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EquipmentsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EquipmentsServicePaginationResponse) GetPayload() []*Equipment {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type EquipmentsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey INVENTORY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.INVENTORY_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this equipment
	Status INVENTORY_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.INVENTORY_LIFECYCLE" json:"status,omitempty"`
	// The start range of store intake timestamp
	StoreIntakeAtStart uint64 `protobuf:"varint,20,opt,name=store_intake_at_start,json=storeIntakeAtStart,proto3" json:"store_intake_at_start,omitempty"`
	// The end range of store intake timestamp
	StoreIntakeAtEnd uint64 `protobuf:"varint,21,opt,name=store_intake_at_end,json=storeIntakeAtEnd,proto3" json:"store_intake_at_end,omitempty"`
	// The start range of discarded timestamp
	DiscardedAtStart uint64 `protobuf:"varint,22,opt,name=discarded_at_start,json=discardedAtStart,proto3" json:"discarded_at_start,omitempty"`
	// The end range of discarded timestamp
	DiscardedAtEnd uint64 `protobuf:"varint,23,opt,name=discarded_at_end,json=discardedAtEnd,proto3" json:"discarded_at_end,omitempty"`
	// The ID of the parent inventory item
	ParentRefId uint64 `protobuf:"varint,30,opt,name=parent_ref_id,json=parentRefId,proto3" json:"parent_ref_id,omitempty"`
	// Stores the reference from
	RefFrom EQUIPMENT_REF_FROM `protobuf:"varint,31,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.EQUIPMENT_REF_FROM" json:"ref_from,omitempty"`
	// Stores the ID of the reference
	RefId uint64 `protobuf:"varint,32,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Stores the ID of the associated family
	FamilyId uint64 `protobuf:"varint,33,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The auto generated code of the equipment
	Code string `protobuf:"bytes,34,opt,name=code,proto3" json:"code,omitempty"`
	// Filter by the exact internal code
	InternalItemCode string `protobuf:"bytes,35,opt,name=internal_item_code,json=internalItemCode,proto3" json:"internal_item_code,omitempty"`
	// The computed hash of the equipment
	Hash string `protobuf:"bytes,36,opt,name=hash,proto3" json:"hash,omitempty"`
	// The minimum remaining quantity (in cents)
	QuantityRemainingMin uint64 `protobuf:"varint,37,opt,name=quantity_remaining_min,json=quantityRemainingMin,proto3" json:"quantity_remaining_min,omitempty"`
	// The maximum remaining quantity (in cents)
	QuantityRemainingMax uint64 `protobuf:"varint,38,opt,name=quantity_remaining_max,json=quantityRemainingMax,proto3" json:"quantity_remaining_max,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,39,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// The start range of shelf life timestamp
	ShelfLifeTimestampStart uint64 `protobuf:"varint,40,opt,name=shelf_life_timestamp_start,json=shelfLifeTimestampStart,proto3" json:"shelf_life_timestamp_start,omitempty"`
	// The end range of shelf life timestamp
	ShelfLifeTimestampEnd uint64 `protobuf:"varint,41,opt,name=shelf_life_timestamp_end,json=shelfLifeTimestampEnd,proto3" json:"shelf_life_timestamp_end,omitempty"`
	// The start range of the warranty timestamp
	WarrantyTimestampStart uint64 `protobuf:"varint,42,opt,name=warranty_timestamp_start,json=warrantyTimestampStart,proto3" json:"warranty_timestamp_start,omitempty"`
	// The end range of the warranty timestamp
	WarrantyTimestampEnd uint64 `protobuf:"varint,43,opt,name=warranty_timestamp_end,json=warrantyTimestampEnd,proto3" json:"warranty_timestamp_end,omitempty"`
	// Stores the store to which the equipment is sent to
	StoreId uint64 `protobuf:"varint,50,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic BOOL_FILTER `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3,enum=Scailo.BOOL_FILTER" json:"is_qc_report_public,omitempty"`
	// Filter by the location ID
	LocationId uint64 `protobuf:"varint,54,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Filter by the given vendor ID
	VendorId uint64 `protobuf:"varint,81,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"` // --------------------------------------------------
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceFilterReq) Reset() {
	*x = EquipmentsServiceFilterReq{}
	mi := &file_equipments_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceFilterReq) ProtoMessage() {}

func (x *EquipmentsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *EquipmentsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetSortKey() INVENTORY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return INVENTORY_SORT_KEY_INVENTORY_SORT_KEY_ID_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *EquipmentsServiceFilterReq) GetStatus() INVENTORY_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return INVENTORY_LIFECYCLE_INVENTORY_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetStoreIntakeAtStart() uint64 {
	if x != nil {
		return x.StoreIntakeAtStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetStoreIntakeAtEnd() uint64 {
	if x != nil {
		return x.StoreIntakeAtEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetDiscardedAtStart() uint64 {
	if x != nil {
		return x.DiscardedAtStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetDiscardedAtEnd() uint64 {
	if x != nil {
		return x.DiscardedAtEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetParentRefId() uint64 {
	if x != nil {
		return x.ParentRefId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetRefFrom() EQUIPMENT_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EquipmentsServiceFilterReq) GetInternalItemCode() string {
	if x != nil {
		return x.InternalItemCode
	}
	return ""
}

func (x *EquipmentsServiceFilterReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *EquipmentsServiceFilterReq) GetQuantityRemainingMin() uint64 {
	if x != nil {
		return x.QuantityRemainingMin
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetQuantityRemainingMax() uint64 {
	if x != nil {
		return x.QuantityRemainingMax
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetShelfLifeTimestampStart() uint64 {
	if x != nil {
		return x.ShelfLifeTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetShelfLifeTimestampEnd() uint64 {
	if x != nil {
		return x.ShelfLifeTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetWarrantyTimestampStart() uint64 {
	if x != nil {
		return x.WarrantyTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetWarrantyTimestampEnd() uint64 {
	if x != nil {
		return x.WarrantyTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetIsQcReportPublic() BOOL_FILTER {
	if x != nil {
		return x.IsQcReportPublic
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceFilterReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *EquipmentsServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type EquipmentsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this equipment
	Status INVENTORY_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.INVENTORY_LIFECYCLE" json:"status,omitempty"`
	// The start range of store intake timestamp
	StoreIntakeAtStart uint64 `protobuf:"varint,20,opt,name=store_intake_at_start,json=storeIntakeAtStart,proto3" json:"store_intake_at_start,omitempty"`
	// The end range of store intake timestamp
	StoreIntakeAtEnd uint64 `protobuf:"varint,21,opt,name=store_intake_at_end,json=storeIntakeAtEnd,proto3" json:"store_intake_at_end,omitempty"`
	// The start range of discarded timestamp
	DiscardedAtStart uint64 `protobuf:"varint,22,opt,name=discarded_at_start,json=discardedAtStart,proto3" json:"discarded_at_start,omitempty"`
	// The end range of discarded timestamp
	DiscardedAtEnd uint64 `protobuf:"varint,23,opt,name=discarded_at_end,json=discardedAtEnd,proto3" json:"discarded_at_end,omitempty"`
	// The ID of the parent inventory item
	ParentRefId uint64 `protobuf:"varint,30,opt,name=parent_ref_id,json=parentRefId,proto3" json:"parent_ref_id,omitempty"`
	// Stores the reference from
	RefFrom EQUIPMENT_REF_FROM `protobuf:"varint,31,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.EQUIPMENT_REF_FROM" json:"ref_from,omitempty"`
	// Stores the ID of the reference
	RefId uint64 `protobuf:"varint,32,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Stores the ID of the associated family
	FamilyId uint64 `protobuf:"varint,33,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The auto generated code of the equipment
	Code string `protobuf:"bytes,34,opt,name=code,proto3" json:"code,omitempty"`
	// Filter by the exact internal code
	InternalItemCode string `protobuf:"bytes,35,opt,name=internal_item_code,json=internalItemCode,proto3" json:"internal_item_code,omitempty"`
	// The computed hash of the equipment
	Hash string `protobuf:"bytes,36,opt,name=hash,proto3" json:"hash,omitempty"`
	// The minimum remaining quantity (in cents)
	QuantityRemainingMin uint64 `protobuf:"varint,37,opt,name=quantity_remaining_min,json=quantityRemainingMin,proto3" json:"quantity_remaining_min,omitempty"`
	// The maximum remaining quantity (in cents)
	QuantityRemainingMax uint64 `protobuf:"varint,38,opt,name=quantity_remaining_max,json=quantityRemainingMax,proto3" json:"quantity_remaining_max,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,39,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// The start range of shelf life timestamp
	ShelfLifeTimestampStart uint64 `protobuf:"varint,40,opt,name=shelf_life_timestamp_start,json=shelfLifeTimestampStart,proto3" json:"shelf_life_timestamp_start,omitempty"`
	// The end range of shelf life timestamp
	ShelfLifeTimestampEnd uint64 `protobuf:"varint,41,opt,name=shelf_life_timestamp_end,json=shelfLifeTimestampEnd,proto3" json:"shelf_life_timestamp_end,omitempty"`
	// The start range of the warranty timestamp
	WarrantyTimestampStart uint64 `protobuf:"varint,42,opt,name=warranty_timestamp_start,json=warrantyTimestampStart,proto3" json:"warranty_timestamp_start,omitempty"`
	// The end range of the warranty timestamp
	WarrantyTimestampEnd uint64 `protobuf:"varint,43,opt,name=warranty_timestamp_end,json=warrantyTimestampEnd,proto3" json:"warranty_timestamp_end,omitempty"`
	// Stores the store to which the equipment is sent to
	StoreId uint64 `protobuf:"varint,50,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic BOOL_FILTER `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3,enum=Scailo.BOOL_FILTER" json:"is_qc_report_public,omitempty"`
	// Filter by the location ID
	LocationId uint64 `protobuf:"varint,54,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Filter by the given vendor ID
	VendorId uint64 `protobuf:"varint,81,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"` // --------------------------------------------------
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceCountReq) Reset() {
	*x = EquipmentsServiceCountReq{}
	mi := &file_equipments_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceCountReq) ProtoMessage() {}

func (x *EquipmentsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceCountReq.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *EquipmentsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *EquipmentsServiceCountReq) GetStatus() INVENTORY_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return INVENTORY_LIFECYCLE_INVENTORY_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceCountReq) GetStoreIntakeAtStart() uint64 {
	if x != nil {
		return x.StoreIntakeAtStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetStoreIntakeAtEnd() uint64 {
	if x != nil {
		return x.StoreIntakeAtEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetDiscardedAtStart() uint64 {
	if x != nil {
		return x.DiscardedAtStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetDiscardedAtEnd() uint64 {
	if x != nil {
		return x.DiscardedAtEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetParentRefId() uint64 {
	if x != nil {
		return x.ParentRefId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetRefFrom() EQUIPMENT_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceCountReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EquipmentsServiceCountReq) GetInternalItemCode() string {
	if x != nil {
		return x.InternalItemCode
	}
	return ""
}

func (x *EquipmentsServiceCountReq) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *EquipmentsServiceCountReq) GetQuantityRemainingMin() uint64 {
	if x != nil {
		return x.QuantityRemainingMin
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetQuantityRemainingMax() uint64 {
	if x != nil {
		return x.QuantityRemainingMax
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetShelfLifeTimestampStart() uint64 {
	if x != nil {
		return x.ShelfLifeTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetShelfLifeTimestampEnd() uint64 {
	if x != nil {
		return x.ShelfLifeTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetWarrantyTimestampStart() uint64 {
	if x != nil {
		return x.WarrantyTimestampStart
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetWarrantyTimestampEnd() uint64 {
	if x != nil {
		return x.WarrantyTimestampEnd
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetIsQcReportPublic() BOOL_FILTER {
	if x != nil {
		return x.IsQcReportPublic
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceCountReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetVendorId() uint64 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *EquipmentsServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type EquipmentsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey INVENTORY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.INVENTORY_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status INVENTORY_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.INVENTORY_LIFECYCLE" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the parent inventory item
	ParentRefId uint64 `protobuf:"varint,30,opt,name=parent_ref_id,json=parentRefId,proto3" json:"parent_ref_id,omitempty"`
	// Stores the reference from
	RefFrom EQUIPMENT_REF_FROM `protobuf:"varint,31,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.EQUIPMENT_REF_FROM" json:"ref_from,omitempty"`
	// Stores the ID of the reference
	RefId uint64 `protobuf:"varint,32,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// Stores the ID of the associated family
	FamilyId uint64 `protobuf:"varint,33,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores an optional secondary unit of equipment
	SecondaryUomId uint64 `protobuf:"varint,38,opt,name=secondary_uom_id,json=secondaryUomId,proto3" json:"secondary_uom_id,omitempty"`
	// Stores the store to which the equipment is sent to
	StoreId uint64 `protobuf:"varint,50,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// Stores an optional ID of the associated storage that the equipment is stored in
	StorageId uint64 `protobuf:"varint,51,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// Stores if the associated QC report should be public
	IsQcReportPublic BOOL_FILTER `protobuf:"varint,52,opt,name=is_qc_report_public,json=isQcReportPublic,proto3,enum=Scailo.BOOL_FILTER" json:"is_qc_report_public,omitempty"`
	// Filter by the location ID
	LocationId    uint64 `protobuf:"varint,54,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EquipmentsServiceSearchAllReq) Reset() {
	*x = EquipmentsServiceSearchAllReq{}
	mi := &file_equipments_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EquipmentsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentsServiceSearchAllReq) ProtoMessage() {}

func (x *EquipmentsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_equipments_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*EquipmentsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_equipments_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *EquipmentsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetSortKey() INVENTORY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return INVENTORY_SORT_KEY_INVENTORY_SORT_KEY_ID_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *EquipmentsServiceSearchAllReq) GetStatus() INVENTORY_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return INVENTORY_LIFECYCLE_INVENTORY_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *EquipmentsServiceSearchAllReq) GetParentRefId() uint64 {
	if x != nil {
		return x.ParentRefId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetRefFrom() EQUIPMENT_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return EQUIPMENT_REF_FROM_EQUIPMENT_REF_FROM_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetSecondaryUomId() uint64 {
	if x != nil {
		return x.SecondaryUomId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *EquipmentsServiceSearchAllReq) GetIsQcReportPublic() BOOL_FILTER {
	if x != nil {
		return x.IsQcReportPublic
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *EquipmentsServiceSearchAllReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

var File_equipments_scailo_proto protoreflect.FileDescriptor

const file_equipments_scailo_proto_rawDesc = "" +
	"\n" +
	"\x17equipments.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\xad\x05\n" +
	"\x1eEquipmentsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\x12 \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x125\n" +
	"\bref_from\x18\x1f \x01(\x0e2\x1a.Scailo.EQUIPMENT_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18  \x01(\x04B\a\xbaH\x042\x02(\x00R\x05refId\x12$\n" +
	"\tfamily_id\x18! \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12,\n" +
	"\x12internal_item_code\x18# \x01(\tR\x10internalItemCode\x12#\n" +
	"\bquantity\x18% \x01(\x04B\a\xbaH\x042\x02 \x00R\bquantity\x12(\n" +
	"\x10secondary_uom_id\x18' \x01(\x04R\x0esecondaryUomId\x12-\n" +
	"\x12secondary_quantity\x18( \x01(\x04R\x11secondaryQuantity\x120\n" +
	"\x14shelf_life_timestamp\x18) \x01(\x04R\x12shelfLifeTimestamp\x12-\n" +
	"\x12warranty_timestamp\x18* \x01(\x04R\x11warrantyTimestamp\x12(\n" +
	"\vlocation_id\x186 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"locationId\x12 \n" +
	"\vdescription\x18< \x01(\tR\vdescription\x12@\n" +
	"\tform_data\x18P \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xfd\x04\n" +
	"\x1eEquipmentsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\x12 \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12,\n" +
	"\x12internal_item_code\x18# \x01(\tR\x10internalItemCode\x12(\n" +
	"\x10secondary_uom_id\x18& \x01(\x04R\x0esecondaryUomId\x12-\n" +
	"\x12secondary_quantity\x18' \x01(\x04R\x11secondaryQuantity\x120\n" +
	"\x14shelf_life_timestamp\x18( \x01(\x04R\x12shelfLifeTimestamp\x12-\n" +
	"\x12warranty_timestamp\x18) \x01(\x04R\x11warrantyTimestamp\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12-\n" +
	"\x13is_qc_report_public\x184 \x01(\bR\x10isQcReportPublic\x121\n" +
	"\x14remaining_dimensions\x187 \x01(\tR\x13remainingDimensions\x12 \n" +
	"\vdescription\x18< \x01(\tR\vdescription\x12@\n" +
	"\tform_data\x18P \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\x89\x03\n" +
	"#EquipmentsServiceSendToStoreRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x120\n" +
	"\x14shelf_life_timestamp\x18( \x01(\x04R\x12shelfLifeTimestamp\x12-\n" +
	"\x12warranty_timestamp\x18) \x01(\x04R\x11warrantyTimestamp\x12\"\n" +
	"\bstore_id\x182 \x01(\x04B\a\xbaH\x042\x02 \x00R\astoreId\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12-\n" +
	"\x13is_qc_report_public\x184 \x01(\bR\x10isQcReportPublic\x121\n" +
	"\x14remaining_dimensions\x187 \x01(\tR\x13remainingDimensions\x12 \n" +
	"\vdescription\x18< \x01(\tR\vdescription\"\x92\n" +
	"\n" +
	"\tEquipment\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x123\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1b.Scailo.INVENTORY_LIFECYCLER\x06status\x121\n" +
	"\x04logs\x18\x05 \x03(\v2\x1d.Scailo.LogbookLogInventoryLCR\x04logs\x12&\n" +
	"\x0fstore_intake_at\x18\n" +
	" \x01(\x04R\rstoreIntakeAt\x125\n" +
	"\x17consumed_or_rejected_at\x18\v \x01(\x04R\x14consumedOrRejectedAt\x12&\n" +
	"\x0frework_start_at\x18\f \x01(\x04R\rreworkStartAt\x12\"\n" +
	"\rrework_end_at\x18\r \x01(\x04R\vreworkEndAt\x125\n" +
	"\x17returned_or_scrapped_at\x18\x0e \x01(\x04R\x14returnedOrScrappedAt\x12!\n" +
	"\fdiscarded_at\x18\x0f \x01(\x04R\vdiscardedAt\x12&\n" +
	"\x0fvault_folder_id\x18\x12 \x01(\x04R\rvaultFolderId\x12\"\n" +
	"\rparent_ref_id\x18\x1e \x01(\x04R\vparentRefId\x125\n" +
	"\bref_from\x18\x1f \x01(\x0e2\x1a.Scailo.EQUIPMENT_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18  \x01(\x04R\x05refId\x12\x1b\n" +
	"\tfamily_id\x18! \x01(\x04R\bfamilyId\x12\x12\n" +
	"\x04code\x18\" \x01(\tR\x04code\x12,\n" +
	"\x12internal_item_code\x18# \x01(\tR\x10internalItemCode\x12\x12\n" +
	"\x04hash\x18$ \x01(\tR\x04hash\x12\x1a\n" +
	"\bquantity\x18% \x01(\x04R\bquantity\x12-\n" +
	"\x12quantity_remaining\x18& \x01(\x04R\x11quantityRemaining\x12(\n" +
	"\x10secondary_uom_id\x18' \x01(\x04R\x0esecondaryUomId\x12-\n" +
	"\x12secondary_quantity\x18( \x01(\x04R\x11secondaryQuantity\x120\n" +
	"\x14shelf_life_timestamp\x18) \x01(\x04R\x12shelfLifeTimestamp\x12-\n" +
	"\x12warranty_timestamp\x18* \x01(\x04R\x11warrantyTimestamp\x12\x19\n" +
	"\bstore_id\x182 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12-\n" +
	"\x13is_qc_report_public\x184 \x01(\bR\x10isQcReportPublic\x12\x1f\n" +
	"\vlocation_id\x186 \x01(\x04R\n" +
	"locationId\x121\n" +
	"\x14remaining_dimensions\x187 \x01(\tR\x13remainingDimensions\x12 \n" +
	"\vdescription\x18< \x01(\tR\vdescription\x12\x1b\n" +
	"\tshort_url\x18F \x01(\tR\bshortUrl\x123\n" +
	"\tform_data\x18P \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"7\n" +
	"\x0eEquipmentsList\x12%\n" +
	"\x04list\x18\x01 \x03(\v2\x11.Scailo.EquipmentR\x04list\"\xb1\x02\n" +
	"\x1eEquipmentsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x125\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1a.Scailo.INVENTORY_SORT_KEYR\asortKey\x123\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1b.Scailo.INVENTORY_LIFECYCLER\x06status\"\x96\x01\n" +
	"#EquipmentsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12+\n" +
	"\apayload\x18\x04 \x03(\v2\x11.Scailo.EquipmentR\apayload\"\xe1\f\n" +
	"\x1aEquipmentsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x125\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1a.Scailo.INVENTORY_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x123\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1b.Scailo.INVENTORY_LIFECYCLER\x06status\x121\n" +
	"\x15store_intake_at_start\x18\x14 \x01(\x04R\x12storeIntakeAtStart\x12-\n" +
	"\x13store_intake_at_end\x18\x15 \x01(\x04R\x10storeIntakeAtEnd\x12,\n" +
	"\x12discarded_at_start\x18\x16 \x01(\x04R\x10discardedAtStart\x12(\n" +
	"\x10discarded_at_end\x18\x17 \x01(\x04R\x0ediscardedAtEnd\x12\"\n" +
	"\rparent_ref_id\x18\x1e \x01(\x04R\vparentRefId\x125\n" +
	"\bref_from\x18\x1f \x01(\x0e2\x1a.Scailo.EQUIPMENT_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18  \x01(\x04R\x05refId\x12\x1b\n" +
	"\tfamily_id\x18! \x01(\x04R\bfamilyId\x12\x12\n" +
	"\x04code\x18\" \x01(\tR\x04code\x12,\n" +
	"\x12internal_item_code\x18# \x01(\tR\x10internalItemCode\x12\x12\n" +
	"\x04hash\x18$ \x01(\tR\x04hash\x124\n" +
	"\x16quantity_remaining_min\x18% \x01(\x04R\x14quantityRemainingMin\x124\n" +
	"\x16quantity_remaining_max\x18& \x01(\x04R\x14quantityRemainingMax\x12(\n" +
	"\x10secondary_uom_id\x18' \x01(\x04R\x0esecondaryUomId\x12;\n" +
	"\x1ashelf_life_timestamp_start\x18( \x01(\x04R\x17shelfLifeTimestampStart\x127\n" +
	"\x18shelf_life_timestamp_end\x18) \x01(\x04R\x15shelfLifeTimestampEnd\x128\n" +
	"\x18warranty_timestamp_start\x18* \x01(\x04R\x16warrantyTimestampStart\x124\n" +
	"\x16warranty_timestamp_end\x18+ \x01(\x04R\x14warrantyTimestampEnd\x12\x19\n" +
	"\bstore_id\x182 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12B\n" +
	"\x13is_qc_report_public\x184 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x10isQcReportPublic\x12\x1f\n" +
	"\vlocation_id\x186 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tvendor_id\x18Q \x01(\x04R\bvendorId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xad\v\n" +
	"\x19EquipmentsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x123\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1b.Scailo.INVENTORY_LIFECYCLER\x06status\x121\n" +
	"\x15store_intake_at_start\x18\x14 \x01(\x04R\x12storeIntakeAtStart\x12-\n" +
	"\x13store_intake_at_end\x18\x15 \x01(\x04R\x10storeIntakeAtEnd\x12,\n" +
	"\x12discarded_at_start\x18\x16 \x01(\x04R\x10discardedAtStart\x12(\n" +
	"\x10discarded_at_end\x18\x17 \x01(\x04R\x0ediscardedAtEnd\x12\"\n" +
	"\rparent_ref_id\x18\x1e \x01(\x04R\vparentRefId\x125\n" +
	"\bref_from\x18\x1f \x01(\x0e2\x1a.Scailo.EQUIPMENT_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18  \x01(\x04R\x05refId\x12\x1b\n" +
	"\tfamily_id\x18! \x01(\x04R\bfamilyId\x12\x12\n" +
	"\x04code\x18\" \x01(\tR\x04code\x12,\n" +
	"\x12internal_item_code\x18# \x01(\tR\x10internalItemCode\x12\x12\n" +
	"\x04hash\x18$ \x01(\tR\x04hash\x124\n" +
	"\x16quantity_remaining_min\x18% \x01(\x04R\x14quantityRemainingMin\x124\n" +
	"\x16quantity_remaining_max\x18& \x01(\x04R\x14quantityRemainingMax\x12(\n" +
	"\x10secondary_uom_id\x18' \x01(\x04R\x0esecondaryUomId\x12;\n" +
	"\x1ashelf_life_timestamp_start\x18( \x01(\x04R\x17shelfLifeTimestampStart\x127\n" +
	"\x18shelf_life_timestamp_end\x18) \x01(\x04R\x15shelfLifeTimestampEnd\x128\n" +
	"\x18warranty_timestamp_start\x18* \x01(\x04R\x16warrantyTimestampStart\x124\n" +
	"\x16warranty_timestamp_end\x18+ \x01(\x04R\x14warrantyTimestampEnd\x12\x19\n" +
	"\bstore_id\x182 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12B\n" +
	"\x13is_qc_report_public\x184 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x10isQcReportPublic\x12\x1f\n" +
	"\vlocation_id\x186 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tvendor_id\x18Q \x01(\x04R\bvendorId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xd1\x05\n" +
	"\x1dEquipmentsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x125\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1a.Scailo.INVENTORY_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x123\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x1b.Scailo.INVENTORY_LIFECYCLER\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\"\n" +
	"\rparent_ref_id\x18\x1e \x01(\x04R\vparentRefId\x125\n" +
	"\bref_from\x18\x1f \x01(\x0e2\x1a.Scailo.EQUIPMENT_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18  \x01(\x04R\x05refId\x12\x1b\n" +
	"\tfamily_id\x18! \x01(\x04R\bfamilyId\x12(\n" +
	"\x10secondary_uom_id\x18& \x01(\x04R\x0esecondaryUomId\x12\x19\n" +
	"\bstore_id\x182 \x01(\x04R\astoreId\x12\x1d\n" +
	"\n" +
	"storage_id\x183 \x01(\x04R\tstorageId\x12B\n" +
	"\x13is_qc_report_public\x184 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x10isQcReportPublic\x12\x1f\n" +
	"\vlocation_id\x186 \x01(\x04R\n" +
	"locationId*\xbf\x01\n" +
	"\x12EQUIPMENT_REF_FROM\x12&\n" +
	"\"EQUIPMENT_REF_FROM_ANY_UNSPECIFIED\x10\x00\x12$\n" +
	" EQUIPMENT_REF_FROM_INITIAL_STOCK\x10\x01\x12$\n" +
	" EQUIPMENT_REF_FROM_GOODS_RECEIPT\x10\x02\x125\n" +
	"1EQUIPMENT_REF_FROM_INWARD_JOB_FREE_ISSUE_MATERIAL\x10\x032\x9f\x13\n" +
	"\x11EquipmentsService\x12L\n" +
	"\x06Create\x12&.Scailo.EquipmentsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12V\n" +
	"\vSendToStore\x12+.Scailo.EquipmentsServiceSendToStoreRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\x06Update\x12&.Scailo.EquipmentsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\rSendForRework\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendForQC\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bSplitLot\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\tPartition\x12!.Scailo.InventoryPartitionRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aConsume\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reject\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x05Scrap\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12S\n" +
	"\x0eReturnMaterial\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x121\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x11.Scailo.Equipment\x127\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.Equipment\x12:\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x11.Scailo.Equipment\x12@\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.Equipment\x12>\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x16.Scailo.EquipmentsList\x12D\n" +
	"\rViewFromUUIDs\x12\x1b.Scailo.IdentifierUUIDsList\x1a\x16.Scailo.EquipmentsList\x127\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x16.Scailo.EquipmentsList\x12i\n" +
	"\x12ViewWithPagination\x12&.Scailo.EquipmentsServicePaginationReq\x1a+.Scailo.EquipmentsServicePaginationResponse\x12@\n" +
	"\x14DownloadQCReportByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.StandardFile\x12F\n" +
	"\x16DownloadQCReportByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12=\n" +
	"\x11DownloadLabelByID\x12\x12.Scailo.Identifier\x1a\x14.Scailo.StandardFile\x12C\n" +
	"\x13DownloadLabelByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12V\n" +
	"\x19ViewInventoryInteractions\x12\x16.Scailo.IdentifierUUID\x1a!.Scailo.InventoryInteractionsList\x12J\n" +
	"\tSearchAll\x12%.Scailo.EquipmentsServiceSearchAllReq\x1a\x16.Scailo.EquipmentsList\x12D\n" +
	"\x06Filter\x12\".Scailo.EquipmentsServiceFilterReq\x1a\x16.Scailo.EquipmentsList\x12A\n" +
	"\x05Count\x12!.Scailo.EquipmentsServiceCountReq\x1a\x15.Scailo.CountResponse\x12I\n" +
	"\rDownloadAsCSV\x12\".Scailo.EquipmentsServiceFilterReq\x1a\x14.Scailo.StandardFile\x12=\n" +
	"\x16DownloadImportTemplate\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBg\n" +
	"\n" +
	"com.ScailoB\x15EquipmentsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_equipments_scailo_proto_rawDescOnce sync.Once
	file_equipments_scailo_proto_rawDescData []byte
)

func file_equipments_scailo_proto_rawDescGZIP() []byte {
	file_equipments_scailo_proto_rawDescOnce.Do(func() {
		file_equipments_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_equipments_scailo_proto_rawDesc), len(file_equipments_scailo_proto_rawDesc)))
	})
	return file_equipments_scailo_proto_rawDescData
}

var file_equipments_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_equipments_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_equipments_scailo_proto_goTypes = []any{
	(EQUIPMENT_REF_FROM)(0),                                   // 0: Scailo.EQUIPMENT_REF_FROM
	(*EquipmentsServiceCreateRequest)(nil),                    // 1: Scailo.EquipmentsServiceCreateRequest
	(*EquipmentsServiceUpdateRequest)(nil),                    // 2: Scailo.EquipmentsServiceUpdateRequest
	(*EquipmentsServiceSendToStoreRequest)(nil),               // 3: Scailo.EquipmentsServiceSendToStoreRequest
	(*Equipment)(nil),                                         // 4: Scailo.Equipment
	(*EquipmentsList)(nil),                                    // 5: Scailo.EquipmentsList
	(*EquipmentsServicePaginationReq)(nil),                    // 6: Scailo.EquipmentsServicePaginationReq
	(*EquipmentsServicePaginationResponse)(nil),               // 7: Scailo.EquipmentsServicePaginationResponse
	(*EquipmentsServiceFilterReq)(nil),                        // 8: Scailo.EquipmentsServiceFilterReq
	(*EquipmentsServiceCountReq)(nil),                         // 9: Scailo.EquipmentsServiceCountReq
	(*EquipmentsServiceSearchAllReq)(nil),                     // 10: Scailo.EquipmentsServiceSearchAllReq
	(*FormFieldDatumCreateRequest)(nil),                       // 11: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                  // 12: Scailo.EmployeeMetadata
	(INVENTORY_LIFECYCLE)(0),                                  // 13: Scailo.INVENTORY_LIFECYCLE
	(*LogbookLogInventoryLC)(nil),                             // 14: Scailo.LogbookLogInventoryLC
	(*FormFieldDatum)(nil),                                    // 15: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                          // 16: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                           // 17: Scailo.SORT_ORDER
	(INVENTORY_SORT_KEY)(0),                                   // 18: Scailo.INVENTORY_SORT_KEY
	(*FormFieldDatumFilterRequest)(nil),                       // 19: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                     // 20: Scailo.IdentifierUUIDWithUserComment
	(*InventoryPartitionRequest)(nil),                         // 21: Scailo.InventoryPartitionRequest
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil), // 22: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*Identifier)(nil),                                        // 23: Scailo.Identifier
	(*IdentifierUUID)(nil),                                    // 24: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                                   // 25: Scailo.IdentifiersList
	(*IdentifierUUIDsList)(nil),                               // 26: Scailo.IdentifierUUIDsList
	(*ActiveStatus)(nil),                                      // 27: Scailo.ActiveStatus
	(*Empty)(nil),                                             // 28: Scailo.Empty
	(*StandardFile)(nil),                                      // 29: Scailo.StandardFile
	(*IdentifierResponse)(nil),                                // 30: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                         // 31: Scailo.MagicLink
	(*InventoryInteractionsList)(nil),                         // 32: Scailo.InventoryInteractionsList
	(*CountResponse)(nil),                                     // 33: Scailo.CountResponse
}
var file_equipments_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.EquipmentsServiceCreateRequest.ref_from:type_name -> Scailo.EQUIPMENT_REF_FROM
	11, // 1: Scailo.EquipmentsServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	11, // 2: Scailo.EquipmentsServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	12, // 3: Scailo.Equipment.metadata:type_name -> Scailo.EmployeeMetadata
	13, // 4: Scailo.Equipment.status:type_name -> Scailo.INVENTORY_LIFECYCLE
	14, // 5: Scailo.Equipment.logs:type_name -> Scailo.LogbookLogInventoryLC
	0,  // 6: Scailo.Equipment.ref_from:type_name -> Scailo.EQUIPMENT_REF_FROM
	15, // 7: Scailo.Equipment.form_data:type_name -> Scailo.FormFieldDatum
	4,  // 8: Scailo.EquipmentsList.list:type_name -> Scailo.Equipment
	16, // 9: Scailo.EquipmentsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 10: Scailo.EquipmentsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	18, // 11: Scailo.EquipmentsServicePaginationReq.sort_key:type_name -> Scailo.INVENTORY_SORT_KEY
	13, // 12: Scailo.EquipmentsServicePaginationReq.status:type_name -> Scailo.INVENTORY_LIFECYCLE
	4,  // 13: Scailo.EquipmentsServicePaginationResponse.payload:type_name -> Scailo.Equipment
	16, // 14: Scailo.EquipmentsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 15: Scailo.EquipmentsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	18, // 16: Scailo.EquipmentsServiceFilterReq.sort_key:type_name -> Scailo.INVENTORY_SORT_KEY
	13, // 17: Scailo.EquipmentsServiceFilterReq.status:type_name -> Scailo.INVENTORY_LIFECYCLE
	0,  // 18: Scailo.EquipmentsServiceFilterReq.ref_from:type_name -> Scailo.EQUIPMENT_REF_FROM
	16, // 19: Scailo.EquipmentsServiceFilterReq.is_qc_report_public:type_name -> Scailo.BOOL_FILTER
	19, // 20: Scailo.EquipmentsServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	16, // 21: Scailo.EquipmentsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	13, // 22: Scailo.EquipmentsServiceCountReq.status:type_name -> Scailo.INVENTORY_LIFECYCLE
	0,  // 23: Scailo.EquipmentsServiceCountReq.ref_from:type_name -> Scailo.EQUIPMENT_REF_FROM
	16, // 24: Scailo.EquipmentsServiceCountReq.is_qc_report_public:type_name -> Scailo.BOOL_FILTER
	19, // 25: Scailo.EquipmentsServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	16, // 26: Scailo.EquipmentsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	17, // 27: Scailo.EquipmentsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	18, // 28: Scailo.EquipmentsServiceSearchAllReq.sort_key:type_name -> Scailo.INVENTORY_SORT_KEY
	13, // 29: Scailo.EquipmentsServiceSearchAllReq.status:type_name -> Scailo.INVENTORY_LIFECYCLE
	0,  // 30: Scailo.EquipmentsServiceSearchAllReq.ref_from:type_name -> Scailo.EQUIPMENT_REF_FROM
	16, // 31: Scailo.EquipmentsServiceSearchAllReq.is_qc_report_public:type_name -> Scailo.BOOL_FILTER
	1,  // 32: Scailo.EquipmentsService.Create:input_type -> Scailo.EquipmentsServiceCreateRequest
	3,  // 33: Scailo.EquipmentsService.SendToStore:input_type -> Scailo.EquipmentsServiceSendToStoreRequest
	2,  // 34: Scailo.EquipmentsService.Update:input_type -> Scailo.EquipmentsServiceUpdateRequest
	20, // 35: Scailo.EquipmentsService.SendForRework:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 36: Scailo.EquipmentsService.SendForQC:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 37: Scailo.EquipmentsService.SplitLot:input_type -> Scailo.IdentifierUUIDWithUserComment
	21, // 38: Scailo.EquipmentsService.Partition:input_type -> Scailo.InventoryPartitionRequest
	20, // 39: Scailo.EquipmentsService.Consume:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 40: Scailo.EquipmentsService.Reject:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 41: Scailo.EquipmentsService.Scrap:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 42: Scailo.EquipmentsService.ReturnMaterial:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 43: Scailo.EquipmentsService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	20, // 44: Scailo.EquipmentsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	22, // 45: Scailo.EquipmentsService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	23, // 46: Scailo.EquipmentsService.ViewByID:input_type -> Scailo.Identifier
	24, // 47: Scailo.EquipmentsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	23, // 48: Scailo.EquipmentsService.ViewEssentialByID:input_type -> Scailo.Identifier
	24, // 49: Scailo.EquipmentsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	25, // 50: Scailo.EquipmentsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	26, // 51: Scailo.EquipmentsService.ViewFromUUIDs:input_type -> Scailo.IdentifierUUIDsList
	27, // 52: Scailo.EquipmentsService.ViewAll:input_type -> Scailo.ActiveStatus
	6,  // 53: Scailo.EquipmentsService.ViewWithPagination:input_type -> Scailo.EquipmentsServicePaginationReq
	23, // 54: Scailo.EquipmentsService.DownloadQCReportByID:input_type -> Scailo.Identifier
	24, // 55: Scailo.EquipmentsService.DownloadQCReportByUUID:input_type -> Scailo.IdentifierUUID
	23, // 56: Scailo.EquipmentsService.DownloadLabelByID:input_type -> Scailo.Identifier
	24, // 57: Scailo.EquipmentsService.DownloadLabelByUUID:input_type -> Scailo.IdentifierUUID
	24, // 58: Scailo.EquipmentsService.ViewInventoryInteractions:input_type -> Scailo.IdentifierUUID
	10, // 59: Scailo.EquipmentsService.SearchAll:input_type -> Scailo.EquipmentsServiceSearchAllReq
	8,  // 60: Scailo.EquipmentsService.Filter:input_type -> Scailo.EquipmentsServiceFilterReq
	9,  // 61: Scailo.EquipmentsService.Count:input_type -> Scailo.EquipmentsServiceCountReq
	8,  // 62: Scailo.EquipmentsService.DownloadAsCSV:input_type -> Scailo.EquipmentsServiceFilterReq
	28, // 63: Scailo.EquipmentsService.DownloadImportTemplate:input_type -> Scailo.Empty
	29, // 64: Scailo.EquipmentsService.ImportFromCSV:input_type -> Scailo.StandardFile
	30, // 65: Scailo.EquipmentsService.Create:output_type -> Scailo.IdentifierResponse
	30, // 66: Scailo.EquipmentsService.SendToStore:output_type -> Scailo.IdentifierResponse
	30, // 67: Scailo.EquipmentsService.Update:output_type -> Scailo.IdentifierResponse
	30, // 68: Scailo.EquipmentsService.SendForRework:output_type -> Scailo.IdentifierResponse
	30, // 69: Scailo.EquipmentsService.SendForQC:output_type -> Scailo.IdentifierResponse
	30, // 70: Scailo.EquipmentsService.SplitLot:output_type -> Scailo.IdentifierResponse
	30, // 71: Scailo.EquipmentsService.Partition:output_type -> Scailo.IdentifierResponse
	30, // 72: Scailo.EquipmentsService.Consume:output_type -> Scailo.IdentifierResponse
	30, // 73: Scailo.EquipmentsService.Reject:output_type -> Scailo.IdentifierResponse
	30, // 74: Scailo.EquipmentsService.Scrap:output_type -> Scailo.IdentifierResponse
	30, // 75: Scailo.EquipmentsService.ReturnMaterial:output_type -> Scailo.IdentifierResponse
	30, // 76: Scailo.EquipmentsService.Discard:output_type -> Scailo.IdentifierResponse
	30, // 77: Scailo.EquipmentsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	31, // 78: Scailo.EquipmentsService.CreateMagicLink:output_type -> Scailo.MagicLink
	4,  // 79: Scailo.EquipmentsService.ViewByID:output_type -> Scailo.Equipment
	4,  // 80: Scailo.EquipmentsService.ViewByUUID:output_type -> Scailo.Equipment
	4,  // 81: Scailo.EquipmentsService.ViewEssentialByID:output_type -> Scailo.Equipment
	4,  // 82: Scailo.EquipmentsService.ViewEssentialByUUID:output_type -> Scailo.Equipment
	5,  // 83: Scailo.EquipmentsService.ViewFromIDs:output_type -> Scailo.EquipmentsList
	5,  // 84: Scailo.EquipmentsService.ViewFromUUIDs:output_type -> Scailo.EquipmentsList
	5,  // 85: Scailo.EquipmentsService.ViewAll:output_type -> Scailo.EquipmentsList
	7,  // 86: Scailo.EquipmentsService.ViewWithPagination:output_type -> Scailo.EquipmentsServicePaginationResponse
	29, // 87: Scailo.EquipmentsService.DownloadQCReportByID:output_type -> Scailo.StandardFile
	29, // 88: Scailo.EquipmentsService.DownloadQCReportByUUID:output_type -> Scailo.StandardFile
	29, // 89: Scailo.EquipmentsService.DownloadLabelByID:output_type -> Scailo.StandardFile
	29, // 90: Scailo.EquipmentsService.DownloadLabelByUUID:output_type -> Scailo.StandardFile
	32, // 91: Scailo.EquipmentsService.ViewInventoryInteractions:output_type -> Scailo.InventoryInteractionsList
	5,  // 92: Scailo.EquipmentsService.SearchAll:output_type -> Scailo.EquipmentsList
	5,  // 93: Scailo.EquipmentsService.Filter:output_type -> Scailo.EquipmentsList
	33, // 94: Scailo.EquipmentsService.Count:output_type -> Scailo.CountResponse
	29, // 95: Scailo.EquipmentsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	29, // 96: Scailo.EquipmentsService.DownloadImportTemplate:output_type -> Scailo.StandardFile
	26, // 97: Scailo.EquipmentsService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	65, // [65:98] is the sub-list for method output_type
	32, // [32:65] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_equipments_scailo_proto_init() }
func file_equipments_scailo_proto_init() {
	if File_equipments_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_equipments_scailo_proto_rawDesc), len(file_equipments_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_equipments_scailo_proto_goTypes,
		DependencyIndexes: file_equipments_scailo_proto_depIdxs,
		EnumInfos:         file_equipments_scailo_proto_enumTypes,
		MessageInfos:      file_equipments_scailo_proto_msgTypes,
	}.Build()
	File_equipments_scailo_proto = out.File
	file_equipments_scailo_proto_goTypes = nil
	file_equipments_scailo_proto_depIdxs = nil
}
