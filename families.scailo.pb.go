// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: families.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores the available family types
type FAMILY_TYPE int32

const (
	// Denotes any family type (only used for filter and search queries, when family type needs to be disregarded)
	FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED FAMILY_TYPE = 0
	// Denotes a component (a family that can be sold, bought, and manufactured - this is a general purpose family)
	FAMILY_TYPE_FAMILY_TYPE_COMPONENT FAMILY_TYPE = 1
	// Denotes equipment (a family that can be used within manufacturing process as a capex item, such as machines)
	FAMILY_TYPE_FAMILY_TYPE_EQUIPMENT FAMILY_TYPE = 2
	// Denotes feedstock (a family that will be used as raw material within manufacturing process, and will be consumed)
	FAMILY_TYPE_FAMILY_TYPE_FEEDSTOCK FAMILY_TYPE = 3
	// Denotes infrastructure (a family that can be used for any non-manufacturing purpose. Examples include cars, rtubelights, computers, etc.)
	FAMILY_TYPE_FAMILY_TYPE_INFRASTRUCTURE FAMILY_TYPE = 4
	// Denotes merchandise (a family that can only be bought and sold, and will not be a part of any value addition processes)
	FAMILY_TYPE_FAMILY_TYPE_MERCHANDISE FAMILY_TYPE = 5
	// Denotes product (a family that is the final outcome of a manufacturing process. Can only be sold, but not purchased)
	FAMILY_TYPE_FAMILY_TYPE_PRODUCT FAMILY_TYPE = 6
	// Denotes service (a family that deals exclusively with services, and no goods)
	FAMILY_TYPE_FAMILY_TYPE_SERVICE FAMILY_TYPE = 7
)

// Enum value maps for FAMILY_TYPE.
var (
	FAMILY_TYPE_name = map[int32]string{
		0: "FAMILY_TYPE_ANY_UNSPECIFIED",
		1: "FAMILY_TYPE_COMPONENT",
		2: "FAMILY_TYPE_EQUIPMENT",
		3: "FAMILY_TYPE_FEEDSTOCK",
		4: "FAMILY_TYPE_INFRASTRUCTURE",
		5: "FAMILY_TYPE_MERCHANDISE",
		6: "FAMILY_TYPE_PRODUCT",
		7: "FAMILY_TYPE_SERVICE",
	}
	FAMILY_TYPE_value = map[string]int32{
		"FAMILY_TYPE_ANY_UNSPECIFIED": 0,
		"FAMILY_TYPE_COMPONENT":       1,
		"FAMILY_TYPE_EQUIPMENT":       2,
		"FAMILY_TYPE_FEEDSTOCK":       3,
		"FAMILY_TYPE_INFRASTRUCTURE":  4,
		"FAMILY_TYPE_MERCHANDISE":     5,
		"FAMILY_TYPE_PRODUCT":         6,
		"FAMILY_TYPE_SERVICE":         7,
	}
)

func (x FAMILY_TYPE) Enum() *FAMILY_TYPE {
	p := new(FAMILY_TYPE)
	*p = x
	return p
}

func (x FAMILY_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FAMILY_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_families_scailo_proto_enumTypes[0].Descriptor()
}

func (FAMILY_TYPE) Type() protoreflect.EnumType {
	return &file_families_scailo_proto_enumTypes[0]
}

func (x FAMILY_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FAMILY_TYPE.Descriptor instead.
func (FAMILY_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{0}
}

// Stores the available consumption sequences
type CONSUMPTION_SEQUENCE int32

const (
	// Denotes any consumption sequence (only used for filter and search queries, when consumption sequence needs to be disregarded)
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED CONSUMPTION_SEQUENCE = 0
	// Denotes first-in-first-out according to the intake timestamp
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_FIFO_INTAKE CONSUMPTION_SEQUENCE = 1
	// Denotes first-in-first-out according to the shelf life
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE CONSUMPTION_SEQUENCE = 2
	// Denotes first-in-first-out according to the warranty
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_FIFO_WARRANTY CONSUMPTION_SEQUENCE = 3
	// Denotes last-in-first-out according to the intake timestamp
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_LIFO_INTAKE CONSUMPTION_SEQUENCE = 4
	// Denotes last-in-first-out according to the shelf life
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE CONSUMPTION_SEQUENCE = 5
	// Denotes last-in-first-out according to the warranty
	CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_LIFO_WARRANTY CONSUMPTION_SEQUENCE = 6
)

// Enum value maps for CONSUMPTION_SEQUENCE.
var (
	CONSUMPTION_SEQUENCE_name = map[int32]string{
		0: "CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED",
		1: "CONSUMPTION_SEQUENCE_FIFO_INTAKE",
		2: "CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE",
		3: "CONSUMPTION_SEQUENCE_FIFO_WARRANTY",
		4: "CONSUMPTION_SEQUENCE_LIFO_INTAKE",
		5: "CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE",
		6: "CONSUMPTION_SEQUENCE_LIFO_WARRANTY",
	}
	CONSUMPTION_SEQUENCE_value = map[string]int32{
		"CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED": 0,
		"CONSUMPTION_SEQUENCE_FIFO_INTAKE":     1,
		"CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE": 2,
		"CONSUMPTION_SEQUENCE_FIFO_WARRANTY":   3,
		"CONSUMPTION_SEQUENCE_LIFO_INTAKE":     4,
		"CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE": 5,
		"CONSUMPTION_SEQUENCE_LIFO_WARRANTY":   6,
	}
)

func (x CONSUMPTION_SEQUENCE) Enum() *CONSUMPTION_SEQUENCE {
	p := new(CONSUMPTION_SEQUENCE)
	*p = x
	return p
}

func (x CONSUMPTION_SEQUENCE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CONSUMPTION_SEQUENCE) Descriptor() protoreflect.EnumDescriptor {
	return file_families_scailo_proto_enumTypes[1].Descriptor()
}

func (CONSUMPTION_SEQUENCE) Type() protoreflect.EnumType {
	return &file_families_scailo_proto_enumTypes[1]
}

func (x CONSUMPTION_SEQUENCE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CONSUMPTION_SEQUENCE.Descriptor instead.
func (CONSUMPTION_SEQUENCE) EnumDescriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the available sort keys
type FAMILY_SORT_KEY int32

const (
	// Fetch ordered results by id
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_ID_UNSPECIFIED FAMILY_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_CREATED_AT FAMILY_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_MODIFIED_AT FAMILY_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_APPROVED_ON FAMILY_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_APPROVED_BY FAMILY_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_APPROVER_ROLE_ID FAMILY_SORT_KEY = 5
	// Fetch ordered results by the name
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_NAME FAMILY_SORT_KEY = 10
	// Fetch ordered results by the code
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_CODE FAMILY_SORT_KEY = 12
	// Fetch ordered results by the unit quantity
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_UNIT_QUANTITY FAMILY_SORT_KEY = 13
	// Fetch ordered results by the price
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_PRICE FAMILY_SORT_KEY = 14
	// Fetch ordered results by the amendment count
	FAMILY_SORT_KEY_FAMILY_SORT_KEY_AMENDMENT_COUNT FAMILY_SORT_KEY = 15
)

// Enum value maps for FAMILY_SORT_KEY.
var (
	FAMILY_SORT_KEY_name = map[int32]string{
		0:  "FAMILY_SORT_KEY_ID_UNSPECIFIED",
		1:  "FAMILY_SORT_KEY_CREATED_AT",
		2:  "FAMILY_SORT_KEY_MODIFIED_AT",
		3:  "FAMILY_SORT_KEY_APPROVED_ON",
		4:  "FAMILY_SORT_KEY_APPROVED_BY",
		5:  "FAMILY_SORT_KEY_APPROVER_ROLE_ID",
		10: "FAMILY_SORT_KEY_NAME",
		12: "FAMILY_SORT_KEY_CODE",
		13: "FAMILY_SORT_KEY_UNIT_QUANTITY",
		14: "FAMILY_SORT_KEY_PRICE",
		15: "FAMILY_SORT_KEY_AMENDMENT_COUNT",
	}
	FAMILY_SORT_KEY_value = map[string]int32{
		"FAMILY_SORT_KEY_ID_UNSPECIFIED":   0,
		"FAMILY_SORT_KEY_CREATED_AT":       1,
		"FAMILY_SORT_KEY_MODIFIED_AT":      2,
		"FAMILY_SORT_KEY_APPROVED_ON":      3,
		"FAMILY_SORT_KEY_APPROVED_BY":      4,
		"FAMILY_SORT_KEY_APPROVER_ROLE_ID": 5,
		"FAMILY_SORT_KEY_NAME":             10,
		"FAMILY_SORT_KEY_CODE":             12,
		"FAMILY_SORT_KEY_UNIT_QUANTITY":    13,
		"FAMILY_SORT_KEY_PRICE":            14,
		"FAMILY_SORT_KEY_AMENDMENT_COUNT":  15,
	}
)

func (x FAMILY_SORT_KEY) Enum() *FAMILY_SORT_KEY {
	p := new(FAMILY_SORT_KEY)
	*p = x
	return p
}

func (x FAMILY_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FAMILY_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_families_scailo_proto_enumTypes[2].Descriptor()
}

func (FAMILY_SORT_KEY) Type() protoreflect.EnumType {
	return &file_families_scailo_proto_enumTypes[2]
}

func (x FAMILY_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FAMILY_SORT_KEY.Descriptor instead.
func (FAMILY_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the message consisting of the list of family types
type FamilyTypesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of family types
	List          []FAMILY_TYPE `protobuf:"varint,1,rep,packed,name=list,proto3,enum=Scailo.FAMILY_TYPE" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyTypesList) Reset() {
	*x = FamilyTypesList{}
	mi := &file_families_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyTypesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyTypesList) ProtoMessage() {}

func (x *FamilyTypesList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyTypesList.ProtoReflect.Descriptor instead.
func (*FamilyTypesList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *FamilyTypesList) GetList() []FAMILY_TYPE {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to create a record
type FamiliesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the family
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the family that is to be used on prints
	PrintName string `protobuf:"bytes,11,opt,name=print_name,json=printName,proto3" json:"print_name,omitempty"`
	// The unique code that represents the family
	Code string `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the family
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// The type of the family
	FamilyType FAMILY_TYPE `protobuf:"varint,15,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// The HSN/SAC code of the family
	HsnSacCode string `protobuf:"bytes,16,opt,name=hsn_sac_code,json=hsnSacCode,proto3" json:"hsn_sac_code,omitempty"`
	// Stores the ID of the associated unit of material
	UomId uint64 `protobuf:"varint,17,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the unit quantity
	UnitQuantity uint64 `protobuf:"varint,18,opt,name=unit_quantity,json=unitQuantity,proto3" json:"unit_quantity,omitempty"`
	// Stores the ID of the parent family
	ParentId uint64 `protobuf:"varint,19,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Stores if the family is a leaf family
	IsLeaf bool `protobuf:"varint,20,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// Stores the ID of the ledger
	LedgerId uint64 `protobuf:"varint,21,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Stores the ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,23,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Stores the unit price
	Price uint64 `protobuf:"varint,26,opt,name=price,proto3" json:"price,omitempty"`
	// Stores the minimum stock to maintain
	MinStockToMaintain uint64 `protobuf:"varint,27,opt,name=min_stock_to_maintain,json=minStockToMaintain,proto3" json:"min_stock_to_maintain,omitempty"`
	// Stores the consumption sequence
	ConsumptionSequence CONSUMPTION_SEQUENCE `protobuf:"varint,28,opt,name=consumption_sequence,json=consumptionSequence,proto3,enum=Scailo.CONSUMPTION_SEQUENCE" json:"consumption_sequence,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,50,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceCreateRequest) Reset() {
	*x = FamiliesServiceCreateRequest{}
	mi := &file_families_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceCreateRequest) ProtoMessage() {}

func (x *FamiliesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *FamiliesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetPrintName() string {
	if x != nil {
		return x.PrintName
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCreateRequest) GetHsnSacCode() string {
	if x != nil {
		return x.HsnSacCode
	}
	return ""
}

func (x *FamiliesServiceCreateRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetUnitQuantity() uint64 {
	if x != nil {
		return x.UnitQuantity
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *FamiliesServiceCreateRequest) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetMinStockToMaintain() uint64 {
	if x != nil {
		return x.MinStockToMaintain
	}
	return 0
}

func (x *FamiliesServiceCreateRequest) GetConsumptionSequence() CONSUMPTION_SEQUENCE {
	if x != nil {
		return x.ConsumptionSequence
	}
	return CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type FamiliesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that denotes if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the family
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the family that is to be used on prints
	PrintName string `protobuf:"bytes,11,opt,name=print_name,json=printName,proto3" json:"print_name,omitempty"`
	// The unique code that represents the family (can be updated only prior to the first approval)
	Code string `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the family
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// The type of the family (can be updated only prior to the first approval)
	FamilyType FAMILY_TYPE `protobuf:"varint,15,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// The HSN/SAC code of the family
	HsnSacCode string `protobuf:"bytes,16,opt,name=hsn_sac_code,json=hsnSacCode,proto3" json:"hsn_sac_code,omitempty"`
	// Stores the ID of the associated unit of material
	UomId uint64 `protobuf:"varint,17,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the unit quantity
	UnitQuantity uint64 `protobuf:"varint,18,opt,name=unit_quantity,json=unitQuantity,proto3" json:"unit_quantity,omitempty"`
	// Stores the ID of the parent family (can be updated only prior to the first approval)
	ParentId uint64 `protobuf:"varint,19,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Stores if the family is a leaf family (can be updated only prior to the first approval)
	IsLeaf bool `protobuf:"varint,20,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// Stores the ID of the ledger
	LedgerId uint64 `protobuf:"varint,21,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Stores the ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,23,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Stores the unit price
	Price uint64 `protobuf:"varint,26,opt,name=price,proto3" json:"price,omitempty"`
	// Stores the minimum stock to maintain
	MinStockToMaintain uint64 `protobuf:"varint,27,opt,name=min_stock_to_maintain,json=minStockToMaintain,proto3" json:"min_stock_to_maintain,omitempty"`
	// Stores the consumption sequence
	ConsumptionSequence CONSUMPTION_SEQUENCE `protobuf:"varint,28,opt,name=consumption_sequence,json=consumptionSequence,proto3,enum=Scailo.CONSUMPTION_SEQUENCE" json:"consumption_sequence,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,50,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceUpdateRequest) Reset() {
	*x = FamiliesServiceUpdateRequest{}
	mi := &file_families_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceUpdateRequest) ProtoMessage() {}

func (x *FamiliesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *FamiliesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *FamiliesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetPrintName() string {
	if x != nil {
		return x.PrintName
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceUpdateRequest) GetHsnSacCode() string {
	if x != nil {
		return x.HsnSacCode
	}
	return ""
}

func (x *FamiliesServiceUpdateRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetUnitQuantity() uint64 {
	if x != nil {
		return x.UnitQuantity
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *FamiliesServiceUpdateRequest) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetMinStockToMaintain() uint64 {
	if x != nil {
		return x.MinStockToMaintain
	}
	return 0
}

func (x *FamiliesServiceUpdateRequest) GetConsumptionSequence() CONSUMPTION_SEQUENCE {
	if x != nil {
		return x.ConsumptionSequence
	}
	return CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a family structure
type Family struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this family
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this family
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this purchase order
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the family
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The name of the family that is to be used on prints
	PrintName string `protobuf:"bytes,11,opt,name=print_name,json=printName,proto3" json:"print_name,omitempty"`
	// The unique code that represents the family
	Code string `protobuf:"bytes,12,opt,name=code,proto3" json:"code,omitempty"`
	// The description of the family
	Description string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	// The type of the family
	FamilyType FAMILY_TYPE `protobuf:"varint,15,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// The HSN/SAC code of the family
	HsnSacCode string `protobuf:"bytes,16,opt,name=hsn_sac_code,json=hsnSacCode,proto3" json:"hsn_sac_code,omitempty"`
	// Stores the ID of the associated unit of material
	UomId uint64 `protobuf:"varint,17,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the unit quantity
	UnitQuantity uint64 `protobuf:"varint,18,opt,name=unit_quantity,json=unitQuantity,proto3" json:"unit_quantity,omitempty"`
	// Stores the ID of the parent family
	ParentId uint64 `protobuf:"varint,19,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Stores if the family is a leaf family
	IsLeaf bool `protobuf:"varint,20,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// Stores the ID of the ledger
	LedgerId uint64 `protobuf:"varint,21,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Stores the ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,23,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Stores the unit price
	Price uint64 `protobuf:"varint,26,opt,name=price,proto3" json:"price,omitempty"`
	// Stores the minimum stock to maintain
	MinStockToMaintain uint64 `protobuf:"varint,27,opt,name=min_stock_to_maintain,json=minStockToMaintain,proto3" json:"min_stock_to_maintain,omitempty"`
	// Stores the consumption sequence
	ConsumptionSequence CONSUMPTION_SEQUENCE `protobuf:"varint,29,opt,name=consumption_sequence,json=consumptionSequence,proto3,enum=Scailo.CONSUMPTION_SEQUENCE" json:"consumption_sequence,omitempty"`
	// The number of times that the family has been amended
	AmendmentCount uint64 `protobuf:"varint,40,opt,name=amendment_count,json=amendmentCount,proto3" json:"amendment_count,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,50,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Family) Reset() {
	*x = Family{}
	mi := &file_families_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Family) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Family) ProtoMessage() {}

func (x *Family) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Family.ProtoReflect.Descriptor instead.
func (*Family) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *Family) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Family) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Family) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Family) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Family) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Family) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Family) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Family) GetPrintName() string {
	if x != nil {
		return x.PrintName
	}
	return ""
}

func (x *Family) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Family) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Family) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *Family) GetHsnSacCode() string {
	if x != nil {
		return x.HsnSacCode
	}
	return ""
}

func (x *Family) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *Family) GetUnitQuantity() uint64 {
	if x != nil {
		return x.UnitQuantity
	}
	return 0
}

func (x *Family) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Family) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *Family) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *Family) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *Family) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Family) GetMinStockToMaintain() uint64 {
	if x != nil {
		return x.MinStockToMaintain
	}
	return 0
}

func (x *Family) GetConsumptionSequence() CONSUMPTION_SEQUENCE {
	if x != nil {
		return x.ConsumptionSequence
	}
	return CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED
}

func (x *Family) GetAmendmentCount() uint64 {
	if x != nil {
		return x.AmendmentCount
	}
	return 0
}

func (x *Family) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the message consisting of the list of families
type FamiliesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of families
	List          []*Family `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesList) Reset() {
	*x = FamiliesList{}
	mi := &file_families_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesList) ProtoMessage() {}

func (x *FamiliesList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesList.ProtoReflect.Descriptor instead.
func (*FamiliesList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *FamiliesList) GetList() []*Family {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type FamiliesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey FAMILY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.FAMILY_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this family
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServicePaginationReq) Reset() {
	*x = FamiliesServicePaginationReq{}
	mi := &file_families_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServicePaginationReq) ProtoMessage() {}

func (x *FamiliesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*FamiliesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *FamiliesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FamiliesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FamiliesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *FamiliesServicePaginationReq) GetSortKey() FAMILY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return FAMILY_SORT_KEY_FAMILY_SORT_KEY_ID_UNSPECIFIED
}

func (x *FamiliesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type FamiliesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Family `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServicePaginationResponse) Reset() {
	*x = FamiliesServicePaginationResponse{}
	mi := &file_families_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServicePaginationResponse) ProtoMessage() {}

func (x *FamiliesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*FamiliesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *FamiliesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FamiliesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FamiliesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FamiliesServicePaginationResponse) GetPayload() []*Family {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type FamiliesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey FAMILY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.FAMILY_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this family
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Filter with the given multiple statuses (if the list is not empty). All the records that match any of the statuses will be returned
	MultiStatus []STANDARD_LIFECYCLE_STATUS `protobuf:"varint,100,rep,packed,name=multi_status,json=multiStatus,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"multi_status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the family
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code that represents the family
	Code string `protobuf:"bytes,22,opt,name=code,proto3" json:"code,omitempty"`
	// The type of the family
	FamilyType FAMILY_TYPE `protobuf:"varint,25,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// Filter from any of the given family types. All the records that match any of the family types will be returned
	MultiFamilyType []FAMILY_TYPE `protobuf:"varint,250,rep,packed,name=multi_family_type,json=multiFamilyType,proto3,enum=Scailo.FAMILY_TYPE" json:"multi_family_type,omitempty"`
	// The HSN/SAC code of the family
	HsnSacCode string `protobuf:"bytes,26,opt,name=hsn_sac_code,json=hsnSacCode,proto3" json:"hsn_sac_code,omitempty"`
	// Stores the ID of the associated unit of material
	UomId uint64 `protobuf:"varint,27,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the unit quantity
	UnitQuantity uint64 `protobuf:"varint,28,opt,name=unit_quantity,json=unitQuantity,proto3" json:"unit_quantity,omitempty"`
	// Stores the ID of the parent family
	ParentId uint64 `protobuf:"varint,29,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf BOOL_FILTER `protobuf:"varint,30,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	// Stores the ID of the ledger
	LedgerId uint64 `protobuf:"varint,31,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Stores the ID of the QC group
	QcGroupId uint64 `protobuf:"varint,32,opt,name=qc_group_id,json=qcGroupId,proto3" json:"qc_group_id,omitempty"`
	// Stores the ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,33,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Stores the consumption sequence
	ConsumptionSequence CONSUMPTION_SEQUENCE `protobuf:"varint,39,opt,name=consumption_sequence,json=consumptionSequence,proto3,enum=Scailo.CONSUMPTION_SEQUENCE" json:"consumption_sequence,omitempty"`
	// Filter by families that are present in the given parent storage ID (and all the corresponding child storage IDs)
	ParentStorageId uint64 `protobuf:"varint,50,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Filter by families that have the given label ID
	LabelId uint64 `protobuf:"varint,60,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceFilterReq) Reset() {
	*x = FamiliesServiceFilterReq{}
	mi := &file_families_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceFilterReq) ProtoMessage() {}

func (x *FamiliesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*FamiliesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *FamiliesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetSortKey() FAMILY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return FAMILY_SORT_KEY_FAMILY_SORT_KEY_ID_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamiliesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetMultiStatus() []STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.MultiStatus
	}
	return nil
}

func (x *FamiliesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamiliesServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FamiliesServiceFilterReq) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetMultiFamilyType() []FAMILY_TYPE {
	if x != nil {
		return x.MultiFamilyType
	}
	return nil
}

func (x *FamiliesServiceFilterReq) GetHsnSacCode() string {
	if x != nil {
		return x.HsnSacCode
	}
	return ""
}

func (x *FamiliesServiceFilterReq) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetUnitQuantity() uint64 {
	if x != nil {
		return x.UnitQuantity
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetQcGroupId() uint64 {
	if x != nil {
		return x.QcGroupId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetConsumptionSequence() CONSUMPTION_SEQUENCE {
	if x != nil {
		return x.ConsumptionSequence
	}
	return CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceFilterReq) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *FamiliesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request to count all families with the given criteria
type FamiliesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this family
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Filter with the given multiple statuses (if the list is not empty). All the records that match any of the statuses will be returned
	MultiStatus []STANDARD_LIFECYCLE_STATUS `protobuf:"varint,100,rep,packed,name=multi_status,json=multiStatus,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"multi_status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the family
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code that represents the family
	Code string `protobuf:"bytes,22,opt,name=code,proto3" json:"code,omitempty"`
	// The type of the family
	FamilyType FAMILY_TYPE `protobuf:"varint,25,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// Filter from any of the given family types. All the records that match any of the family types will be returned
	MultiFamilyType []FAMILY_TYPE `protobuf:"varint,250,rep,packed,name=multi_family_type,json=multiFamilyType,proto3,enum=Scailo.FAMILY_TYPE" json:"multi_family_type,omitempty"`
	// The HSN/SAC code of the family
	HsnSacCode string `protobuf:"bytes,26,opt,name=hsn_sac_code,json=hsnSacCode,proto3" json:"hsn_sac_code,omitempty"`
	// Stores the ID of the associated unit of material
	UomId uint64 `protobuf:"varint,27,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the unit quantity
	UnitQuantity uint64 `protobuf:"varint,28,opt,name=unit_quantity,json=unitQuantity,proto3" json:"unit_quantity,omitempty"`
	// Stores the ID of the parent family
	ParentId uint64 `protobuf:"varint,29,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf BOOL_FILTER `protobuf:"varint,30,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	// Stores the ID of the ledger
	LedgerId uint64 `protobuf:"varint,31,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// Stores the ID of the QC group
	QcGroupId uint64 `protobuf:"varint,32,opt,name=qc_group_id,json=qcGroupId,proto3" json:"qc_group_id,omitempty"`
	// Stores the ID of the tax group
	TaxGroupId uint64 `protobuf:"varint,33,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// Stores the consumption sequence
	ConsumptionSequence CONSUMPTION_SEQUENCE `protobuf:"varint,39,opt,name=consumption_sequence,json=consumptionSequence,proto3,enum=Scailo.CONSUMPTION_SEQUENCE" json:"consumption_sequence,omitempty"`
	// Filter by families that are present in the given parent storage ID (and all the corresponding child storage IDs)
	ParentStorageId uint64 `protobuf:"varint,50,opt,name=parent_storage_id,json=parentStorageId,proto3" json:"parent_storage_id,omitempty"`
	// Filter by families that have the given label ID
	LabelId uint64 `protobuf:"varint,60,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceCountReq) Reset() {
	*x = FamiliesServiceCountReq{}
	mi := &file_families_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceCountReq) ProtoMessage() {}

func (x *FamiliesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceCountReq.ProtoReflect.Descriptor instead.
func (*FamiliesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *FamiliesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamiliesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCountReq) GetMultiStatus() []STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.MultiStatus
	}
	return nil
}

func (x *FamiliesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FamiliesServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FamiliesServiceCountReq) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCountReq) GetMultiFamilyType() []FAMILY_TYPE {
	if x != nil {
		return x.MultiFamilyType
	}
	return nil
}

func (x *FamiliesServiceCountReq) GetHsnSacCode() string {
	if x != nil {
		return x.HsnSacCode
	}
	return ""
}

func (x *FamiliesServiceCountReq) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetUnitQuantity() uint64 {
	if x != nil {
		return x.UnitQuantity
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCountReq) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetQcGroupId() uint64 {
	if x != nil {
		return x.QcGroupId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetConsumptionSequence() CONSUMPTION_SEQUENCE {
	if x != nil {
		return x.ConsumptionSequence
	}
	return CONSUMPTION_SEQUENCE_CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceCountReq) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *FamiliesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type FamiliesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey FAMILY_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.FAMILY_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Filter with the given multiple statuses (if the list is not empty). All the records that match any of the statuses will be returned
	MultiStatus []STANDARD_LIFECYCLE_STATUS `protobuf:"varint,100,rep,packed,name=multi_status,json=multiStatus,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"multi_status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The type of the family
	FamilyType FAMILY_TYPE `protobuf:"varint,25,opt,name=family_type,json=familyType,proto3,enum=Scailo.FAMILY_TYPE" json:"family_type,omitempty"`
	// Filter from any of the given family types. All the records that match any of the family types will be returned
	MultiFamilyType []FAMILY_TYPE `protobuf:"varint,250,rep,packed,name=multi_family_type,json=multiFamilyType,proto3,enum=Scailo.FAMILY_TYPE" json:"multi_family_type,omitempty"`
	// The ID of the associated non-leaf parent family
	ParentId uint64 `protobuf:"varint,29,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,30,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceSearchAllReq) Reset() {
	*x = FamiliesServiceSearchAllReq{}
	mi := &file_families_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceSearchAllReq) ProtoMessage() {}

func (x *FamiliesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*FamiliesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *FamiliesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *FamiliesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FamiliesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FamiliesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *FamiliesServiceSearchAllReq) GetSortKey() FAMILY_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return FAMILY_SORT_KEY_FAMILY_SORT_KEY_ID_UNSPECIFIED
}

func (x *FamiliesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamiliesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *FamiliesServiceSearchAllReq) GetMultiStatus() []STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.MultiStatus
	}
	return nil
}

func (x *FamiliesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *FamiliesServiceSearchAllReq) GetFamilyType() FAMILY_TYPE {
	if x != nil {
		return x.FamilyType
	}
	return FAMILY_TYPE_FAMILY_TYPE_ANY_UNSPECIFIED
}

func (x *FamiliesServiceSearchAllReq) GetMultiFamilyType() []FAMILY_TYPE {
	if x != nil {
		return x.MultiFamilyType
	}
	return nil
}

func (x *FamiliesServiceSearchAllReq) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FamiliesServiceSearchAllReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

// Describes the parameters that are required to filter the prospective families for a record represented by the given UUID
type FilterFamiliesReqForIdentifier struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UUID of the resource
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The families filter to apply
	Filter        *FamiliesServiceFilterReq `protobuf:"bytes,10,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterFamiliesReqForIdentifier) Reset() {
	*x = FilterFamiliesReqForIdentifier{}
	mi := &file_families_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterFamiliesReqForIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterFamiliesReqForIdentifier) ProtoMessage() {}

func (x *FilterFamiliesReqForIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterFamiliesReqForIdentifier.ProtoReflect.Descriptor instead.
func (*FilterFamiliesReqForIdentifier) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *FilterFamiliesReqForIdentifier) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FilterFamiliesReqForIdentifier) GetFilter() *FamiliesServiceFilterReq {
	if x != nil {
		return x.Filter
	}
	return nil
}

// Describes the parameters necessary to create a family label
type FamiliesServiceLabelCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the label ID
	LabelId       uint64 `protobuf:"varint,11,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceLabelCreateRequest) Reset() {
	*x = FamiliesServiceLabelCreateRequest{}
	mi := &file_families_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceLabelCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceLabelCreateRequest) ProtoMessage() {}

func (x *FamiliesServiceLabelCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceLabelCreateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceLabelCreateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *FamiliesServiceLabelCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceLabelCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamiliesServiceLabelCreateRequest) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

// Describes the parameters that constitute a family label
type FamilyLabel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this family
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the label ID
	LabelId       uint64 `protobuf:"varint,11,opt,name=label_id,json=labelId,proto3" json:"label_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyLabel) Reset() {
	*x = FamilyLabel{}
	mi := &file_families_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyLabel) ProtoMessage() {}

func (x *FamilyLabel) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyLabel.ProtoReflect.Descriptor instead.
func (*FamilyLabel) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *FamilyLabel) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamilyLabel) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FamilyLabel) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *FamilyLabel) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *FamilyLabel) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamilyLabel) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamilyLabel) GetLabelId() uint64 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

// Describes the message consisting of the list of family labels
type FamilyLabelsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*FamilyLabel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyLabelsList) Reset() {
	*x = FamilyLabelsList{}
	mi := &file_families_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyLabelsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyLabelsList) ProtoMessage() {}

func (x *FamilyLabelsList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyLabelsList.ProtoReflect.Descriptor instead.
func (*FamilyLabelsList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *FamilyLabelsList) GetList() []*FamilyLabel {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to create a family storage
type FamiliesServiceStorageCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the storage ID
	StorageId     uint64 `protobuf:"varint,11,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceStorageCreateRequest) Reset() {
	*x = FamiliesServiceStorageCreateRequest{}
	mi := &file_families_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceStorageCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceStorageCreateRequest) ProtoMessage() {}

func (x *FamiliesServiceStorageCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceStorageCreateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceStorageCreateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *FamiliesServiceStorageCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceStorageCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamiliesServiceStorageCreateRequest) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

// Describes the parameters that constitute a family storage
type FamilyStorage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this family
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the storage ID
	StorageId     uint64 `protobuf:"varint,11,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyStorage) Reset() {
	*x = FamilyStorage{}
	mi := &file_families_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyStorage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyStorage) ProtoMessage() {}

func (x *FamilyStorage) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyStorage.ProtoReflect.Descriptor instead.
func (*FamilyStorage) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *FamilyStorage) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamilyStorage) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FamilyStorage) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *FamilyStorage) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *FamilyStorage) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamilyStorage) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamilyStorage) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

// Describes the message consisting of the list of family storages
type FamilyStoragesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*FamilyStorage `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyStoragesList) Reset() {
	*x = FamilyStoragesList{}
	mi := &file_families_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyStoragesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyStoragesList) ProtoMessage() {}

func (x *FamilyStoragesList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyStoragesList.ProtoReflect.Descriptor instead.
func (*FamilyStoragesList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *FamilyStoragesList) GetList() []*FamilyStorage {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to check if a family unit conversion is available
type FamiliesServiceUnitConversionPresenceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the unit of material ID
	UomId         uint64 `protobuf:"varint,11,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceUnitConversionPresenceRequest) Reset() {
	*x = FamiliesServiceUnitConversionPresenceRequest{}
	mi := &file_families_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceUnitConversionPresenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceUnitConversionPresenceRequest) ProtoMessage() {}

func (x *FamiliesServiceUnitConversionPresenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceUnitConversionPresenceRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceUnitConversionPresenceRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *FamiliesServiceUnitConversionPresenceRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamiliesServiceUnitConversionPresenceRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

// Describes the parameters necessary to create a family unit conversion
type FamiliesServiceUnitConversionCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the unit of material ID
	UomId uint64 `protobuf:"varint,11,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the factor
	Factor uint64 `protobuf:"varint,12,opt,name=factor,proto3" json:"factor,omitempty"`
	// Stores the divisor
	Divisor       uint64 `protobuf:"varint,13,opt,name=divisor,proto3" json:"divisor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceUnitConversionCreateRequest) Reset() {
	*x = FamiliesServiceUnitConversionCreateRequest{}
	mi := &file_families_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceUnitConversionCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceUnitConversionCreateRequest) ProtoMessage() {}

func (x *FamiliesServiceUnitConversionCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceUnitConversionCreateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceUnitConversionCreateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *FamiliesServiceUnitConversionCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceUnitConversionCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamiliesServiceUnitConversionCreateRequest) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamiliesServiceUnitConversionCreateRequest) GetFactor() uint64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *FamiliesServiceUnitConversionCreateRequest) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

// Describes the parameters that constitute a family unit conversion
type FamilyUnitConversion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this family
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the unit of material ID
	UomId uint64 `protobuf:"varint,11,opt,name=uom_id,json=uomId,proto3" json:"uom_id,omitempty"`
	// Stores the factor
	Factor uint64 `protobuf:"varint,12,opt,name=factor,proto3" json:"factor,omitempty"`
	// Stores the divisor
	Divisor       uint64 `protobuf:"varint,13,opt,name=divisor,proto3" json:"divisor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyUnitConversion) Reset() {
	*x = FamilyUnitConversion{}
	mi := &file_families_scailo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyUnitConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyUnitConversion) ProtoMessage() {}

func (x *FamilyUnitConversion) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyUnitConversion.ProtoReflect.Descriptor instead.
func (*FamilyUnitConversion) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{19}
}

func (x *FamilyUnitConversion) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamilyUnitConversion) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FamilyUnitConversion) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *FamilyUnitConversion) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *FamilyUnitConversion) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamilyUnitConversion) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamilyUnitConversion) GetUomId() uint64 {
	if x != nil {
		return x.UomId
	}
	return 0
}

func (x *FamilyUnitConversion) GetFactor() uint64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *FamilyUnitConversion) GetDivisor() uint64 {
	if x != nil {
		return x.Divisor
	}
	return 0
}

// Describes the message consisting of the list of family unit conversions
type FamilyUnitConversionsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*FamilyUnitConversion `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyUnitConversionsList) Reset() {
	*x = FamilyUnitConversionsList{}
	mi := &file_families_scailo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyUnitConversionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyUnitConversionsList) ProtoMessage() {}

func (x *FamilyUnitConversionsList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyUnitConversionsList.ProtoReflect.Descriptor instead.
func (*FamilyUnitConversionsList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{20}
}

func (x *FamilyUnitConversionsList) GetList() []*FamilyUnitConversion {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to create a family qc group
type FamiliesServiceQCGroupCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the qc group ID
	QcGroupId     uint64 `protobuf:"varint,11,opt,name=qc_group_id,json=qcGroupId,proto3" json:"qc_group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceQCGroupCreateRequest) Reset() {
	*x = FamiliesServiceQCGroupCreateRequest{}
	mi := &file_families_scailo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceQCGroupCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceQCGroupCreateRequest) ProtoMessage() {}

func (x *FamiliesServiceQCGroupCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceQCGroupCreateRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceQCGroupCreateRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{21}
}

func (x *FamiliesServiceQCGroupCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceQCGroupCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamiliesServiceQCGroupCreateRequest) GetQcGroupId() uint64 {
	if x != nil {
		return x.QcGroupId
	}
	return 0
}

// Describes the parameters that constitute a family qc group
type FamilyQCGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this family
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,10,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the qc group ID
	QcGroupId     uint64 `protobuf:"varint,11,opt,name=qc_group_id,json=qcGroupId,proto3" json:"qc_group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyQCGroup) Reset() {
	*x = FamilyQCGroup{}
	mi := &file_families_scailo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyQCGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyQCGroup) ProtoMessage() {}

func (x *FamilyQCGroup) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyQCGroup.ProtoReflect.Descriptor instead.
func (*FamilyQCGroup) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{22}
}

func (x *FamilyQCGroup) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *FamilyQCGroup) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FamilyQCGroup) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *FamilyQCGroup) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *FamilyQCGroup) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamilyQCGroup) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *FamilyQCGroup) GetQcGroupId() uint64 {
	if x != nil {
		return x.QcGroupId
	}
	return 0
}

// Describes the message consisting of the list of family qc groups
type FamilyQCGroupsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*FamilyQCGroup `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamilyQCGroupsList) Reset() {
	*x = FamilyQCGroupsList{}
	mi := &file_families_scailo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamilyQCGroupsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamilyQCGroupsList) ProtoMessage() {}

func (x *FamilyQCGroupsList) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamilyQCGroupsList.ProtoReflect.Descriptor instead.
func (*FamilyQCGroupsList) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{23}
}

func (x *FamilyQCGroupsList) GetList() []*FamilyQCGroup {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to update a family's price
type FamiliesServiceUpdatePriceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the family
	Uuid string `protobuf:"bytes,10,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Stores the unit price
	Price         uint64 `protobuf:"varint,26,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FamiliesServiceUpdatePriceRequest) Reset() {
	*x = FamiliesServiceUpdatePriceRequest{}
	mi := &file_families_scailo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceUpdatePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceUpdatePriceRequest) ProtoMessage() {}

func (x *FamiliesServiceUpdatePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceUpdatePriceRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceUpdatePriceRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{24}
}

func (x *FamiliesServiceUpdatePriceRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceUpdatePriceRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FamiliesServiceUpdatePriceRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// Describes the parameters necessary to update a family's min stock to maintain
type FamiliesServiceUpdateMinStockToMaintainRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the family
	Uuid string `protobuf:"bytes,10,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Stores the minimum stock to maintain
	MinStockToMaintain uint64 `protobuf:"varint,27,opt,name=min_stock_to_maintain,json=minStockToMaintain,proto3" json:"min_stock_to_maintain,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) Reset() {
	*x = FamiliesServiceUpdateMinStockToMaintainRequest{}
	mi := &file_families_scailo_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FamiliesServiceUpdateMinStockToMaintainRequest) ProtoMessage() {}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_families_scailo_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FamiliesServiceUpdateMinStockToMaintainRequest.ProtoReflect.Descriptor instead.
func (*FamiliesServiceUpdateMinStockToMaintainRequest) Descriptor() ([]byte, []int) {
	return file_families_scailo_proto_rawDescGZIP(), []int{25}
}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FamiliesServiceUpdateMinStockToMaintainRequest) GetMinStockToMaintain() uint64 {
	if x != nil {
		return x.MinStockToMaintain
	}
	return 0
}

var File_families_scailo_proto protoreflect.FileDescriptor

const file_families_scailo_proto_rawDesc = "" +
	"\n" +
	"\x15families.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\":\n" +
	"\x0fFamilyTypesList\x12'\n" +
	"\x04list\x18\x01 \x03(\x0e2\x13.Scailo.FAMILY_TYPER\x04list\"\xcd\x06\n" +
	"\x1cFamiliesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12&\n" +
	"\n" +
	"print_name\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tprintName\x12\x1b\n" +
	"\x04code\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12)\n" +
	"\vdescription\x18\x0e \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\x124\n" +
	"\vfamily_type\x18\x0f \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12)\n" +
	"\fhsn_sac_code\x18\x10 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"hsnSacCode\x12\x1e\n" +
	"\x06uom_id\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12,\n" +
	"\runit_quantity\x18\x12 \x01(\x04B\a\xbaH\x042\x02 \x00R\funitQuantity\x12$\n" +
	"\tparent_id\x18\x13 \x01(\x04B\a\xbaH\x042\x02(\x00R\bparentId\x12\x17\n" +
	"\ais_leaf\x18\x14 \x01(\bR\x06isLeaf\x12$\n" +
	"\tledger_id\x18\x15 \x01(\x04B\a\xbaH\x042\x02(\x00R\bledgerId\x12)\n" +
	"\ftax_group_id\x18\x17 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1d\n" +
	"\x05price\x18\x1a \x01(\x04B\a\xbaH\x042\x02(\x00R\x05price\x12:\n" +
	"\x15min_stock_to_maintain\x18\x1b \x01(\x04B\a\xbaH\x042\x02(\x00R\x12minStockToMaintain\x12O\n" +
	"\x14consumption_sequence\x18\x1c \x01(\x0e2\x1c.Scailo.CONSUMPTION_SEQUENCER\x13consumptionSequence\x12@\n" +
	"\tform_data\x182 \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xe8\x06\n" +
	"\x1cFamiliesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12&\n" +
	"\n" +
	"print_name\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\tprintName\x12\x1b\n" +
	"\x04code\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12)\n" +
	"\vdescription\x18\x0e \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\x124\n" +
	"\vfamily_type\x18\x0f \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12)\n" +
	"\fhsn_sac_code\x18\x10 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\n" +
	"hsnSacCode\x12\x1e\n" +
	"\x06uom_id\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12,\n" +
	"\runit_quantity\x18\x12 \x01(\x04B\a\xbaH\x042\x02 \x00R\funitQuantity\x12$\n" +
	"\tparent_id\x18\x13 \x01(\x04B\a\xbaH\x042\x02(\x00R\bparentId\x12\x17\n" +
	"\ais_leaf\x18\x14 \x01(\bR\x06isLeaf\x12$\n" +
	"\tledger_id\x18\x15 \x01(\x04B\a\xbaH\x042\x02(\x00R\bledgerId\x12)\n" +
	"\ftax_group_id\x18\x17 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1d\n" +
	"\x05price\x18\x1a \x01(\x04B\a\xbaH\x042\x02(\x00R\x05price\x12:\n" +
	"\x15min_stock_to_maintain\x18\x1b \x01(\x04B\a\xbaH\x042\x02(\x00R\x12minStockToMaintain\x12O\n" +
	"\x14consumption_sequence\x18\x1c \x01(\x0e2\x1c.Scailo.CONSUMPTION_SEQUENCER\x13consumptionSequence\x12@\n" +
	"\tform_data\x182 \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xa5\a\n" +
	"\x06Family\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"print_name\x18\v \x01(\tR\tprintName\x12\x12\n" +
	"\x04code\x18\f \x01(\tR\x04code\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\x124\n" +
	"\vfamily_type\x18\x0f \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12 \n" +
	"\fhsn_sac_code\x18\x10 \x01(\tR\n" +
	"hsnSacCode\x12\x15\n" +
	"\x06uom_id\x18\x11 \x01(\x04R\x05uomId\x12#\n" +
	"\runit_quantity\x18\x12 \x01(\x04R\funitQuantity\x12\x1b\n" +
	"\tparent_id\x18\x13 \x01(\x04R\bparentId\x12\x17\n" +
	"\ais_leaf\x18\x14 \x01(\bR\x06isLeaf\x12\x1b\n" +
	"\tledger_id\x18\x15 \x01(\x04R\bledgerId\x12 \n" +
	"\ftax_group_id\x18\x17 \x01(\x04R\n" +
	"taxGroupId\x12\x14\n" +
	"\x05price\x18\x1a \x01(\x04R\x05price\x121\n" +
	"\x15min_stock_to_maintain\x18\x1b \x01(\x04R\x12minStockToMaintain\x12O\n" +
	"\x14consumption_sequence\x18\x1d \x01(\x0e2\x1c.Scailo.CONSUMPTION_SEQUENCER\x13consumptionSequence\x12'\n" +
	"\x0famendment_count\x18( \x01(\x04R\x0eamendmentCount\x123\n" +
	"\tform_data\x182 \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"2\n" +
	"\fFamiliesList\x12\"\n" +
	"\x04list\x18\x01 \x03(\v2\x0e.Scailo.FamilyR\x04list\"\xb2\x02\n" +
	"\x1cFamiliesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.FAMILY_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x91\x01\n" +
	"!FamiliesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12(\n" +
	"\apayload\x18\x04 \x03(\v2\x0e.Scailo.FamilyR\apayload\"\xbe\v\n" +
	"\x18FamiliesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.FAMILY_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12D\n" +
	"\fmulti_status\x18d \x03(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\vmultiStatus\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x16 \x01(\tR\x04code\x124\n" +
	"\vfamily_type\x18\x19 \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12@\n" +
	"\x11multi_family_type\x18\xfa\x01 \x03(\x0e2\x13.Scailo.FAMILY_TYPER\x0fmultiFamilyType\x12 \n" +
	"\fhsn_sac_code\x18\x1a \x01(\tR\n" +
	"hsnSacCode\x12\x15\n" +
	"\x06uom_id\x18\x1b \x01(\x04R\x05uomId\x12#\n" +
	"\runit_quantity\x18\x1c \x01(\x04R\funitQuantity\x12\x1b\n" +
	"\tparent_id\x18\x1d \x01(\x04R\bparentId\x12,\n" +
	"\ais_leaf\x18\x1e \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\x12\x1b\n" +
	"\tledger_id\x18\x1f \x01(\x04R\bledgerId\x12\x1e\n" +
	"\vqc_group_id\x18  \x01(\x04R\tqcGroupId\x12 \n" +
	"\ftax_group_id\x18! \x01(\x04R\n" +
	"taxGroupId\x12O\n" +
	"\x14consumption_sequence\x18' \x01(\x0e2\x1c.Scailo.CONSUMPTION_SEQUENCER\x13consumptionSequence\x12*\n" +
	"\x11parent_storage_id\x182 \x01(\x04R\x0fparentStorageId\x12\x19\n" +
	"\blabel_id\x18< \x01(\x04R\alabelId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\x8d\n" +
	"\n" +
	"\x17FamiliesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12D\n" +
	"\fmulti_status\x18d \x03(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\vmultiStatus\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x16 \x01(\tR\x04code\x124\n" +
	"\vfamily_type\x18\x19 \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12@\n" +
	"\x11multi_family_type\x18\xfa\x01 \x03(\x0e2\x13.Scailo.FAMILY_TYPER\x0fmultiFamilyType\x12 \n" +
	"\fhsn_sac_code\x18\x1a \x01(\tR\n" +
	"hsnSacCode\x12\x15\n" +
	"\x06uom_id\x18\x1b \x01(\x04R\x05uomId\x12#\n" +
	"\runit_quantity\x18\x1c \x01(\x04R\funitQuantity\x12\x1b\n" +
	"\tparent_id\x18\x1d \x01(\x04R\bparentId\x12,\n" +
	"\ais_leaf\x18\x1e \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\x12\x1b\n" +
	"\tledger_id\x18\x1f \x01(\x04R\bledgerId\x12\x1e\n" +
	"\vqc_group_id\x18  \x01(\x04R\tqcGroupId\x12 \n" +
	"\ftax_group_id\x18! \x01(\x04R\n" +
	"taxGroupId\x12O\n" +
	"\x14consumption_sequence\x18' \x01(\x0e2\x1c.Scailo.CONSUMPTION_SEQUENCER\x13consumptionSequence\x12*\n" +
	"\x11parent_storage_id\x182 \x01(\x04R\x0fparentStorageId\x12\x19\n" +
	"\blabel_id\x18< \x01(\x04R\alabelId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\x83\x05\n" +
	"\x1bFamiliesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.FAMILY_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12D\n" +
	"\fmulti_status\x18d \x03(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\vmultiStatus\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x124\n" +
	"\vfamily_type\x18\x19 \x01(\x0e2\x13.Scailo.FAMILY_TYPER\n" +
	"familyType\x12@\n" +
	"\x11multi_family_type\x18\xfa\x01 \x03(\x0e2\x13.Scailo.FAMILY_TYPER\x0fmultiFamilyType\x12\x1b\n" +
	"\tparent_id\x18\x1d \x01(\x04R\bparentId\x12,\n" +
	"\ais_leaf\x18\x1e \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\"x\n" +
	"\x1eFilterFamiliesReqForIdentifier\x12\x1c\n" +
	"\x04uuid\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x128\n" +
	"\x06filter\x18\n" +
	" \x01(\v2 .Scailo.FamiliesServiceFilterReqR\x06filter\"\x90\x01\n" +
	"!FamiliesServiceLabelCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12$\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12\"\n" +
	"\blabel_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\alabelId\"\xab\x02\n" +
	"\vFamilyLabel\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1b\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04R\bfamilyId\x12\x19\n" +
	"\blabel_id\x18\v \x01(\x04R\alabelId\";\n" +
	"\x10FamilyLabelsList\x12'\n" +
	"\x04list\x18\x01 \x03(\v2\x13.Scailo.FamilyLabelR\x04list\"\x96\x01\n" +
	"#FamiliesServiceStorageCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12$\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12&\n" +
	"\n" +
	"storage_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\tstorageId\"\xb1\x02\n" +
	"\rFamilyStorage\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1b\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04R\bfamilyId\x12\x1d\n" +
	"\n" +
	"storage_id\x18\v \x01(\x04R\tstorageId\"?\n" +
	"\x12FamilyStoragesList\x12)\n" +
	"\x04list\x18\x01 \x03(\v2\x15.Scailo.FamilyStorageR\x04list\"t\n" +
	",FamiliesServiceUnitConversionPresenceRequest\x12$\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12\x1e\n" +
	"\x06uom_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\"\xd9\x01\n" +
	"*FamiliesServiceUnitConversionCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12$\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12\x1e\n" +
	"\x06uom_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x05uomId\x12\x1f\n" +
	"\x06factor\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x06factor\x12!\n" +
	"\adivisor\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\adivisor\"\xe2\x02\n" +
	"\x14FamilyUnitConversion\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1b\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04R\bfamilyId\x12\x15\n" +
	"\x06uom_id\x18\v \x01(\x04R\x05uomId\x12\x16\n" +
	"\x06factor\x18\f \x01(\x04R\x06factor\x12\x18\n" +
	"\adivisor\x18\r \x01(\x04R\adivisor\"M\n" +
	"\x19FamilyUnitConversionsList\x120\n" +
	"\x04list\x18\x01 \x03(\v2\x1c.Scailo.FamilyUnitConversionR\x04list\"\x97\x01\n" +
	"#FamiliesServiceQCGroupCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12$\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x12'\n" +
	"\vqc_group_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\tqcGroupId\"\xb2\x02\n" +
	"\rFamilyQCGroup\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1b\n" +
	"\tfamily_id\x18\n" +
	" \x01(\x04R\bfamilyId\x12\x1e\n" +
	"\vqc_group_id\x18\v \x01(\x04R\tqcGroupId\"?\n" +
	"\x12FamilyQCGroupsList\x12)\n" +
	"\x04list\x18\x01 \x03(\v2\x15.Scailo.FamilyQCGroupR\x04list\"\x83\x01\n" +
	"!FamiliesServiceUpdatePriceRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12\x1d\n" +
	"\x05price\x18\x1a \x01(\x04B\a\xbaH\x042\x02(\x00R\x05price\"\xad\x01\n" +
	".FamiliesServiceUpdateMinStockToMaintainRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12:\n" +
	"\x15min_stock_to_maintain\x18\x1b \x01(\x04B\a\xbaH\x042\x02(\x00R\x12minStockToMaintain*\xee\x01\n" +
	"\vFAMILY_TYPE\x12\x1f\n" +
	"\x1bFAMILY_TYPE_ANY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15FAMILY_TYPE_COMPONENT\x10\x01\x12\x19\n" +
	"\x15FAMILY_TYPE_EQUIPMENT\x10\x02\x12\x19\n" +
	"\x15FAMILY_TYPE_FEEDSTOCK\x10\x03\x12\x1e\n" +
	"\x1aFAMILY_TYPE_INFRASTRUCTURE\x10\x04\x12\x1b\n" +
	"\x17FAMILY_TYPE_MERCHANDISE\x10\x05\x12\x17\n" +
	"\x13FAMILY_TYPE_PRODUCT\x10\x06\x12\x17\n" +
	"\x13FAMILY_TYPE_SERVICE\x10\a*\xb0\x02\n" +
	"\x14CONSUMPTION_SEQUENCE\x12(\n" +
	"$CONSUMPTION_SEQUENCE_ANY_UNSPECIFIED\x10\x00\x12$\n" +
	" CONSUMPTION_SEQUENCE_FIFO_INTAKE\x10\x01\x12(\n" +
	"$CONSUMPTION_SEQUENCE_FIFO_SHELF_LIFE\x10\x02\x12&\n" +
	"\"CONSUMPTION_SEQUENCE_FIFO_WARRANTY\x10\x03\x12$\n" +
	" CONSUMPTION_SEQUENCE_LIFO_INTAKE\x10\x04\x12(\n" +
	"$CONSUMPTION_SEQUENCE_LIFO_SHELF_LIFE\x10\x05\x12&\n" +
	"\"CONSUMPTION_SEQUENCE_LIFO_WARRANTY\x10\x06*\xf5\x02\n" +
	"\x0fFAMILY_SORT_KEY\x12\"\n" +
	"\x1eFAMILY_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aFAMILY_SORT_KEY_CREATED_AT\x10\x01\x12\x1f\n" +
	"\x1bFAMILY_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1f\n" +
	"\x1bFAMILY_SORT_KEY_APPROVED_ON\x10\x03\x12\x1f\n" +
	"\x1bFAMILY_SORT_KEY_APPROVED_BY\x10\x04\x12$\n" +
	" FAMILY_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x18\n" +
	"\x14FAMILY_SORT_KEY_NAME\x10\n" +
	"\x12\x18\n" +
	"\x14FAMILY_SORT_KEY_CODE\x10\f\x12!\n" +
	"\x1dFAMILY_SORT_KEY_UNIT_QUANTITY\x10\r\x12\x19\n" +
	"\x15FAMILY_SORT_KEY_PRICE\x10\x0e\x12#\n" +
	"\x1fFAMILY_SORT_KEY_AMENDMENT_COUNT\x10\x0f2\xe4$\n" +
	"\x0fFamiliesService\x12J\n" +
	"\x06Create\x12$.Scailo.FamiliesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x05Draft\x12$.Scailo.FamiliesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\vDraftUpdate\x12$.Scailo.FamiliesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x0eRevisionUpdate\x12$.Scailo.FamiliesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x05Amend\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\vUpdatePrice\x12).Scailo.FamiliesServiceUpdatePriceRequest\x1a\x1a.Scailo.IdentifierResponse\x12A\n" +
	"\fUploadPrices\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsList\x12n\n" +
	"\x18UpdateMinStockToMaintain\x126.Scailo.FamiliesServiceUpdateMinStockToMaintainRequest\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\x18UploadMinStockToMaintain\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsList\x12G\n" +
	"\rDownloadAsCSV\x12 .Scailo.FamiliesServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsList\x12U\n" +
	"\n" +
	"AddStorage\x12+.Scailo.FamiliesServiceStorageCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eApproveStorage\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\rDeleteStorage\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12<\n" +
	"\x0fViewStorageByID\x12\x12.Scailo.Identifier\x1a\x15.Scailo.FamilyStorage\x12>\n" +
	"\fViewStorages\x12\x12.Scailo.Identifier\x1a\x1a.Scailo.FamilyStoragesList\x12Q\n" +
	"\bAddLabel\x12).Scailo.FamiliesServiceLabelCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\fApproveLabel\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\vDeleteLabel\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x128\n" +
	"\rViewLabelByID\x12\x12.Scailo.Identifier\x1a\x13.Scailo.FamilyLabel\x12:\n" +
	"\n" +
	"ViewLabels\x12\x12.Scailo.Identifier\x1a\x18.Scailo.FamilyLabelsList\x12c\n" +
	"\x11AddUnitConversion\x122.Scailo.FamiliesServiceUnitConversionCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12V\n" +
	"\x15ApproveUnitConversion\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\x14DeleteUnitConversion\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x16ViewUnitConversionByID\x12\x12.Scailo.Identifier\x1a\x1c.Scailo.FamilyUnitConversion\x12L\n" +
	"\x13ViewUnitConversions\x12\x12.Scailo.Identifier\x1a!.Scailo.FamilyUnitConversionsList\x12k\n" +
	"\x15ViewUnitConversionFor\x124.Scailo.FamiliesServiceUnitConversionPresenceRequest\x1a\x1c.Scailo.FamilyUnitConversion\x12U\n" +
	"\n" +
	"AddQCGroup\x12+.Scailo.FamiliesServiceQCGroupCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eApproveQCGroup\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\rDeleteQCGroup\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12<\n" +
	"\x0fViewQCGroupByID\x12\x12.Scailo.Identifier\x1a\x15.Scailo.FamilyQCGroup\x12>\n" +
	"\fViewQCGroups\x12\x12.Scailo.Identifier\x1a\x1a.Scailo.FamilyQCGroupsList\x12.\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x0e.Scailo.Family\x124\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0e.Scailo.Family\x127\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x0e.Scailo.Family\x12>\n" +
	"\x13ViewEssentialByCode\x12\x17.Scailo.SimpleSearchReq\x1a\x0e.Scailo.Family\x12=\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0e.Scailo.Family\x12<\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x14.Scailo.FamiliesList\x125\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x14.Scailo.FamiliesList\x12D\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.FamiliesList\x12e\n" +
	"\x12ViewWithPagination\x12$.Scailo.FamiliesServicePaginationReq\x1a).Scailo.FamiliesServicePaginationResponse\x12B\n" +
	"\x11ViewAllRequirable\x12\x17.Scailo.FamilyTypesList\x1a\x14.Scailo.FamiliesList\x12?\n" +
	"\x0eViewAmendments\x12\x12.Scailo.Identifier\x1a\x19.Scailo.AmendmentLogsList\x12F\n" +
	"\tSearchAll\x12#.Scailo.FamiliesServiceSearchAllReq\x1a\x14.Scailo.FamiliesList\x12@\n" +
	"\x06Filter\x12 .Scailo.FamiliesServiceFilterReq\x1a\x14.Scailo.FamiliesList\x12G\n" +
	"\x11SearchForPurchase\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12C\n" +
	"\rSearchForSale\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12I\n" +
	"\x13SearchForProduction\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12K\n" +
	"\x15SearchForReplaceables\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12M\n" +
	"\x17SearchForEquationFamily\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12R\n" +
	"\x1cSearchForEquationReplaceable\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12R\n" +
	"\x1cSearchForEquationSalesBundle\x12\x17.Scailo.SimpleSearchReq\x1a\x14.Scailo.FamiliesList\"\x03\x88\x02\x01\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12?\n" +
	"\x05Count\x12\x1f.Scailo.FamiliesServiceCountReq\x1a\x15.Scailo.CountResponseBe\n" +
	"\n" +
	"com.ScailoB\x13FamiliesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_families_scailo_proto_rawDescOnce sync.Once
	file_families_scailo_proto_rawDescData []byte
)

func file_families_scailo_proto_rawDescGZIP() []byte {
	file_families_scailo_proto_rawDescOnce.Do(func() {
		file_families_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_families_scailo_proto_rawDesc), len(file_families_scailo_proto_rawDesc)))
	})
	return file_families_scailo_proto_rawDescData
}

var file_families_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_families_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_families_scailo_proto_goTypes = []any{
	(FAMILY_TYPE)(0),                                       // 0: Scailo.FAMILY_TYPE
	(CONSUMPTION_SEQUENCE)(0),                              // 1: Scailo.CONSUMPTION_SEQUENCE
	(FAMILY_SORT_KEY)(0),                                   // 2: Scailo.FAMILY_SORT_KEY
	(*FamilyTypesList)(nil),                                // 3: Scailo.FamilyTypesList
	(*FamiliesServiceCreateRequest)(nil),                   // 4: Scailo.FamiliesServiceCreateRequest
	(*FamiliesServiceUpdateRequest)(nil),                   // 5: Scailo.FamiliesServiceUpdateRequest
	(*Family)(nil),                                         // 6: Scailo.Family
	(*FamiliesList)(nil),                                   // 7: Scailo.FamiliesList
	(*FamiliesServicePaginationReq)(nil),                   // 8: Scailo.FamiliesServicePaginationReq
	(*FamiliesServicePaginationResponse)(nil),              // 9: Scailo.FamiliesServicePaginationResponse
	(*FamiliesServiceFilterReq)(nil),                       // 10: Scailo.FamiliesServiceFilterReq
	(*FamiliesServiceCountReq)(nil),                        // 11: Scailo.FamiliesServiceCountReq
	(*FamiliesServiceSearchAllReq)(nil),                    // 12: Scailo.FamiliesServiceSearchAllReq
	(*FilterFamiliesReqForIdentifier)(nil),                 // 13: Scailo.FilterFamiliesReqForIdentifier
	(*FamiliesServiceLabelCreateRequest)(nil),              // 14: Scailo.FamiliesServiceLabelCreateRequest
	(*FamilyLabel)(nil),                                    // 15: Scailo.FamilyLabel
	(*FamilyLabelsList)(nil),                               // 16: Scailo.FamilyLabelsList
	(*FamiliesServiceStorageCreateRequest)(nil),            // 17: Scailo.FamiliesServiceStorageCreateRequest
	(*FamilyStorage)(nil),                                  // 18: Scailo.FamilyStorage
	(*FamilyStoragesList)(nil),                             // 19: Scailo.FamilyStoragesList
	(*FamiliesServiceUnitConversionPresenceRequest)(nil),   // 20: Scailo.FamiliesServiceUnitConversionPresenceRequest
	(*FamiliesServiceUnitConversionCreateRequest)(nil),     // 21: Scailo.FamiliesServiceUnitConversionCreateRequest
	(*FamilyUnitConversion)(nil),                           // 22: Scailo.FamilyUnitConversion
	(*FamilyUnitConversionsList)(nil),                      // 23: Scailo.FamilyUnitConversionsList
	(*FamiliesServiceQCGroupCreateRequest)(nil),            // 24: Scailo.FamiliesServiceQCGroupCreateRequest
	(*FamilyQCGroup)(nil),                                  // 25: Scailo.FamilyQCGroup
	(*FamilyQCGroupsList)(nil),                             // 26: Scailo.FamilyQCGroupsList
	(*FamiliesServiceUpdatePriceRequest)(nil),              // 27: Scailo.FamiliesServiceUpdatePriceRequest
	(*FamiliesServiceUpdateMinStockToMaintainRequest)(nil), // 28: Scailo.FamiliesServiceUpdateMinStockToMaintainRequest
	(*FormFieldDatumCreateRequest)(nil),                    // 29: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                               // 30: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                               // 31: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                         // 32: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                           // 33: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                 // 34: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                       // 35: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                        // 36: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                    // 37: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                  // 38: Scailo.IdentifierUUIDWithUserComment
	(*StandardFile)(nil),                                   // 39: Scailo.StandardFile
	(*IdentifierWithUserComment)(nil),                      // 40: Scailo.IdentifierWithUserComment
	(*Identifier)(nil),                                     // 41: Scailo.Identifier
	(*IdentifierUUID)(nil),                                 // 42: Scailo.IdentifierUUID
	(*SimpleSearchReq)(nil),                                // 43: Scailo.SimpleSearchReq
	(*IdentifiersList)(nil),                                // 44: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                   // 45: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),                        // 46: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                             // 47: Scailo.IdentifierResponse
	(*IdentifierUUIDsList)(nil),                            // 48: Scailo.IdentifierUUIDsList
	(*AmendmentLogsList)(nil),                              // 49: Scailo.AmendmentLogsList
	(*CountResponse)(nil),                                  // 50: Scailo.CountResponse
}
var file_families_scailo_proto_depIdxs = []int32{
	0,   // 0: Scailo.FamilyTypesList.list:type_name -> Scailo.FAMILY_TYPE
	0,   // 1: Scailo.FamiliesServiceCreateRequest.family_type:type_name -> Scailo.FAMILY_TYPE
	1,   // 2: Scailo.FamiliesServiceCreateRequest.consumption_sequence:type_name -> Scailo.CONSUMPTION_SEQUENCE
	29,  // 3: Scailo.FamiliesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	0,   // 4: Scailo.FamiliesServiceUpdateRequest.family_type:type_name -> Scailo.FAMILY_TYPE
	1,   // 5: Scailo.FamiliesServiceUpdateRequest.consumption_sequence:type_name -> Scailo.CONSUMPTION_SEQUENCE
	29,  // 6: Scailo.FamiliesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	30,  // 7: Scailo.Family.metadata:type_name -> Scailo.EmployeeMetadata
	31,  // 8: Scailo.Family.approval_metadata:type_name -> Scailo.ApprovalMetadata
	32,  // 9: Scailo.Family.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	33,  // 10: Scailo.Family.logs:type_name -> Scailo.LogbookLogConciseSLC
	0,   // 11: Scailo.Family.family_type:type_name -> Scailo.FAMILY_TYPE
	1,   // 12: Scailo.Family.consumption_sequence:type_name -> Scailo.CONSUMPTION_SEQUENCE
	34,  // 13: Scailo.Family.form_data:type_name -> Scailo.FormFieldDatum
	6,   // 14: Scailo.FamiliesList.list:type_name -> Scailo.Family
	35,  // 15: Scailo.FamiliesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	36,  // 16: Scailo.FamiliesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,   // 17: Scailo.FamiliesServicePaginationReq.sort_key:type_name -> Scailo.FAMILY_SORT_KEY
	32,  // 18: Scailo.FamiliesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	6,   // 19: Scailo.FamiliesServicePaginationResponse.payload:type_name -> Scailo.Family
	35,  // 20: Scailo.FamiliesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	36,  // 21: Scailo.FamiliesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,   // 22: Scailo.FamiliesServiceFilterReq.sort_key:type_name -> Scailo.FAMILY_SORT_KEY
	32,  // 23: Scailo.FamiliesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	32,  // 24: Scailo.FamiliesServiceFilterReq.multi_status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 25: Scailo.FamiliesServiceFilterReq.family_type:type_name -> Scailo.FAMILY_TYPE
	0,   // 26: Scailo.FamiliesServiceFilterReq.multi_family_type:type_name -> Scailo.FAMILY_TYPE
	35,  // 27: Scailo.FamiliesServiceFilterReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	1,   // 28: Scailo.FamiliesServiceFilterReq.consumption_sequence:type_name -> Scailo.CONSUMPTION_SEQUENCE
	37,  // 29: Scailo.FamiliesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	35,  // 30: Scailo.FamiliesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	32,  // 31: Scailo.FamiliesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	32,  // 32: Scailo.FamiliesServiceCountReq.multi_status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 33: Scailo.FamiliesServiceCountReq.family_type:type_name -> Scailo.FAMILY_TYPE
	0,   // 34: Scailo.FamiliesServiceCountReq.multi_family_type:type_name -> Scailo.FAMILY_TYPE
	35,  // 35: Scailo.FamiliesServiceCountReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	1,   // 36: Scailo.FamiliesServiceCountReq.consumption_sequence:type_name -> Scailo.CONSUMPTION_SEQUENCE
	37,  // 37: Scailo.FamiliesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	35,  // 38: Scailo.FamiliesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	36,  // 39: Scailo.FamiliesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,   // 40: Scailo.FamiliesServiceSearchAllReq.sort_key:type_name -> Scailo.FAMILY_SORT_KEY
	32,  // 41: Scailo.FamiliesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	32,  // 42: Scailo.FamiliesServiceSearchAllReq.multi_status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,   // 43: Scailo.FamiliesServiceSearchAllReq.family_type:type_name -> Scailo.FAMILY_TYPE
	0,   // 44: Scailo.FamiliesServiceSearchAllReq.multi_family_type:type_name -> Scailo.FAMILY_TYPE
	35,  // 45: Scailo.FamiliesServiceSearchAllReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	10,  // 46: Scailo.FilterFamiliesReqForIdentifier.filter:type_name -> Scailo.FamiliesServiceFilterReq
	30,  // 47: Scailo.FamilyLabel.metadata:type_name -> Scailo.EmployeeMetadata
	31,  // 48: Scailo.FamilyLabel.approval_metadata:type_name -> Scailo.ApprovalMetadata
	15,  // 49: Scailo.FamilyLabelsList.list:type_name -> Scailo.FamilyLabel
	30,  // 50: Scailo.FamilyStorage.metadata:type_name -> Scailo.EmployeeMetadata
	31,  // 51: Scailo.FamilyStorage.approval_metadata:type_name -> Scailo.ApprovalMetadata
	18,  // 52: Scailo.FamilyStoragesList.list:type_name -> Scailo.FamilyStorage
	30,  // 53: Scailo.FamilyUnitConversion.metadata:type_name -> Scailo.EmployeeMetadata
	31,  // 54: Scailo.FamilyUnitConversion.approval_metadata:type_name -> Scailo.ApprovalMetadata
	22,  // 55: Scailo.FamilyUnitConversionsList.list:type_name -> Scailo.FamilyUnitConversion
	30,  // 56: Scailo.FamilyQCGroup.metadata:type_name -> Scailo.EmployeeMetadata
	31,  // 57: Scailo.FamilyQCGroup.approval_metadata:type_name -> Scailo.ApprovalMetadata
	25,  // 58: Scailo.FamilyQCGroupsList.list:type_name -> Scailo.FamilyQCGroup
	4,   // 59: Scailo.FamiliesService.Create:input_type -> Scailo.FamiliesServiceCreateRequest
	4,   // 60: Scailo.FamiliesService.Draft:input_type -> Scailo.FamiliesServiceCreateRequest
	5,   // 61: Scailo.FamiliesService.DraftUpdate:input_type -> Scailo.FamiliesServiceUpdateRequest
	38,  // 62: Scailo.FamiliesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 63: Scailo.FamiliesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 64: Scailo.FamiliesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 65: Scailo.FamiliesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	5,   // 66: Scailo.FamiliesService.RevisionUpdate:input_type -> Scailo.FamiliesServiceUpdateRequest
	38,  // 67: Scailo.FamiliesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 68: Scailo.FamiliesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 69: Scailo.FamiliesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 70: Scailo.FamiliesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	38,  // 71: Scailo.FamiliesService.Amend:input_type -> Scailo.IdentifierUUIDWithUserComment
	27,  // 72: Scailo.FamiliesService.UpdatePrice:input_type -> Scailo.FamiliesServiceUpdatePriceRequest
	39,  // 73: Scailo.FamiliesService.UploadPrices:input_type -> Scailo.StandardFile
	28,  // 74: Scailo.FamiliesService.UpdateMinStockToMaintain:input_type -> Scailo.FamiliesServiceUpdateMinStockToMaintainRequest
	39,  // 75: Scailo.FamiliesService.UploadMinStockToMaintain:input_type -> Scailo.StandardFile
	10,  // 76: Scailo.FamiliesService.DownloadAsCSV:input_type -> Scailo.FamiliesServiceFilterReq
	39,  // 77: Scailo.FamiliesService.ImportFromCSV:input_type -> Scailo.StandardFile
	17,  // 78: Scailo.FamiliesService.AddStorage:input_type -> Scailo.FamiliesServiceStorageCreateRequest
	40,  // 79: Scailo.FamiliesService.ApproveStorage:input_type -> Scailo.IdentifierWithUserComment
	40,  // 80: Scailo.FamiliesService.DeleteStorage:input_type -> Scailo.IdentifierWithUserComment
	41,  // 81: Scailo.FamiliesService.ViewStorageByID:input_type -> Scailo.Identifier
	41,  // 82: Scailo.FamiliesService.ViewStorages:input_type -> Scailo.Identifier
	14,  // 83: Scailo.FamiliesService.AddLabel:input_type -> Scailo.FamiliesServiceLabelCreateRequest
	40,  // 84: Scailo.FamiliesService.ApproveLabel:input_type -> Scailo.IdentifierWithUserComment
	40,  // 85: Scailo.FamiliesService.DeleteLabel:input_type -> Scailo.IdentifierWithUserComment
	41,  // 86: Scailo.FamiliesService.ViewLabelByID:input_type -> Scailo.Identifier
	41,  // 87: Scailo.FamiliesService.ViewLabels:input_type -> Scailo.Identifier
	21,  // 88: Scailo.FamiliesService.AddUnitConversion:input_type -> Scailo.FamiliesServiceUnitConversionCreateRequest
	40,  // 89: Scailo.FamiliesService.ApproveUnitConversion:input_type -> Scailo.IdentifierWithUserComment
	40,  // 90: Scailo.FamiliesService.DeleteUnitConversion:input_type -> Scailo.IdentifierWithUserComment
	41,  // 91: Scailo.FamiliesService.ViewUnitConversionByID:input_type -> Scailo.Identifier
	41,  // 92: Scailo.FamiliesService.ViewUnitConversions:input_type -> Scailo.Identifier
	20,  // 93: Scailo.FamiliesService.ViewUnitConversionFor:input_type -> Scailo.FamiliesServiceUnitConversionPresenceRequest
	24,  // 94: Scailo.FamiliesService.AddQCGroup:input_type -> Scailo.FamiliesServiceQCGroupCreateRequest
	40,  // 95: Scailo.FamiliesService.ApproveQCGroup:input_type -> Scailo.IdentifierWithUserComment
	40,  // 96: Scailo.FamiliesService.DeleteQCGroup:input_type -> Scailo.IdentifierWithUserComment
	41,  // 97: Scailo.FamiliesService.ViewQCGroupByID:input_type -> Scailo.Identifier
	41,  // 98: Scailo.FamiliesService.ViewQCGroups:input_type -> Scailo.Identifier
	41,  // 99: Scailo.FamiliesService.ViewByID:input_type -> Scailo.Identifier
	42,  // 100: Scailo.FamiliesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	41,  // 101: Scailo.FamiliesService.ViewEssentialByID:input_type -> Scailo.Identifier
	43,  // 102: Scailo.FamiliesService.ViewEssentialByCode:input_type -> Scailo.SimpleSearchReq
	42,  // 103: Scailo.FamiliesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	44,  // 104: Scailo.FamiliesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	45,  // 105: Scailo.FamiliesService.ViewAll:input_type -> Scailo.ActiveStatus
	42,  // 106: Scailo.FamiliesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	8,   // 107: Scailo.FamiliesService.ViewWithPagination:input_type -> Scailo.FamiliesServicePaginationReq
	3,   // 108: Scailo.FamiliesService.ViewAllRequirable:input_type -> Scailo.FamilyTypesList
	41,  // 109: Scailo.FamiliesService.ViewAmendments:input_type -> Scailo.Identifier
	12,  // 110: Scailo.FamiliesService.SearchAll:input_type -> Scailo.FamiliesServiceSearchAllReq
	10,  // 111: Scailo.FamiliesService.Filter:input_type -> Scailo.FamiliesServiceFilterReq
	43,  // 112: Scailo.FamiliesService.SearchForPurchase:input_type -> Scailo.SimpleSearchReq
	43,  // 113: Scailo.FamiliesService.SearchForSale:input_type -> Scailo.SimpleSearchReq
	43,  // 114: Scailo.FamiliesService.SearchForProduction:input_type -> Scailo.SimpleSearchReq
	43,  // 115: Scailo.FamiliesService.SearchForReplaceables:input_type -> Scailo.SimpleSearchReq
	43,  // 116: Scailo.FamiliesService.SearchForEquationFamily:input_type -> Scailo.SimpleSearchReq
	43,  // 117: Scailo.FamiliesService.SearchForEquationReplaceable:input_type -> Scailo.SimpleSearchReq
	43,  // 118: Scailo.FamiliesService.SearchForEquationSalesBundle:input_type -> Scailo.SimpleSearchReq
	46,  // 119: Scailo.FamiliesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	11,  // 120: Scailo.FamiliesService.Count:input_type -> Scailo.FamiliesServiceCountReq
	47,  // 121: Scailo.FamiliesService.Create:output_type -> Scailo.IdentifierResponse
	47,  // 122: Scailo.FamiliesService.Draft:output_type -> Scailo.IdentifierResponse
	47,  // 123: Scailo.FamiliesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	47,  // 124: Scailo.FamiliesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	47,  // 125: Scailo.FamiliesService.Verify:output_type -> Scailo.IdentifierResponse
	47,  // 126: Scailo.FamiliesService.Approve:output_type -> Scailo.IdentifierResponse
	47,  // 127: Scailo.FamiliesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	47,  // 128: Scailo.FamiliesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	47,  // 129: Scailo.FamiliesService.Halt:output_type -> Scailo.IdentifierResponse
	47,  // 130: Scailo.FamiliesService.Discard:output_type -> Scailo.IdentifierResponse
	47,  // 131: Scailo.FamiliesService.Restore:output_type -> Scailo.IdentifierResponse
	47,  // 132: Scailo.FamiliesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	47,  // 133: Scailo.FamiliesService.Amend:output_type -> Scailo.IdentifierResponse
	47,  // 134: Scailo.FamiliesService.UpdatePrice:output_type -> Scailo.IdentifierResponse
	48,  // 135: Scailo.FamiliesService.UploadPrices:output_type -> Scailo.IdentifierUUIDsList
	47,  // 136: Scailo.FamiliesService.UpdateMinStockToMaintain:output_type -> Scailo.IdentifierResponse
	48,  // 137: Scailo.FamiliesService.UploadMinStockToMaintain:output_type -> Scailo.IdentifierUUIDsList
	39,  // 138: Scailo.FamiliesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	48,  // 139: Scailo.FamiliesService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	47,  // 140: Scailo.FamiliesService.AddStorage:output_type -> Scailo.IdentifierResponse
	47,  // 141: Scailo.FamiliesService.ApproveStorage:output_type -> Scailo.IdentifierResponse
	47,  // 142: Scailo.FamiliesService.DeleteStorage:output_type -> Scailo.IdentifierResponse
	18,  // 143: Scailo.FamiliesService.ViewStorageByID:output_type -> Scailo.FamilyStorage
	19,  // 144: Scailo.FamiliesService.ViewStorages:output_type -> Scailo.FamilyStoragesList
	47,  // 145: Scailo.FamiliesService.AddLabel:output_type -> Scailo.IdentifierResponse
	47,  // 146: Scailo.FamiliesService.ApproveLabel:output_type -> Scailo.IdentifierResponse
	47,  // 147: Scailo.FamiliesService.DeleteLabel:output_type -> Scailo.IdentifierResponse
	15,  // 148: Scailo.FamiliesService.ViewLabelByID:output_type -> Scailo.FamilyLabel
	16,  // 149: Scailo.FamiliesService.ViewLabels:output_type -> Scailo.FamilyLabelsList
	47,  // 150: Scailo.FamiliesService.AddUnitConversion:output_type -> Scailo.IdentifierResponse
	47,  // 151: Scailo.FamiliesService.ApproveUnitConversion:output_type -> Scailo.IdentifierResponse
	47,  // 152: Scailo.FamiliesService.DeleteUnitConversion:output_type -> Scailo.IdentifierResponse
	22,  // 153: Scailo.FamiliesService.ViewUnitConversionByID:output_type -> Scailo.FamilyUnitConversion
	23,  // 154: Scailo.FamiliesService.ViewUnitConversions:output_type -> Scailo.FamilyUnitConversionsList
	22,  // 155: Scailo.FamiliesService.ViewUnitConversionFor:output_type -> Scailo.FamilyUnitConversion
	47,  // 156: Scailo.FamiliesService.AddQCGroup:output_type -> Scailo.IdentifierResponse
	47,  // 157: Scailo.FamiliesService.ApproveQCGroup:output_type -> Scailo.IdentifierResponse
	47,  // 158: Scailo.FamiliesService.DeleteQCGroup:output_type -> Scailo.IdentifierResponse
	25,  // 159: Scailo.FamiliesService.ViewQCGroupByID:output_type -> Scailo.FamilyQCGroup
	26,  // 160: Scailo.FamiliesService.ViewQCGroups:output_type -> Scailo.FamilyQCGroupsList
	6,   // 161: Scailo.FamiliesService.ViewByID:output_type -> Scailo.Family
	6,   // 162: Scailo.FamiliesService.ViewByUUID:output_type -> Scailo.Family
	6,   // 163: Scailo.FamiliesService.ViewEssentialByID:output_type -> Scailo.Family
	6,   // 164: Scailo.FamiliesService.ViewEssentialByCode:output_type -> Scailo.Family
	6,   // 165: Scailo.FamiliesService.ViewEssentialByUUID:output_type -> Scailo.Family
	7,   // 166: Scailo.FamiliesService.ViewFromIDs:output_type -> Scailo.FamiliesList
	7,   // 167: Scailo.FamiliesService.ViewAll:output_type -> Scailo.FamiliesList
	7,   // 168: Scailo.FamiliesService.ViewAllForEntityUUID:output_type -> Scailo.FamiliesList
	9,   // 169: Scailo.FamiliesService.ViewWithPagination:output_type -> Scailo.FamiliesServicePaginationResponse
	7,   // 170: Scailo.FamiliesService.ViewAllRequirable:output_type -> Scailo.FamiliesList
	49,  // 171: Scailo.FamiliesService.ViewAmendments:output_type -> Scailo.AmendmentLogsList
	7,   // 172: Scailo.FamiliesService.SearchAll:output_type -> Scailo.FamiliesList
	7,   // 173: Scailo.FamiliesService.Filter:output_type -> Scailo.FamiliesList
	7,   // 174: Scailo.FamiliesService.SearchForPurchase:output_type -> Scailo.FamiliesList
	7,   // 175: Scailo.FamiliesService.SearchForSale:output_type -> Scailo.FamiliesList
	7,   // 176: Scailo.FamiliesService.SearchForProduction:output_type -> Scailo.FamiliesList
	7,   // 177: Scailo.FamiliesService.SearchForReplaceables:output_type -> Scailo.FamiliesList
	7,   // 178: Scailo.FamiliesService.SearchForEquationFamily:output_type -> Scailo.FamiliesList
	7,   // 179: Scailo.FamiliesService.SearchForEquationReplaceable:output_type -> Scailo.FamiliesList
	7,   // 180: Scailo.FamiliesService.SearchForEquationSalesBundle:output_type -> Scailo.FamiliesList
	50,  // 181: Scailo.FamiliesService.CountInStatus:output_type -> Scailo.CountResponse
	50,  // 182: Scailo.FamiliesService.Count:output_type -> Scailo.CountResponse
	121, // [121:183] is the sub-list for method output_type
	59,  // [59:121] is the sub-list for method input_type
	59,  // [59:59] is the sub-list for extension type_name
	59,  // [59:59] is the sub-list for extension extendee
	0,   // [0:59] is the sub-list for field type_name
}

func init() { file_families_scailo_proto_init() }
func file_families_scailo_proto_init() {
	if File_families_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_families_scailo_proto_rawDesc), len(file_families_scailo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_families_scailo_proto_goTypes,
		DependencyIndexes: file_families_scailo_proto_depIdxs,
		EnumInfos:         file_families_scailo_proto_enumTypes,
		MessageInfos:      file_families_scailo_proto_msgTypes,
	}.Build()
	File_families_scailo_proto = out.File
	file_families_scailo_proto_goTypes = nil
	file_families_scailo_proto_depIdxs = nil
}
