// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: meetings.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the lifecycle status of each meeting
type MEETING_LIFECYCLE int32

const (
	// Used only in filters
	MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED MEETING_LIFECYCLE = 0
	// Denotes that the meeting is open
	MEETING_LIFECYCLE_MEETING_LIFECYCLE_OPEN MEETING_LIFECYCLE = 1
	// Denotes that the meeting has completed
	MEETING_LIFECYCLE_MEETING_LIFECYCLE_COMPLETED MEETING_LIFECYCLE = 2
	// Denotes that the meeting has been cancelled
	MEETING_LIFECYCLE_MEETING_LIFECYCLE_CANCELLED MEETING_LIFECYCLE = 3
)

// Enum value maps for MEETING_LIFECYCLE.
var (
	MEETING_LIFECYCLE_name = map[int32]string{
		0: "MEETING_LIFECYCLE_ANY_UNSPECIFIED",
		1: "MEETING_LIFECYCLE_OPEN",
		2: "MEETING_LIFECYCLE_COMPLETED",
		3: "MEETING_LIFECYCLE_CANCELLED",
	}
	MEETING_LIFECYCLE_value = map[string]int32{
		"MEETING_LIFECYCLE_ANY_UNSPECIFIED": 0,
		"MEETING_LIFECYCLE_OPEN":            1,
		"MEETING_LIFECYCLE_COMPLETED":       2,
		"MEETING_LIFECYCLE_CANCELLED":       3,
	}
)

func (x MEETING_LIFECYCLE) Enum() *MEETING_LIFECYCLE {
	p := new(MEETING_LIFECYCLE)
	*p = x
	return p
}

func (x MEETING_LIFECYCLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MEETING_LIFECYCLE) Descriptor() protoreflect.EnumDescriptor {
	return file_meetings_scailo_proto_enumTypes[0].Descriptor()
}

func (MEETING_LIFECYCLE) Type() protoreflect.EnumType {
	return &file_meetings_scailo_proto_enumTypes[0]
}

func (x MEETING_LIFECYCLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MEETING_LIFECYCLE.Descriptor instead.
func (MEETING_LIFECYCLE) EnumDescriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type MEETING_SORT_KEY int32

const (
	// Fetch ordered results by id
	MEETING_SORT_KEY_MEETING_SORT_KEY_ID_UNSPECIFIED MEETING_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	MEETING_SORT_KEY_MEETING_SORT_KEY_CREATED_AT MEETING_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	MEETING_SORT_KEY_MEETING_SORT_KEY_MODIFIED_AT MEETING_SORT_KEY = 2
	// Fetch ordered results by the approver's completed on timestamp
	MEETING_SORT_KEY_MEETING_SORT_KEY_COMPLETED_ON MEETING_SORT_KEY = 6
	// Fetch ordered results by the title
	MEETING_SORT_KEY_MEETING_SORT_KEY_TITLE MEETING_SORT_KEY = 10
	// Fetch ordered results by the start time
	MEETING_SORT_KEY_MEETING_SORT_KEY_STARTS_AT MEETING_SORT_KEY = 11
	// Fetch ordered results by the end time
	MEETING_SORT_KEY_MEETING_SORT_KEY_ENDS_AT MEETING_SORT_KEY = 12
)

// Enum value maps for MEETING_SORT_KEY.
var (
	MEETING_SORT_KEY_name = map[int32]string{
		0:  "MEETING_SORT_KEY_ID_UNSPECIFIED",
		1:  "MEETING_SORT_KEY_CREATED_AT",
		2:  "MEETING_SORT_KEY_MODIFIED_AT",
		6:  "MEETING_SORT_KEY_COMPLETED_ON",
		10: "MEETING_SORT_KEY_TITLE",
		11: "MEETING_SORT_KEY_STARTS_AT",
		12: "MEETING_SORT_KEY_ENDS_AT",
	}
	MEETING_SORT_KEY_value = map[string]int32{
		"MEETING_SORT_KEY_ID_UNSPECIFIED": 0,
		"MEETING_SORT_KEY_CREATED_AT":     1,
		"MEETING_SORT_KEY_MODIFIED_AT":    2,
		"MEETING_SORT_KEY_COMPLETED_ON":   6,
		"MEETING_SORT_KEY_TITLE":          10,
		"MEETING_SORT_KEY_STARTS_AT":      11,
		"MEETING_SORT_KEY_ENDS_AT":        12,
	}
)

func (x MEETING_SORT_KEY) Enum() *MEETING_SORT_KEY {
	p := new(MEETING_SORT_KEY)
	*p = x
	return p
}

func (x MEETING_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MEETING_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_meetings_scailo_proto_enumTypes[1].Descriptor()
}

func (MEETING_SORT_KEY) Type() protoreflect.EnumType {
	return &file_meetings_scailo_proto_enumTypes[1]
}

func (x MEETING_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MEETING_SORT_KEY.Descriptor instead.
func (MEETING_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the list of available RSVP choices
type MEETING_RSVP int32

const (
	// Used only in filter requests
	MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED MEETING_RSVP = 0
	// Denotes that the user has not responded to the RSVP
	MEETING_RSVP_MEETING_RSVP_NONE MEETING_RSVP = 1
	// Denotes that the user has responded with a yes
	MEETING_RSVP_MEETING_RSVP_YES MEETING_RSVP = 2
	// Denotes that the user has responded with a no
	MEETING_RSVP_MEETING_RSVP_NO MEETING_RSVP = 3
	// Denotes that the user has responded with a maybe
	MEETING_RSVP_MEETING_RSVP_MAYBE MEETING_RSVP = 4
)

// Enum value maps for MEETING_RSVP.
var (
	MEETING_RSVP_name = map[int32]string{
		0: "MEETING_RSVP_ANY_UNSPECIFIED",
		1: "MEETING_RSVP_NONE",
		2: "MEETING_RSVP_YES",
		3: "MEETING_RSVP_NO",
		4: "MEETING_RSVP_MAYBE",
	}
	MEETING_RSVP_value = map[string]int32{
		"MEETING_RSVP_ANY_UNSPECIFIED": 0,
		"MEETING_RSVP_NONE":            1,
		"MEETING_RSVP_YES":             2,
		"MEETING_RSVP_NO":              3,
		"MEETING_RSVP_MAYBE":           4,
	}
)

func (x MEETING_RSVP) Enum() *MEETING_RSVP {
	p := new(MEETING_RSVP)
	*p = x
	return p
}

func (x MEETING_RSVP) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MEETING_RSVP) Descriptor() protoreflect.EnumDescriptor {
	return file_meetings_scailo_proto_enumTypes[2].Descriptor()
}

func (MEETING_RSVP) Type() protoreflect.EnumType {
	return &file_meetings_scailo_proto_enumTypes[2]
}

func (x MEETING_RSVP) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MEETING_RSVP.Descriptor instead.
func (MEETING_RSVP) EnumDescriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the available sort keys
type MEETING_ACTIONABLE_SORT_KEY int32

const (
	// Fetch ordered results by id
	MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_ID_UNSPECIFIED MEETING_ACTIONABLE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_CREATED_AT MEETING_ACTIONABLE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_MODIFIED_AT MEETING_ACTIONABLE_SORT_KEY = 2
	// Fetch ordered results by the title
	MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_TITLE MEETING_ACTIONABLE_SORT_KEY = 10
	// Fetch ordered results by the activity tag ID
	MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_ACTIVITY_TAG_ID MEETING_ACTIONABLE_SORT_KEY = 11
)

// Enum value maps for MEETING_ACTIONABLE_SORT_KEY.
var (
	MEETING_ACTIONABLE_SORT_KEY_name = map[int32]string{
		0:  "MEETING_ACTIONABLE_SORT_KEY_ID_UNSPECIFIED",
		1:  "MEETING_ACTIONABLE_SORT_KEY_CREATED_AT",
		2:  "MEETING_ACTIONABLE_SORT_KEY_MODIFIED_AT",
		10: "MEETING_ACTIONABLE_SORT_KEY_TITLE",
		11: "MEETING_ACTIONABLE_SORT_KEY_ACTIVITY_TAG_ID",
	}
	MEETING_ACTIONABLE_SORT_KEY_value = map[string]int32{
		"MEETING_ACTIONABLE_SORT_KEY_ID_UNSPECIFIED":  0,
		"MEETING_ACTIONABLE_SORT_KEY_CREATED_AT":      1,
		"MEETING_ACTIONABLE_SORT_KEY_MODIFIED_AT":     2,
		"MEETING_ACTIONABLE_SORT_KEY_TITLE":           10,
		"MEETING_ACTIONABLE_SORT_KEY_ACTIVITY_TAG_ID": 11,
	}
)

func (x MEETING_ACTIONABLE_SORT_KEY) Enum() *MEETING_ACTIONABLE_SORT_KEY {
	p := new(MEETING_ACTIONABLE_SORT_KEY)
	*p = x
	return p
}

func (x MEETING_ACTIONABLE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MEETING_ACTIONABLE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_meetings_scailo_proto_enumTypes[3].Descriptor()
}

func (MEETING_ACTIONABLE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_meetings_scailo_proto_enumTypes[3]
}

func (x MEETING_ACTIONABLE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MEETING_ACTIONABLE_SORT_KEY.Descriptor instead.
func (MEETING_ACTIONABLE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{3}
}

// Describes each parameter that's part of the logbook (does not include historical data of the object) with the operation being a meeting lifecycle status
type LogbookLogMeetingLC struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the resource
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Stores if the resource is active
	IsActive bool `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Stores the timestamp of when this resource was created
	Timestamp uint64 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The UUID of the resource
	RefUuid string `protobuf:"bytes,10,opt,name=ref_uuid,json=refUuid,proto3" json:"ref_uuid,omitempty"`
	// The operation that was performed
	Operation MEETING_LIFECYCLE `protobuf:"varint,11,opt,name=operation,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"operation,omitempty"`
	// The username of the user who performed this operation
	Username string `protobuf:"bytes,12,opt,name=username,proto3" json:"username,omitempty"`
	// The name of the person who made this entry
	Name string `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// The ID of the user who made this entry
	UserId uint64 `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The comment generated by the application
	AppComment string `protobuf:"bytes,15,opt,name=app_comment,json=appComment,proto3" json:"app_comment,omitempty"`
	// The comment entered by the user
	UserComment   string `protobuf:"bytes,16,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogbookLogMeetingLC) Reset() {
	*x = LogbookLogMeetingLC{}
	mi := &file_meetings_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogbookLogMeetingLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogbookLogMeetingLC) ProtoMessage() {}

func (x *LogbookLogMeetingLC) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogbookLogMeetingLC.ProtoReflect.Descriptor instead.
func (*LogbookLogMeetingLC) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *LogbookLogMeetingLC) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogbookLogMeetingLC) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *LogbookLogMeetingLC) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogbookLogMeetingLC) GetRefUuid() string {
	if x != nil {
		return x.RefUuid
	}
	return ""
}

func (x *LogbookLogMeetingLC) GetOperation() MEETING_LIFECYCLE {
	if x != nil {
		return x.Operation
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *LogbookLogMeetingLC) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LogbookLogMeetingLC) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogbookLogMeetingLC) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LogbookLogMeetingLC) GetAppComment() string {
	if x != nil {
		return x.AppComment
	}
	return ""
}

func (x *LogbookLogMeetingLC) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

// Describes the parameters necessary to create a record
type MeetingsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the meeting
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The start UNIX timestamp
	StartsAt uint64 `protobuf:"varint,11,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	// The end UNIX timestamp
	EndsAt uint64 `protobuf:"varint,12,opt,name=ends_at,json=endsAt,proto3" json:"ends_at,omitempty"`
	// The description of the meeting
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceCreateRequest) Reset() {
	*x = MeetingsServiceCreateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceCreateRequest) ProtoMessage() {}

func (x *MeetingsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *MeetingsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *MeetingsServiceCreateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MeetingsServiceCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceCreateRequest) GetStartsAt() uint64 {
	if x != nil {
		return x.StartsAt
	}
	return 0
}

func (x *MeetingsServiceCreateRequest) GetEndsAt() uint64 {
	if x != nil {
		return x.EndsAt
	}
	return 0
}

func (x *MeetingsServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MeetingsServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type MeetingsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the meeting
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The start UNIX timestamp
	StartsAt uint64 `protobuf:"varint,11,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	// The end UNIX timestamp
	EndsAt uint64 `protobuf:"varint,12,opt,name=ends_at,json=endsAt,proto3" json:"ends_at,omitempty"`
	// The description of the meeting
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceUpdateRequest) Reset() {
	*x = MeetingsServiceUpdateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceUpdateRequest) ProtoMessage() {}

func (x *MeetingsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *MeetingsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeetingsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *MeetingsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *MeetingsServiceUpdateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MeetingsServiceUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceUpdateRequest) GetStartsAt() uint64 {
	if x != nil {
		return x.StartsAt
	}
	return 0
}

func (x *MeetingsServiceUpdateRequest) GetEndsAt() uint64 {
	if x != nil {
		return x.EndsAt
	}
	return 0
}

func (x *MeetingsServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MeetingsServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a standard response
type Meeting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this meeting
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The status of this meeting
	Status MEETING_LIFECYCLE `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"status,omitempty"`
	// Stores the logs of every operation performed on this meeting
	Logs []*LogbookLogMeetingLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this meeting was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,8,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,9,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The title of the meeting
	Title string `protobuf:"bytes,10,opt,name=title,proto3" json:"title,omitempty"`
	// The start UNIX timestamp
	StartsAt uint64 `protobuf:"varint,11,opt,name=starts_at,json=startsAt,proto3" json:"starts_at,omitempty"`
	// The end UNIX timestamp
	EndsAt uint64 `protobuf:"varint,12,opt,name=ends_at,json=endsAt,proto3" json:"ends_at,omitempty"`
	// The description of the meeting
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meeting) Reset() {
	*x = Meeting{}
	mi := &file_meetings_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meeting) ProtoMessage() {}

func (x *Meeting) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meeting.ProtoReflect.Descriptor instead.
func (*Meeting) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *Meeting) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Meeting) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Meeting) GetStatus() MEETING_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *Meeting) GetLogs() []*LogbookLogMeetingLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Meeting) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Meeting) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Meeting) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Meeting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Meeting) GetStartsAt() uint64 {
	if x != nil {
		return x.StartsAt
	}
	return 0
}

func (x *Meeting) GetEndsAt() uint64 {
	if x != nil {
		return x.EndsAt
	}
	return 0
}

func (x *Meeting) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Meeting) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the message consisting of the list of records
type MeetingsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Meeting `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsList) Reset() {
	*x = MeetingsList{}
	mi := &file_meetings_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsList) ProtoMessage() {}

func (x *MeetingsList) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsList.ProtoReflect.Descriptor instead.
func (*MeetingsList) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *MeetingsList) GetList() []*Meeting {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type MeetingsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey MEETING_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MEETING_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this meeting
	Status        MEETING_LIFECYCLE `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServicePaginationReq) Reset() {
	*x = MeetingsServicePaginationReq{}
	mi := &file_meetings_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServicePaginationReq) ProtoMessage() {}

func (x *MeetingsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*MeetingsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *MeetingsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MeetingsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MeetingsServicePaginationReq) GetSortKey() MEETING_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MEETING_SORT_KEY_MEETING_SORT_KEY_ID_UNSPECIFIED
}

func (x *MeetingsServicePaginationReq) GetStatus() MEETING_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type MeetingsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Meeting `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServicePaginationResponse) Reset() {
	*x = MeetingsServicePaginationResponse{}
	mi := &file_meetings_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServicePaginationResponse) ProtoMessage() {}

func (x *MeetingsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*MeetingsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *MeetingsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MeetingsServicePaginationResponse) GetPayload() []*Meeting {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type MeetingsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey MEETING_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MEETING_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this meeting
	Status MEETING_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The title of the meeting
	Title string `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	// The start range of "starts at"
	StartsAtStart uint64 `protobuf:"varint,24,opt,name=starts_at_start,json=startsAtStart,proto3" json:"starts_at_start,omitempty"`
	// The end range of "starts at"
	StartsAtEnd uint64 `protobuf:"varint,25,opt,name=starts_at_end,json=startsAtEnd,proto3" json:"starts_at_end,omitempty"`
	// The start range of "ends at"
	EndsAtStart uint64 `protobuf:"varint,26,opt,name=ends_at_start,json=endsAtStart,proto3" json:"ends_at_start,omitempty"`
	// The end range of "ends at"
	EndsAtEnd uint64 `protobuf:"varint,27,opt,name=ends_at_end,json=endsAtEnd,proto3" json:"ends_at_end,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,28,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Return all the meetings that the given employee is a part of
	EmployeeId uint64 `protobuf:"varint,40,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Return all the meetings that the given associate is a part of
	AssociateId uint64 `protobuf:"varint,41,opt,name=associate_id,json=associateId,proto3" json:"associate_id,omitempty"`
	// Return all the meetings that have the following activity tag as part of the actionables
	ActivityTagId uint64 `protobuf:"varint,42,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceFilterReq) Reset() {
	*x = MeetingsServiceFilterReq{}
	mi := &file_meetings_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceFilterReq) ProtoMessage() {}

func (x *MeetingsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*MeetingsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *MeetingsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MeetingsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MeetingsServiceFilterReq) GetSortKey() MEETING_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MEETING_SORT_KEY_MEETING_SORT_KEY_ID_UNSPECIFIED
}

func (x *MeetingsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingsServiceFilterReq) GetStatus() MEETING_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *MeetingsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceFilterReq) GetStartsAtStart() uint64 {
	if x != nil {
		return x.StartsAtStart
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetStartsAtEnd() uint64 {
	if x != nil {
		return x.StartsAtEnd
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetEndsAtStart() uint64 {
	if x != nil {
		return x.EndsAtStart
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetEndsAtEnd() uint64 {
	if x != nil {
		return x.EndsAtEnd
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetAssociateId() uint64 {
	if x != nil {
		return x.AssociateId
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

func (x *MeetingsServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type MeetingsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this meeting
	Status MEETING_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"status,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The title of the meeting
	Title string `protobuf:"bytes,20,opt,name=title,proto3" json:"title,omitempty"`
	// The start range of "starts at"
	StartsAtStart uint64 `protobuf:"varint,24,opt,name=starts_at_start,json=startsAtStart,proto3" json:"starts_at_start,omitempty"`
	// The end range of "starts at"
	StartsAtEnd uint64 `protobuf:"varint,25,opt,name=starts_at_end,json=startsAtEnd,proto3" json:"starts_at_end,omitempty"`
	// The start range of "ends at"
	EndsAtStart uint64 `protobuf:"varint,26,opt,name=ends_at_start,json=endsAtStart,proto3" json:"ends_at_start,omitempty"`
	// The end range of "ends at"
	EndsAtEnd uint64 `protobuf:"varint,27,opt,name=ends_at_end,json=endsAtEnd,proto3" json:"ends_at_end,omitempty"`
	// The ID of the associated project
	ProjectId uint64 `protobuf:"varint,28,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Return all the meetings that the given employee is a part of
	EmployeeId uint64 `protobuf:"varint,40,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Return all the meetings that the given associate is a part of
	AssociateId uint64 `protobuf:"varint,41,opt,name=associate_id,json=associateId,proto3" json:"associate_id,omitempty"`
	// Return all the meetings that have the following activity tag as part of the actionables
	ActivityTagId uint64 `protobuf:"varint,42,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceCountReq) Reset() {
	*x = MeetingsServiceCountReq{}
	mi := &file_meetings_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceCountReq) ProtoMessage() {}

func (x *MeetingsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceCountReq.ProtoReflect.Descriptor instead.
func (*MeetingsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *MeetingsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MeetingsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingsServiceCountReq) GetStatus() MEETING_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *MeetingsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceCountReq) GetStartsAtStart() uint64 {
	if x != nil {
		return x.StartsAtStart
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetStartsAtEnd() uint64 {
	if x != nil {
		return x.StartsAtEnd
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetEndsAtStart() uint64 {
	if x != nil {
		return x.EndsAtStart
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetEndsAtEnd() uint64 {
	if x != nil {
		return x.EndsAtEnd
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetAssociateId() uint64 {
	if x != nil {
		return x.AssociateId
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

func (x *MeetingsServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type MeetingsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey MEETING_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MEETING_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status MEETING_LIFECYCLE `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.MEETING_LIFECYCLE" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// Return all the meetings that the given employee is a part of
	EmployeeId uint64 `protobuf:"varint,40,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Return all the meetings that the given associate is a part of
	AssociateId uint64 `protobuf:"varint,41,opt,name=associate_id,json=associateId,proto3" json:"associate_id,omitempty"`
	// Return all the meetings that have the following activity tag as part of the actionables
	ActivityTagId uint64 `protobuf:"varint,42,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceSearchAllReq) Reset() {
	*x = MeetingsServiceSearchAllReq{}
	mi := &file_meetings_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceSearchAllReq) ProtoMessage() {}

func (x *MeetingsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*MeetingsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *MeetingsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MeetingsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MeetingsServiceSearchAllReq) GetSortKey() MEETING_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MEETING_SORT_KEY_MEETING_SORT_KEY_ID_UNSPECIFIED
}

func (x *MeetingsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingsServiceSearchAllReq) GetStatus() MEETING_LIFECYCLE {
	if x != nil {
		return x.Status
	}
	return MEETING_LIFECYCLE_MEETING_LIFECYCLE_ANY_UNSPECIFIED
}

func (x *MeetingsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *MeetingsServiceSearchAllReq) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *MeetingsServiceSearchAllReq) GetAssociateId() uint64 {
	if x != nil {
		return x.AssociateId
	}
	return 0
}

func (x *MeetingsServiceSearchAllReq) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

// Describes the parameters required to add an actionable to a meeting
type MeetingsServiceActionableCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// The title of the actionable
	Title string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// The content of the actionable
	Content string `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	// Stores the optional activity tag ID
	ActivityTagId uint64 `protobuf:"varint,13,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceActionableCreateRequest) Reset() {
	*x = MeetingsServiceActionableCreateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceActionableCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceActionableCreateRequest) ProtoMessage() {}

func (x *MeetingsServiceActionableCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceActionableCreateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceActionableCreateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *MeetingsServiceActionableCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceActionableCreateRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingsServiceActionableCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceActionableCreateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MeetingsServiceActionableCreateRequest) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

// Describes the parameters required to update an actionable in a meeting
type MeetingsServiceActionableUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The title of the actionable
	Title string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// The content of the actionable
	Content string `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	// Stores the optional activity tag ID
	ActivityTagId uint64 `protobuf:"varint,13,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceActionableUpdateRequest) Reset() {
	*x = MeetingsServiceActionableUpdateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceActionableUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceActionableUpdateRequest) ProtoMessage() {}

func (x *MeetingsServiceActionableUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceActionableUpdateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceActionableUpdateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *MeetingsServiceActionableUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceActionableUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MeetingsServiceActionableUpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingsServiceActionableUpdateRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MeetingsServiceActionableUpdateRequest) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

// Describes the parameters that constitute an actionable associated to a meeting
type MeetingActionable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this meeting
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// The title of the actionable
	Title string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	// The content of the actionable
	Content string `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	// Stores the optional activity tag ID
	ActivityTagId uint64 `protobuf:"varint,13,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingActionable) Reset() {
	*x = MeetingActionable{}
	mi := &file_meetings_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingActionable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingActionable) ProtoMessage() {}

func (x *MeetingActionable) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingActionable.ProtoReflect.Descriptor instead.
func (*MeetingActionable) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *MeetingActionable) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingActionable) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MeetingActionable) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingActionable) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingActionable) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MeetingActionable) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MeetingActionable) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

// Describes the message consisting of the list of meeting actionables
type MeetingActionablesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*MeetingActionable `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingActionablesList) Reset() {
	*x = MeetingActionablesList{}
	mi := &file_meetings_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingActionablesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingActionablesList) ProtoMessage() {}

func (x *MeetingActionablesList) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingActionablesList.ProtoReflect.Descriptor instead.
func (*MeetingActionablesList) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *MeetingActionablesList) GetList() []*MeetingActionable {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type MeetingActionableHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// The title of the actionable
	Title         string `protobuf:"bytes,11,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingActionableHistoryRequest) Reset() {
	*x = MeetingActionableHistoryRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingActionableHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingActionableHistoryRequest) ProtoMessage() {}

func (x *MeetingActionableHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingActionableHistoryRequest.ProtoReflect.Descriptor instead.
func (*MeetingActionableHistoryRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *MeetingActionableHistoryRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingActionableHistoryRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// Describes the request payload to retrieve actionables.
type MeetingActionablesSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey MEETING_ACTIONABLE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.MEETING_ACTIONABLE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The ID of the meeting
	MeetingId uint64 `protobuf:"varint,20,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Stores the optional activity tag ID
	ActivityTagId uint64 `protobuf:"varint,23,opt,name=activity_tag_id,json=activityTagId,proto3" json:"activity_tag_id,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingActionablesSearchRequest) Reset() {
	*x = MeetingActionablesSearchRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingActionablesSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingActionablesSearchRequest) ProtoMessage() {}

func (x *MeetingActionablesSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingActionablesSearchRequest.ProtoReflect.Descriptor instead.
func (*MeetingActionablesSearchRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *MeetingActionablesSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *MeetingActionablesSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingActionablesSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingActionablesSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *MeetingActionablesSearchRequest) GetSortKey() MEETING_ACTIONABLE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return MEETING_ACTIONABLE_SORT_KEY_MEETING_ACTIONABLE_SORT_KEY_ID_UNSPECIFIED
}

func (x *MeetingActionablesSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingActionablesSearchRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingActionablesSearchRequest) GetActivityTagId() uint64 {
	if x != nil {
		return x.ActivityTagId
	}
	return 0
}

func (x *MeetingActionablesSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination actionables request
type MeetingsServicePaginatedActionablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*MeetingActionable `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServicePaginatedActionablesResponse) Reset() {
	*x = MeetingsServicePaginatedActionablesResponse{}
	mi := &file_meetings_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServicePaginatedActionablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServicePaginatedActionablesResponse) ProtoMessage() {}

func (x *MeetingsServicePaginatedActionablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServicePaginatedActionablesResponse.ProtoReflect.Descriptor instead.
func (*MeetingsServicePaginatedActionablesResponse) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *MeetingsServicePaginatedActionablesResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MeetingsServicePaginatedActionablesResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *MeetingsServicePaginatedActionablesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MeetingsServicePaginatedActionablesResponse) GetPayload() []*MeetingActionable {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the parameters necessary to create a meeting employee
type MeetingsServiceEmployeeCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Stores the employee ID
	EmployeeId uint64 `protobuf:"varint,11,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Stores the person's RSVP
	Rsvp          MEETING_RSVP `protobuf:"varint,12,opt,name=rsvp,proto3,enum=Scailo.MEETING_RSVP" json:"rsvp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceEmployeeCreateRequest) Reset() {
	*x = MeetingsServiceEmployeeCreateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceEmployeeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceEmployeeCreateRequest) ProtoMessage() {}

func (x *MeetingsServiceEmployeeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceEmployeeCreateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceEmployeeCreateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *MeetingsServiceEmployeeCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceEmployeeCreateRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingsServiceEmployeeCreateRequest) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *MeetingsServiceEmployeeCreateRequest) GetRsvp() MEETING_RSVP {
	if x != nil {
		return x.Rsvp
	}
	return MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED
}

// Describes the parameters that constitute a meeting employee
type MeetingEmployee struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this meeting
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Stores the employee ID
	EmployeeId uint64 `protobuf:"varint,11,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	// Stores the person's RSVP
	Rsvp          MEETING_RSVP `protobuf:"varint,12,opt,name=rsvp,proto3,enum=Scailo.MEETING_RSVP" json:"rsvp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingEmployee) Reset() {
	*x = MeetingEmployee{}
	mi := &file_meetings_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingEmployee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingEmployee) ProtoMessage() {}

func (x *MeetingEmployee) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingEmployee.ProtoReflect.Descriptor instead.
func (*MeetingEmployee) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *MeetingEmployee) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingEmployee) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MeetingEmployee) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingEmployee) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingEmployee) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *MeetingEmployee) GetRsvp() MEETING_RSVP {
	if x != nil {
		return x.Rsvp
	}
	return MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED
}

// Describes the message consisting of the list of meeting employees
type MeetingEmployeesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*MeetingEmployee `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingEmployeesList) Reset() {
	*x = MeetingEmployeesList{}
	mi := &file_meetings_scailo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingEmployeesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingEmployeesList) ProtoMessage() {}

func (x *MeetingEmployeesList) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingEmployeesList.ProtoReflect.Descriptor instead.
func (*MeetingEmployeesList) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{19}
}

func (x *MeetingEmployeesList) GetList() []*MeetingEmployee {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters necessary to create a meeting associate
type MeetingsServiceAssociateCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Stores the associate ID
	AssociateId uint64 `protobuf:"varint,11,opt,name=associate_id,json=associateId,proto3" json:"associate_id,omitempty"`
	// Stores the person's RSVP
	Rsvp          MEETING_RSVP `protobuf:"varint,12,opt,name=rsvp,proto3,enum=Scailo.MEETING_RSVP" json:"rsvp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceAssociateCreateRequest) Reset() {
	*x = MeetingsServiceAssociateCreateRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceAssociateCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceAssociateCreateRequest) ProtoMessage() {}

func (x *MeetingsServiceAssociateCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceAssociateCreateRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceAssociateCreateRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{20}
}

func (x *MeetingsServiceAssociateCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceAssociateCreateRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingsServiceAssociateCreateRequest) GetAssociateId() uint64 {
	if x != nil {
		return x.AssociateId
	}
	return 0
}

func (x *MeetingsServiceAssociateCreateRequest) GetRsvp() MEETING_RSVP {
	if x != nil {
		return x.Rsvp
	}
	return MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED
}

// Describes the parameters that constitute a meeting associate
type MeetingAssociate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this meeting
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the meeting ID
	MeetingId uint64 `protobuf:"varint,10,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// Stores the associate ID
	AssociateId uint64 `protobuf:"varint,11,opt,name=associate_id,json=associateId,proto3" json:"associate_id,omitempty"`
	// Stores the person's RSVP
	Rsvp          MEETING_RSVP `protobuf:"varint,12,opt,name=rsvp,proto3,enum=Scailo.MEETING_RSVP" json:"rsvp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingAssociate) Reset() {
	*x = MeetingAssociate{}
	mi := &file_meetings_scailo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingAssociate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingAssociate) ProtoMessage() {}

func (x *MeetingAssociate) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingAssociate.ProtoReflect.Descriptor instead.
func (*MeetingAssociate) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{21}
}

func (x *MeetingAssociate) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *MeetingAssociate) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MeetingAssociate) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingAssociate) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingAssociate) GetAssociateId() uint64 {
	if x != nil {
		return x.AssociateId
	}
	return 0
}

func (x *MeetingAssociate) GetRsvp() MEETING_RSVP {
	if x != nil {
		return x.Rsvp
	}
	return MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED
}

// Describes the message consisting of the list of meeting associates
type MeetingAssociatesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*MeetingAssociate `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingAssociatesList) Reset() {
	*x = MeetingAssociatesList{}
	mi := &file_meetings_scailo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingAssociatesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingAssociatesList) ProtoMessage() {}

func (x *MeetingAssociatesList) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingAssociatesList.ProtoReflect.Descriptor instead.
func (*MeetingAssociatesList) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{22}
}

func (x *MeetingAssociatesList) GetList() []*MeetingAssociate {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the data model to handle importing of employees from the given identifier representing a team or a department
type MeetingsServiceImportEmployeesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the meeting
	MeetingId uint64 `protobuf:"varint,2,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`
	// The ID of the team or the department from which employees need to be added to the meeting
	ResourceId uint64 `protobuf:"varint,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// Stores if the existing employees in the meeting need to be deleted before adding from the source record
	DeleteExisting bool `protobuf:"varint,4,opt,name=delete_existing,json=deleteExisting,proto3" json:"delete_existing,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MeetingsServiceImportEmployeesRequest) Reset() {
	*x = MeetingsServiceImportEmployeesRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceImportEmployeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceImportEmployeesRequest) ProtoMessage() {}

func (x *MeetingsServiceImportEmployeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceImportEmployeesRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceImportEmployeesRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{23}
}

func (x *MeetingsServiceImportEmployeesRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceImportEmployeesRequest) GetMeetingId() uint64 {
	if x != nil {
		return x.MeetingId
	}
	return 0
}

func (x *MeetingsServiceImportEmployeesRequest) GetResourceId() uint64 {
	if x != nil {
		return x.ResourceId
	}
	return 0
}

func (x *MeetingsServiceImportEmployeesRequest) GetDeleteExisting() bool {
	if x != nil {
		return x.DeleteExisting
	}
	return false
}

// Describes the data model that sets the RSVP of either an associate or an employee
type MeetingsServiceSetRSVPRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The comment entered by the user
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the resource
	Uuid string `protobuf:"bytes,10,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Stores the person's RSVP
	Rsvp          MEETING_RSVP `protobuf:"varint,11,opt,name=rsvp,proto3,enum=Scailo.MEETING_RSVP" json:"rsvp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeetingsServiceSetRSVPRequest) Reset() {
	*x = MeetingsServiceSetRSVPRequest{}
	mi := &file_meetings_scailo_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeetingsServiceSetRSVPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeetingsServiceSetRSVPRequest) ProtoMessage() {}

func (x *MeetingsServiceSetRSVPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_meetings_scailo_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeetingsServiceSetRSVPRequest.ProtoReflect.Descriptor instead.
func (*MeetingsServiceSetRSVPRequest) Descriptor() ([]byte, []int) {
	return file_meetings_scailo_proto_rawDescGZIP(), []int{24}
}

func (x *MeetingsServiceSetRSVPRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *MeetingsServiceSetRSVPRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MeetingsServiceSetRSVPRequest) GetRsvp() MEETING_RSVP {
	if x != nil {
		return x.Rsvp
	}
	return MEETING_RSVP_MEETING_RSVP_ANY_UNSPECIFIED
}

var File_meetings_scailo_proto protoreflect.FileDescriptor

const file_meetings_scailo_proto_rawDesc = "" +
	"\n" +
	"\x15meetings.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\"\xc1\x02\n" +
	"\x13LogbookLogMeetingLC\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x04R\ttimestamp\x12\x19\n" +
	"\bref_uuid\x18\n" +
	" \x01(\tR\arefUuid\x127\n" +
	"\toperation\x18\v \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\toperation\x12\x1a\n" +
	"\busername\x18\f \x01(\tR\busername\x12\x12\n" +
	"\x04name\x18\r \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x0e \x01(\x04R\x06userId\x12\x1f\n" +
	"\vapp_comment\x18\x0f \x01(\tR\n" +
	"appComment\x12!\n" +
	"\fuser_comment\x18\x10 \x01(\tR\vuserComment\"\x8f\x03\n" +
	"\x1cMeetingsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12&\n" +
	"\n" +
	"project_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12$\n" +
	"\tstarts_at\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bstartsAt\x12 \n" +
	"\aends_at\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x06endsAt\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x00R\vdescription\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xaa\x03\n" +
	"\x1cMeetingsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12&\n" +
	"\n" +
	"project_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12\x1d\n" +
	"\x05title\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12$\n" +
	"\tstarts_at\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bstartsAt\x12 \n" +
	"\aends_at\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x06endsAt\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x00R\vdescription\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xd1\x03\n" +
	"\aMeeting\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\x06status\x12/\n" +
	"\x04logs\x18\x05 \x03(\v2\x1b.Scailo.LogbookLogMeetingLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\b \x01(\x04R\rvaultFolderId\x12\x1d\n" +
	"\n" +
	"project_id\x18\t \x01(\x04R\tprojectId\x12\x14\n" +
	"\x05title\x18\n" +
	" \x01(\tR\x05title\x12\x1b\n" +
	"\tstarts_at\x18\v \x01(\x04R\bstartsAt\x12\x17\n" +
	"\aends_at\x18\f \x01(\x04R\x06endsAt\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x123\n" +
	"\tform_data\x18\x1e \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"3\n" +
	"\fMeetingsList\x12#\n" +
	"\x04list\x18\x01 \x03(\v2\x0f.Scailo.MeetingR\x04list\"\xab\x02\n" +
	"\x1cMeetingsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.MEETING_SORT_KEYR\asortKey\x121\n" +
	"\x06status\x18\x06 \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\x06status\"\x92\x01\n" +
	"!MeetingsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12)\n" +
	"\apayload\x18\x04 \x03(\v2\x0f.Scailo.MeetingR\apayload\"\x8d\b\n" +
	"\x18MeetingsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.MEETING_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x14\n" +
	"\x05title\x18\x14 \x01(\tR\x05title\x12&\n" +
	"\x0fstarts_at_start\x18\x18 \x01(\x04R\rstartsAtStart\x12\"\n" +
	"\rstarts_at_end\x18\x19 \x01(\x04R\vstartsAtEnd\x12\"\n" +
	"\rends_at_start\x18\x1a \x01(\x04R\vendsAtStart\x12\x1e\n" +
	"\vends_at_end\x18\x1b \x01(\x04R\tendsAtEnd\x12\x1d\n" +
	"\n" +
	"project_id\x18\x1c \x01(\x04R\tprojectId\x12\x1f\n" +
	"\vemployee_id\x18( \x01(\x04R\n" +
	"employeeId\x12!\n" +
	"\fassociate_id\x18) \x01(\x04R\vassociateId\x12&\n" +
	"\x0factivity_tag_id\x18* \x01(\x04R\ractivityTagId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xdb\x06\n" +
	"\x17MeetingsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\x06status\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x14\n" +
	"\x05title\x18\x14 \x01(\tR\x05title\x12&\n" +
	"\x0fstarts_at_start\x18\x18 \x01(\x04R\rstartsAtStart\x12\"\n" +
	"\rstarts_at_end\x18\x19 \x01(\x04R\vstartsAtEnd\x12\"\n" +
	"\rends_at_start\x18\x1a \x01(\x04R\vendsAtStart\x12\x1e\n" +
	"\vends_at_end\x18\x1b \x01(\x04R\tendsAtEnd\x12\x1d\n" +
	"\n" +
	"project_id\x18\x1c \x01(\x04R\tprojectId\x12\x1f\n" +
	"\vemployee_id\x18( \x01(\x04R\n" +
	"employeeId\x12!\n" +
	"\fassociate_id\x18) \x01(\x04R\vassociateId\x12&\n" +
	"\x0factivity_tag_id\x18* \x01(\x04R\ractivityTagId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xdf\x03\n" +
	"\x1bMeetingsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.MEETING_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.Scailo.MEETING_LIFECYCLER\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12\x1f\n" +
	"\vemployee_id\x18( \x01(\x04R\n" +
	"employeeId\x12!\n" +
	"\fassociate_id\x18) \x01(\x04R\vassociateId\x12&\n" +
	"\x0factivity_tag_id\x18* \x01(\x04R\ractivityTagId\"\xdd\x01\n" +
	"&MeetingsServiceActionableCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tmeetingId\x12\x1d\n" +
	"\x05title\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12\x18\n" +
	"\acontent\x18\f \x01(\tR\acontent\x12/\n" +
	"\x0factivity_tag_id\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\ractivityTagId\"\xce\x01\n" +
	"&MeetingsServiceActionableUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12\x1d\n" +
	"\x05title\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x05title\x12\x18\n" +
	"\acontent\x18\f \x01(\tR\acontent\x12/\n" +
	"\x0factivity_tag_id\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\ractivityTagId\"\x84\x02\n" +
	"\x11MeetingActionable\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04R\tmeetingId\x12\x14\n" +
	"\x05title\x18\v \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\f \x01(\tR\acontent\x12&\n" +
	"\x0factivity_tag_id\x18\r \x01(\x04R\ractivityTagId\"G\n" +
	"\x16MeetingActionablesList\x12-\n" +
	"\x04list\x18\x01 \x03(\v2\x19.Scailo.MeetingActionableR\x04list\"_\n" +
	"\x1fMeetingActionableHistoryRequest\x12&\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tmeetingId\x12\x14\n" +
	"\x05title\x18\v \x01(\tR\x05title\"\x96\x03\n" +
	"\x1fMeetingActionablesSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12>\n" +
	"\bsort_key\x18\x05 \x01(\x0e2#.Scailo.MEETING_ACTIONABLE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x14 \x01(\x04R\tmeetingId\x12&\n" +
	"\x0factivity_tag_id\x18\x17 \x01(\x04R\ractivityTagId\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xa6\x01\n" +
	"+MeetingsServicePaginatedActionablesResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x123\n" +
	"\apayload\x18\x04 \x03(\v2\x19.Scailo.MeetingActionableR\apayload\"\xc5\x01\n" +
	"$MeetingsServiceEmployeeCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tmeetingId\x12(\n" +
	"\vemployee_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"employeeId\x12(\n" +
	"\x04rsvp\x18\f \x01(\x0e2\x14.Scailo.MEETING_RSVPR\x04rsvp\"\xf5\x01\n" +
	"\x0fMeetingEmployee\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04R\tmeetingId\x12\x1f\n" +
	"\vemployee_id\x18\v \x01(\x04R\n" +
	"employeeId\x12(\n" +
	"\x04rsvp\x18\f \x01(\x0e2\x14.Scailo.MEETING_RSVPR\x04rsvp\"C\n" +
	"\x14MeetingEmployeesList\x12+\n" +
	"\x04list\x18\x01 \x03(\v2\x17.Scailo.MeetingEmployeeR\x04list\"\xc8\x01\n" +
	"%MeetingsServiceAssociateCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\tmeetingId\x12*\n" +
	"\fassociate_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\vassociateId\x12(\n" +
	"\x04rsvp\x18\f \x01(\x0e2\x14.Scailo.MEETING_RSVPR\x04rsvp\"\xf8\x01\n" +
	"\x10MeetingAssociate\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\n" +
	" \x01(\x04R\tmeetingId\x12!\n" +
	"\fassociate_id\x18\v \x01(\x04R\vassociateId\x12(\n" +
	"\x04rsvp\x18\f \x01(\x0e2\x14.Scailo.MEETING_RSVPR\x04rsvp\"E\n" +
	"\x15MeetingAssociatesList\x12,\n" +
	"\x04list\x18\x01 \x03(\v2\x18.Scailo.MeetingAssociateR\x04list\"\xc5\x01\n" +
	"%MeetingsServiceImportEmployeesRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"meeting_id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\tmeetingId\x12(\n" +
	"\vresource_id\x18\x03 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"resourceId\x12'\n" +
	"\x0fdelete_existing\x18\x04 \x01(\bR\x0edeleteExisting\"\x8a\x01\n" +
	"\x1dMeetingsServiceSetRSVPRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\n" +
	" \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x12(\n" +
	"\x04rsvp\x18\v \x01(\x0e2\x14.Scailo.MEETING_RSVPR\x04rsvp*\x98\x01\n" +
	"\x11MEETING_LIFECYCLE\x12%\n" +
	"!MEETING_LIFECYCLE_ANY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16MEETING_LIFECYCLE_OPEN\x10\x01\x12\x1f\n" +
	"\x1bMEETING_LIFECYCLE_COMPLETED\x10\x02\x12\x1f\n" +
	"\x1bMEETING_LIFECYCLE_CANCELLED\x10\x03*\xf7\x01\n" +
	"\x10MEETING_SORT_KEY\x12#\n" +
	"\x1fMEETING_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bMEETING_SORT_KEY_CREATED_AT\x10\x01\x12 \n" +
	"\x1cMEETING_SORT_KEY_MODIFIED_AT\x10\x02\x12!\n" +
	"\x1dMEETING_SORT_KEY_COMPLETED_ON\x10\x06\x12\x1a\n" +
	"\x16MEETING_SORT_KEY_TITLE\x10\n" +
	"\x12\x1e\n" +
	"\x1aMEETING_SORT_KEY_STARTS_AT\x10\v\x12\x1c\n" +
	"\x18MEETING_SORT_KEY_ENDS_AT\x10\f*\x8a\x01\n" +
	"\fMEETING_RSVP\x12 \n" +
	"\x1cMEETING_RSVP_ANY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11MEETING_RSVP_NONE\x10\x01\x12\x14\n" +
	"\x10MEETING_RSVP_YES\x10\x02\x12\x13\n" +
	"\x0fMEETING_RSVP_NO\x10\x03\x12\x16\n" +
	"\x12MEETING_RSVP_MAYBE\x10\x04*\xfe\x01\n" +
	"\x1bMEETING_ACTIONABLE_SORT_KEY\x12.\n" +
	"*MEETING_ACTIONABLE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12*\n" +
	"&MEETING_ACTIONABLE_SORT_KEY_CREATED_AT\x10\x01\x12+\n" +
	"'MEETING_ACTIONABLE_SORT_KEY_MODIFIED_AT\x10\x02\x12%\n" +
	"!MEETING_ACTIONABLE_SORT_KEY_TITLE\x10\n" +
	"\x12/\n" +
	"+MEETING_ACTIONABLE_SORT_KEY_ACTIVITY_TAG_ID\x10\v2\xc7\x19\n" +
	"\x0fMeetingsService\x12J\n" +
	"\x06Create\x12$.Scailo.MeetingsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x06Update\x12$.Scailo.MeetingsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Cancel\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12P\n" +
	"\vRequestRSVP\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendActionables\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12[\n" +
	"\rAddActionable\x12..Scailo.MeetingsServiceActionableCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12^\n" +
	"\x10ModifyActionable\x12..Scailo.MeetingsServiceActionableUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\x10DeleteActionable\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\x12ReorderActionables\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12C\n" +
	"\x12ViewActionableByID\x12\x12.Scailo.Identifier\x1a\x19.Scailo.MeetingActionable\x12R\n" +
	"\x0fViewActionables\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1e.Scailo.MeetingActionablesList\x12`\n" +
	"\x15ViewActionableHistory\x12'.Scailo.MeetingActionableHistoryRequest\x1a\x1e.Scailo.MeetingActionablesList\x12x\n" +
	"\x18ViewPaginatedActionables\x12'.Scailo.MeetingActionablesSearchRequest\x1a3.Scailo.MeetingsServicePaginatedActionablesResponse\x12\x7f\n" +
	"\x1fSearchActionablesWithPagination\x12'.Scailo.MeetingActionablesSearchRequest\x1a3.Scailo.MeetingsServicePaginatedActionablesResponse\x12W\n" +
	"\vAddEmployee\x12,.Scailo.MeetingsServiceEmployeeCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eDeleteEmployee\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12?\n" +
	"\x10ViewEmployeeByID\x12\x12.Scailo.Identifier\x1a\x17.Scailo.MeetingEmployee\x12A\n" +
	"\rViewEmployees\x12\x12.Scailo.Identifier\x1a\x1c.Scailo.MeetingEmployeesList\x12P\n" +
	"\x0fSetEmployeeRSVP\x12%.Scailo.MeetingsServiceSetRSVPRequest\x1a\x16.Scailo.IdentifierUUID\x12[\n" +
	"\x0eImportFromTeam\x12-.Scailo.MeetingsServiceImportEmployeesRequest\x1a\x1a.Scailo.IdentifierResponse\x12a\n" +
	"\x14ImportFromDepartment\x12-.Scailo.MeetingsServiceImportEmployeesRequest\x1a\x1a.Scailo.IdentifierResponse\x12Y\n" +
	"\fAddAssociate\x12-.Scailo.MeetingsServiceAssociateCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12P\n" +
	"\x0fDeleteAssociate\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12A\n" +
	"\x11ViewAssociateByID\x12\x12.Scailo.Identifier\x1a\x18.Scailo.MeetingAssociate\x12C\n" +
	"\x0eViewAssociates\x12\x12.Scailo.Identifier\x1a\x1d.Scailo.MeetingAssociatesList\x12Q\n" +
	"\x10SetAssociateRSVP\x12%.Scailo.MeetingsServiceSetRSVPRequest\x1a\x16.Scailo.IdentifierUUID\x12/\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Meeting\x125\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Meeting\x128\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Meeting\x12>\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Meeting\x12<\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x14.Scailo.MeetingsList\x125\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x14.Scailo.MeetingsList\x12D\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.MeetingsList\x12e\n" +
	"\x12ViewWithPagination\x12$.Scailo.MeetingsServicePaginationReq\x1a).Scailo.MeetingsServicePaginationResponse\x12F\n" +
	"\tSearchAll\x12#.Scailo.MeetingsServiceSearchAllReq\x1a\x14.Scailo.MeetingsList\x12@\n" +
	"\x06Filter\x12 .Scailo.MeetingsServiceFilterReq\x1a\x14.Scailo.MeetingsList\x12?\n" +
	"\x05Count\x12\x1f.Scailo.MeetingsServiceCountReq\x1a\x15.Scailo.CountResponseBe\n" +
	"\n" +
	"com.ScailoB\x13MeetingsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_meetings_scailo_proto_rawDescOnce sync.Once
	file_meetings_scailo_proto_rawDescData []byte
)

func file_meetings_scailo_proto_rawDescGZIP() []byte {
	file_meetings_scailo_proto_rawDescOnce.Do(func() {
		file_meetings_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_meetings_scailo_proto_rawDesc), len(file_meetings_scailo_proto_rawDesc)))
	})
	return file_meetings_scailo_proto_rawDescData
}

var file_meetings_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_meetings_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_meetings_scailo_proto_goTypes = []any{
	(MEETING_LIFECYCLE)(0),                              // 0: Scailo.MEETING_LIFECYCLE
	(MEETING_SORT_KEY)(0),                               // 1: Scailo.MEETING_SORT_KEY
	(MEETING_RSVP)(0),                                   // 2: Scailo.MEETING_RSVP
	(MEETING_ACTIONABLE_SORT_KEY)(0),                    // 3: Scailo.MEETING_ACTIONABLE_SORT_KEY
	(*LogbookLogMeetingLC)(nil),                         // 4: Scailo.LogbookLogMeetingLC
	(*MeetingsServiceCreateRequest)(nil),                // 5: Scailo.MeetingsServiceCreateRequest
	(*MeetingsServiceUpdateRequest)(nil),                // 6: Scailo.MeetingsServiceUpdateRequest
	(*Meeting)(nil),                                     // 7: Scailo.Meeting
	(*MeetingsList)(nil),                                // 8: Scailo.MeetingsList
	(*MeetingsServicePaginationReq)(nil),                // 9: Scailo.MeetingsServicePaginationReq
	(*MeetingsServicePaginationResponse)(nil),           // 10: Scailo.MeetingsServicePaginationResponse
	(*MeetingsServiceFilterReq)(nil),                    // 11: Scailo.MeetingsServiceFilterReq
	(*MeetingsServiceCountReq)(nil),                     // 12: Scailo.MeetingsServiceCountReq
	(*MeetingsServiceSearchAllReq)(nil),                 // 13: Scailo.MeetingsServiceSearchAllReq
	(*MeetingsServiceActionableCreateRequest)(nil),      // 14: Scailo.MeetingsServiceActionableCreateRequest
	(*MeetingsServiceActionableUpdateRequest)(nil),      // 15: Scailo.MeetingsServiceActionableUpdateRequest
	(*MeetingActionable)(nil),                           // 16: Scailo.MeetingActionable
	(*MeetingActionablesList)(nil),                      // 17: Scailo.MeetingActionablesList
	(*MeetingActionableHistoryRequest)(nil),             // 18: Scailo.MeetingActionableHistoryRequest
	(*MeetingActionablesSearchRequest)(nil),             // 19: Scailo.MeetingActionablesSearchRequest
	(*MeetingsServicePaginatedActionablesResponse)(nil), // 20: Scailo.MeetingsServicePaginatedActionablesResponse
	(*MeetingsServiceEmployeeCreateRequest)(nil),        // 21: Scailo.MeetingsServiceEmployeeCreateRequest
	(*MeetingEmployee)(nil),                             // 22: Scailo.MeetingEmployee
	(*MeetingEmployeesList)(nil),                        // 23: Scailo.MeetingEmployeesList
	(*MeetingsServiceAssociateCreateRequest)(nil),       // 24: Scailo.MeetingsServiceAssociateCreateRequest
	(*MeetingAssociate)(nil),                            // 25: Scailo.MeetingAssociate
	(*MeetingAssociatesList)(nil),                       // 26: Scailo.MeetingAssociatesList
	(*MeetingsServiceImportEmployeesRequest)(nil),       // 27: Scailo.MeetingsServiceImportEmployeesRequest
	(*MeetingsServiceSetRSVPRequest)(nil),               // 28: Scailo.MeetingsServiceSetRSVPRequest
	(*FormFieldDatumCreateRequest)(nil),                 // 29: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                            // 30: Scailo.EmployeeMetadata
	(*FormFieldDatum)(nil),                              // 31: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                    // 32: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                     // 33: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                 // 34: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),               // 35: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),               // 36: Scailo.IdentifierWithEmailAttributes
	(*IdentifierWithUserComment)(nil),                   // 37: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                         // 38: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                  // 39: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                     // 40: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                              // 41: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                             // 42: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                // 43: Scailo.ActiveStatus
	(*IdentifierResponse)(nil),                          // 44: Scailo.IdentifierResponse
	(*CountResponse)(nil),                               // 45: Scailo.CountResponse
}
var file_meetings_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.LogbookLogMeetingLC.operation:type_name -> Scailo.MEETING_LIFECYCLE
	29, // 1: Scailo.MeetingsServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	29, // 2: Scailo.MeetingsServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	30, // 3: Scailo.Meeting.metadata:type_name -> Scailo.EmployeeMetadata
	0,  // 4: Scailo.Meeting.status:type_name -> Scailo.MEETING_LIFECYCLE
	4,  // 5: Scailo.Meeting.logs:type_name -> Scailo.LogbookLogMeetingLC
	31, // 6: Scailo.Meeting.form_data:type_name -> Scailo.FormFieldDatum
	7,  // 7: Scailo.MeetingsList.list:type_name -> Scailo.Meeting
	32, // 8: Scailo.MeetingsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	33, // 9: Scailo.MeetingsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 10: Scailo.MeetingsServicePaginationReq.sort_key:type_name -> Scailo.MEETING_SORT_KEY
	0,  // 11: Scailo.MeetingsServicePaginationReq.status:type_name -> Scailo.MEETING_LIFECYCLE
	7,  // 12: Scailo.MeetingsServicePaginationResponse.payload:type_name -> Scailo.Meeting
	32, // 13: Scailo.MeetingsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	33, // 14: Scailo.MeetingsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 15: Scailo.MeetingsServiceFilterReq.sort_key:type_name -> Scailo.MEETING_SORT_KEY
	0,  // 16: Scailo.MeetingsServiceFilterReq.status:type_name -> Scailo.MEETING_LIFECYCLE
	34, // 17: Scailo.MeetingsServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	32, // 18: Scailo.MeetingsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	0,  // 19: Scailo.MeetingsServiceCountReq.status:type_name -> Scailo.MEETING_LIFECYCLE
	34, // 20: Scailo.MeetingsServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	32, // 21: Scailo.MeetingsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	33, // 22: Scailo.MeetingsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 23: Scailo.MeetingsServiceSearchAllReq.sort_key:type_name -> Scailo.MEETING_SORT_KEY
	0,  // 24: Scailo.MeetingsServiceSearchAllReq.status:type_name -> Scailo.MEETING_LIFECYCLE
	30, // 25: Scailo.MeetingActionable.metadata:type_name -> Scailo.EmployeeMetadata
	16, // 26: Scailo.MeetingActionablesList.list:type_name -> Scailo.MeetingActionable
	32, // 27: Scailo.MeetingActionablesSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	33, // 28: Scailo.MeetingActionablesSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	3,  // 29: Scailo.MeetingActionablesSearchRequest.sort_key:type_name -> Scailo.MEETING_ACTIONABLE_SORT_KEY
	16, // 30: Scailo.MeetingsServicePaginatedActionablesResponse.payload:type_name -> Scailo.MeetingActionable
	2,  // 31: Scailo.MeetingsServiceEmployeeCreateRequest.rsvp:type_name -> Scailo.MEETING_RSVP
	30, // 32: Scailo.MeetingEmployee.metadata:type_name -> Scailo.EmployeeMetadata
	2,  // 33: Scailo.MeetingEmployee.rsvp:type_name -> Scailo.MEETING_RSVP
	22, // 34: Scailo.MeetingEmployeesList.list:type_name -> Scailo.MeetingEmployee
	2,  // 35: Scailo.MeetingsServiceAssociateCreateRequest.rsvp:type_name -> Scailo.MEETING_RSVP
	30, // 36: Scailo.MeetingAssociate.metadata:type_name -> Scailo.EmployeeMetadata
	2,  // 37: Scailo.MeetingAssociate.rsvp:type_name -> Scailo.MEETING_RSVP
	25, // 38: Scailo.MeetingAssociatesList.list:type_name -> Scailo.MeetingAssociate
	2,  // 39: Scailo.MeetingsServiceSetRSVPRequest.rsvp:type_name -> Scailo.MEETING_RSVP
	5,  // 40: Scailo.MeetingsService.Create:input_type -> Scailo.MeetingsServiceCreateRequest
	6,  // 41: Scailo.MeetingsService.Update:input_type -> Scailo.MeetingsServiceUpdateRequest
	35, // 42: Scailo.MeetingsService.Cancel:input_type -> Scailo.IdentifierUUIDWithUserComment
	35, // 43: Scailo.MeetingsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	35, // 44: Scailo.MeetingsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	35, // 45: Scailo.MeetingsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	36, // 46: Scailo.MeetingsService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	36, // 47: Scailo.MeetingsService.RequestRSVP:input_type -> Scailo.IdentifierWithEmailAttributes
	36, // 48: Scailo.MeetingsService.SendActionables:input_type -> Scailo.IdentifierWithEmailAttributes
	14, // 49: Scailo.MeetingsService.AddActionable:input_type -> Scailo.MeetingsServiceActionableCreateRequest
	15, // 50: Scailo.MeetingsService.ModifyActionable:input_type -> Scailo.MeetingsServiceActionableUpdateRequest
	37, // 51: Scailo.MeetingsService.DeleteActionable:input_type -> Scailo.IdentifierWithUserComment
	38, // 52: Scailo.MeetingsService.ReorderActionables:input_type -> Scailo.ReorderItemsRequest
	39, // 53: Scailo.MeetingsService.ViewActionableByID:input_type -> Scailo.Identifier
	40, // 54: Scailo.MeetingsService.ViewActionables:input_type -> Scailo.IdentifierWithSearchKey
	18, // 55: Scailo.MeetingsService.ViewActionableHistory:input_type -> Scailo.MeetingActionableHistoryRequest
	19, // 56: Scailo.MeetingsService.ViewPaginatedActionables:input_type -> Scailo.MeetingActionablesSearchRequest
	19, // 57: Scailo.MeetingsService.SearchActionablesWithPagination:input_type -> Scailo.MeetingActionablesSearchRequest
	21, // 58: Scailo.MeetingsService.AddEmployee:input_type -> Scailo.MeetingsServiceEmployeeCreateRequest
	37, // 59: Scailo.MeetingsService.DeleteEmployee:input_type -> Scailo.IdentifierWithUserComment
	39, // 60: Scailo.MeetingsService.ViewEmployeeByID:input_type -> Scailo.Identifier
	39, // 61: Scailo.MeetingsService.ViewEmployees:input_type -> Scailo.Identifier
	28, // 62: Scailo.MeetingsService.SetEmployeeRSVP:input_type -> Scailo.MeetingsServiceSetRSVPRequest
	27, // 63: Scailo.MeetingsService.ImportFromTeam:input_type -> Scailo.MeetingsServiceImportEmployeesRequest
	27, // 64: Scailo.MeetingsService.ImportFromDepartment:input_type -> Scailo.MeetingsServiceImportEmployeesRequest
	24, // 65: Scailo.MeetingsService.AddAssociate:input_type -> Scailo.MeetingsServiceAssociateCreateRequest
	37, // 66: Scailo.MeetingsService.DeleteAssociate:input_type -> Scailo.IdentifierWithUserComment
	39, // 67: Scailo.MeetingsService.ViewAssociateByID:input_type -> Scailo.Identifier
	39, // 68: Scailo.MeetingsService.ViewAssociates:input_type -> Scailo.Identifier
	28, // 69: Scailo.MeetingsService.SetAssociateRSVP:input_type -> Scailo.MeetingsServiceSetRSVPRequest
	39, // 70: Scailo.MeetingsService.ViewByID:input_type -> Scailo.Identifier
	41, // 71: Scailo.MeetingsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	39, // 72: Scailo.MeetingsService.ViewEssentialByID:input_type -> Scailo.Identifier
	41, // 73: Scailo.MeetingsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	42, // 74: Scailo.MeetingsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	43, // 75: Scailo.MeetingsService.ViewAll:input_type -> Scailo.ActiveStatus
	41, // 76: Scailo.MeetingsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	9,  // 77: Scailo.MeetingsService.ViewWithPagination:input_type -> Scailo.MeetingsServicePaginationReq
	13, // 78: Scailo.MeetingsService.SearchAll:input_type -> Scailo.MeetingsServiceSearchAllReq
	11, // 79: Scailo.MeetingsService.Filter:input_type -> Scailo.MeetingsServiceFilterReq
	12, // 80: Scailo.MeetingsService.Count:input_type -> Scailo.MeetingsServiceCountReq
	44, // 81: Scailo.MeetingsService.Create:output_type -> Scailo.IdentifierResponse
	44, // 82: Scailo.MeetingsService.Update:output_type -> Scailo.IdentifierResponse
	44, // 83: Scailo.MeetingsService.Cancel:output_type -> Scailo.IdentifierResponse
	44, // 84: Scailo.MeetingsService.Complete:output_type -> Scailo.IdentifierResponse
	44, // 85: Scailo.MeetingsService.Repeat:output_type -> Scailo.IdentifierResponse
	44, // 86: Scailo.MeetingsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	44, // 87: Scailo.MeetingsService.SendEmail:output_type -> Scailo.IdentifierResponse
	44, // 88: Scailo.MeetingsService.RequestRSVP:output_type -> Scailo.IdentifierResponse
	44, // 89: Scailo.MeetingsService.SendActionables:output_type -> Scailo.IdentifierResponse
	44, // 90: Scailo.MeetingsService.AddActionable:output_type -> Scailo.IdentifierResponse
	44, // 91: Scailo.MeetingsService.ModifyActionable:output_type -> Scailo.IdentifierResponse
	44, // 92: Scailo.MeetingsService.DeleteActionable:output_type -> Scailo.IdentifierResponse
	44, // 93: Scailo.MeetingsService.ReorderActionables:output_type -> Scailo.IdentifierResponse
	16, // 94: Scailo.MeetingsService.ViewActionableByID:output_type -> Scailo.MeetingActionable
	17, // 95: Scailo.MeetingsService.ViewActionables:output_type -> Scailo.MeetingActionablesList
	17, // 96: Scailo.MeetingsService.ViewActionableHistory:output_type -> Scailo.MeetingActionablesList
	20, // 97: Scailo.MeetingsService.ViewPaginatedActionables:output_type -> Scailo.MeetingsServicePaginatedActionablesResponse
	20, // 98: Scailo.MeetingsService.SearchActionablesWithPagination:output_type -> Scailo.MeetingsServicePaginatedActionablesResponse
	44, // 99: Scailo.MeetingsService.AddEmployee:output_type -> Scailo.IdentifierResponse
	44, // 100: Scailo.MeetingsService.DeleteEmployee:output_type -> Scailo.IdentifierResponse
	22, // 101: Scailo.MeetingsService.ViewEmployeeByID:output_type -> Scailo.MeetingEmployee
	23, // 102: Scailo.MeetingsService.ViewEmployees:output_type -> Scailo.MeetingEmployeesList
	41, // 103: Scailo.MeetingsService.SetEmployeeRSVP:output_type -> Scailo.IdentifierUUID
	44, // 104: Scailo.MeetingsService.ImportFromTeam:output_type -> Scailo.IdentifierResponse
	44, // 105: Scailo.MeetingsService.ImportFromDepartment:output_type -> Scailo.IdentifierResponse
	44, // 106: Scailo.MeetingsService.AddAssociate:output_type -> Scailo.IdentifierResponse
	44, // 107: Scailo.MeetingsService.DeleteAssociate:output_type -> Scailo.IdentifierResponse
	25, // 108: Scailo.MeetingsService.ViewAssociateByID:output_type -> Scailo.MeetingAssociate
	26, // 109: Scailo.MeetingsService.ViewAssociates:output_type -> Scailo.MeetingAssociatesList
	41, // 110: Scailo.MeetingsService.SetAssociateRSVP:output_type -> Scailo.IdentifierUUID
	7,  // 111: Scailo.MeetingsService.ViewByID:output_type -> Scailo.Meeting
	7,  // 112: Scailo.MeetingsService.ViewByUUID:output_type -> Scailo.Meeting
	7,  // 113: Scailo.MeetingsService.ViewEssentialByID:output_type -> Scailo.Meeting
	7,  // 114: Scailo.MeetingsService.ViewEssentialByUUID:output_type -> Scailo.Meeting
	8,  // 115: Scailo.MeetingsService.ViewFromIDs:output_type -> Scailo.MeetingsList
	8,  // 116: Scailo.MeetingsService.ViewAll:output_type -> Scailo.MeetingsList
	8,  // 117: Scailo.MeetingsService.ViewAllForEntityUUID:output_type -> Scailo.MeetingsList
	10, // 118: Scailo.MeetingsService.ViewWithPagination:output_type -> Scailo.MeetingsServicePaginationResponse
	8,  // 119: Scailo.MeetingsService.SearchAll:output_type -> Scailo.MeetingsList
	8,  // 120: Scailo.MeetingsService.Filter:output_type -> Scailo.MeetingsList
	45, // 121: Scailo.MeetingsService.Count:output_type -> Scailo.CountResponse
	81, // [81:122] is the sub-list for method output_type
	40, // [40:81] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_meetings_scailo_proto_init() }
func file_meetings_scailo_proto_init() {
	if File_meetings_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_meetings_scailo_proto_rawDesc), len(file_meetings_scailo_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meetings_scailo_proto_goTypes,
		DependencyIndexes: file_meetings_scailo_proto_depIdxs,
		EnumInfos:         file_meetings_scailo_proto_enumTypes,
		MessageInfos:      file_meetings_scailo_proto_msgTypes,
	}.Build()
	File_meetings_scailo_proto = out.File
	file_meetings_scailo_proto_goTypes = nil
	file_meetings_scailo_proto_depIdxs = nil
}
