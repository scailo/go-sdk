// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: expenses.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type EXPENSE_ITEM_SORT_KEY int32

const (
	// Fetch ordered results by id
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_ID_UNSPECIFIED EXPENSE_ITEM_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_CREATED_AT EXPENSE_ITEM_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_MODIFIED_AT EXPENSE_ITEM_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_APPROVED_ON EXPENSE_ITEM_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_APPROVED_BY EXPENSE_ITEM_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_APPROVER_ROLE_ID EXPENSE_ITEM_SORT_KEY = 5
	// Fetch ordered results by the ledger ID
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_LEDGER_ID EXPENSE_ITEM_SORT_KEY = 10
	// Fetch ordered results by the tax group ID
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_TAX_GROUP_ID EXPENSE_ITEM_SORT_KEY = 11
	// Fetch ordered results by the amount
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_AMOUNT EXPENSE_ITEM_SORT_KEY = 12
	// Fetch ordered results by the date of expense
	EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_DATE_OF_EXPENSE EXPENSE_ITEM_SORT_KEY = 13
)

// Enum value maps for EXPENSE_ITEM_SORT_KEY.
var (
	EXPENSE_ITEM_SORT_KEY_name = map[int32]string{
		0:  "EXPENSE_ITEM_SORT_KEY_ID_UNSPECIFIED",
		1:  "EXPENSE_ITEM_SORT_KEY_CREATED_AT",
		2:  "EXPENSE_ITEM_SORT_KEY_MODIFIED_AT",
		3:  "EXPENSE_ITEM_SORT_KEY_APPROVED_ON",
		4:  "EXPENSE_ITEM_SORT_KEY_APPROVED_BY",
		5:  "EXPENSE_ITEM_SORT_KEY_APPROVER_ROLE_ID",
		10: "EXPENSE_ITEM_SORT_KEY_LEDGER_ID",
		11: "EXPENSE_ITEM_SORT_KEY_TAX_GROUP_ID",
		12: "EXPENSE_ITEM_SORT_KEY_AMOUNT",
		13: "EXPENSE_ITEM_SORT_KEY_DATE_OF_EXPENSE",
	}
	EXPENSE_ITEM_SORT_KEY_value = map[string]int32{
		"EXPENSE_ITEM_SORT_KEY_ID_UNSPECIFIED":   0,
		"EXPENSE_ITEM_SORT_KEY_CREATED_AT":       1,
		"EXPENSE_ITEM_SORT_KEY_MODIFIED_AT":      2,
		"EXPENSE_ITEM_SORT_KEY_APPROVED_ON":      3,
		"EXPENSE_ITEM_SORT_KEY_APPROVED_BY":      4,
		"EXPENSE_ITEM_SORT_KEY_APPROVER_ROLE_ID": 5,
		"EXPENSE_ITEM_SORT_KEY_LEDGER_ID":        10,
		"EXPENSE_ITEM_SORT_KEY_TAX_GROUP_ID":     11,
		"EXPENSE_ITEM_SORT_KEY_AMOUNT":           12,
		"EXPENSE_ITEM_SORT_KEY_DATE_OF_EXPENSE":  13,
	}
)

func (x EXPENSE_ITEM_SORT_KEY) Enum() *EXPENSE_ITEM_SORT_KEY {
	p := new(EXPENSE_ITEM_SORT_KEY)
	*p = x
	return p
}

func (x EXPENSE_ITEM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EXPENSE_ITEM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_expenses_scailo_proto_enumTypes[0].Descriptor()
}

func (EXPENSE_ITEM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_expenses_scailo_proto_enumTypes[0]
}

func (x EXPENSE_ITEM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EXPENSE_ITEM_SORT_KEY.Descriptor instead.
func (EXPENSE_ITEM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the applicable statuses of expense items
type EXPENSE_ITEM_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	EXPENSE_ITEM_STATUS_EXPENSE_ITEM_STATUS_ANY_UNSPECIFIED EXPENSE_ITEM_STATUS = 0
	// Denotes that the expense items must have been approved
	EXPENSE_ITEM_STATUS_EXPENSE_ITEM_STATUS_APPROVED EXPENSE_ITEM_STATUS = 1
	// Denotes that the expense items must be waiting for approval
	EXPENSE_ITEM_STATUS_EXPENSE_ITEM_STATUS_UNAPPROVED EXPENSE_ITEM_STATUS = 2
)

// Enum value maps for EXPENSE_ITEM_STATUS.
var (
	EXPENSE_ITEM_STATUS_name = map[int32]string{
		0: "EXPENSE_ITEM_STATUS_ANY_UNSPECIFIED",
		1: "EXPENSE_ITEM_STATUS_APPROVED",
		2: "EXPENSE_ITEM_STATUS_UNAPPROVED",
	}
	EXPENSE_ITEM_STATUS_value = map[string]int32{
		"EXPENSE_ITEM_STATUS_ANY_UNSPECIFIED": 0,
		"EXPENSE_ITEM_STATUS_APPROVED":        1,
		"EXPENSE_ITEM_STATUS_UNAPPROVED":      2,
	}
)

func (x EXPENSE_ITEM_STATUS) Enum() *EXPENSE_ITEM_STATUS {
	p := new(EXPENSE_ITEM_STATUS)
	*p = x
	return p
}

func (x EXPENSE_ITEM_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EXPENSE_ITEM_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_expenses_scailo_proto_enumTypes[1].Descriptor()
}

func (EXPENSE_ITEM_STATUS) Type() protoreflect.EnumType {
	return &file_expenses_scailo_proto_enumTypes[1]
}

func (x EXPENSE_ITEM_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EXPENSE_ITEM_STATUS.Descriptor instead.
func (EXPENSE_ITEM_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the available sort keys
type EXPENSE_SORT_KEY int32

const (
	// Fetch ordered results by id
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_ID_UNSPECIFIED EXPENSE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_CREATED_AT EXPENSE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_MODIFIED_AT EXPENSE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_APPROVED_ON EXPENSE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_APPROVED_BY EXPENSE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_APPROVER_ROLE_ID EXPENSE_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_COMPLETED_ON EXPENSE_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_REFERENCE_ID EXPENSE_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_FINAL_REF_NUMBER EXPENSE_SORT_KEY = 11
	// Fetch ordered results by the currency ID
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_CURRENCY_ID EXPENSE_SORT_KEY = 12
	// Fetch ordered results by the user ID who paid for the expense
	EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_PAID_BY_USER_ID EXPENSE_SORT_KEY = 13
)

// Enum value maps for EXPENSE_SORT_KEY.
var (
	EXPENSE_SORT_KEY_name = map[int32]string{
		0:  "EXPENSE_SORT_KEY_ID_UNSPECIFIED",
		1:  "EXPENSE_SORT_KEY_CREATED_AT",
		2:  "EXPENSE_SORT_KEY_MODIFIED_AT",
		3:  "EXPENSE_SORT_KEY_APPROVED_ON",
		4:  "EXPENSE_SORT_KEY_APPROVED_BY",
		5:  "EXPENSE_SORT_KEY_APPROVER_ROLE_ID",
		6:  "EXPENSE_SORT_KEY_COMPLETED_ON",
		10: "EXPENSE_SORT_KEY_REFERENCE_ID",
		11: "EXPENSE_SORT_KEY_FINAL_REF_NUMBER",
		12: "EXPENSE_SORT_KEY_CURRENCY_ID",
		13: "EXPENSE_SORT_KEY_PAID_BY_USER_ID",
	}
	EXPENSE_SORT_KEY_value = map[string]int32{
		"EXPENSE_SORT_KEY_ID_UNSPECIFIED":   0,
		"EXPENSE_SORT_KEY_CREATED_AT":       1,
		"EXPENSE_SORT_KEY_MODIFIED_AT":      2,
		"EXPENSE_SORT_KEY_APPROVED_ON":      3,
		"EXPENSE_SORT_KEY_APPROVED_BY":      4,
		"EXPENSE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"EXPENSE_SORT_KEY_COMPLETED_ON":     6,
		"EXPENSE_SORT_KEY_REFERENCE_ID":     10,
		"EXPENSE_SORT_KEY_FINAL_REF_NUMBER": 11,
		"EXPENSE_SORT_KEY_CURRENCY_ID":      12,
		"EXPENSE_SORT_KEY_PAID_BY_USER_ID":  13,
	}
)

func (x EXPENSE_SORT_KEY) Enum() *EXPENSE_SORT_KEY {
	p := new(EXPENSE_SORT_KEY)
	*p = x
	return p
}

func (x EXPENSE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EXPENSE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_expenses_scailo_proto_enumTypes[2].Descriptor()
}

func (EXPENSE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_expenses_scailo_proto_enumTypes[2]
}

func (x EXPENSE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EXPENSE_SORT_KEY.Descriptor instead.
func (EXPENSE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the parameters necessary to create a record
type ExpensesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the expense
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The reference on which the expense has been created
	RefFrom string `protobuf:"bytes,12,opt,name=ref_from,json=refFrom,proto3" json:"ref_from,omitempty"`
	// The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the user who paid for this expense (if paid by organization, then this will be 0)
	PaidByUserId uint64 `protobuf:"varint,15,opt,name=paid_by_user_id,json=paidByUserId,proto3" json:"paid_by_user_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceCreateRequest) Reset() {
	*x = ExpensesServiceCreateRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceCreateRequest) ProtoMessage() {}

func (x *ExpensesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ExpensesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *ExpensesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpensesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ExpensesServiceCreateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpensesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *ExpensesServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExpensesServiceCreateRequest) GetRefFrom() string {
	if x != nil {
		return x.RefFrom
	}
	return ""
}

func (x *ExpensesServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *ExpensesServiceCreateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *ExpensesServiceCreateRequest) GetPaidByUserId() uint64 {
	if x != nil {
		return x.PaidByUserId
	}
	return 0
}

func (x *ExpensesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type ExpensesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the expense
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The reference on which the expense has been created
	RefFrom string `protobuf:"bytes,12,opt,name=ref_from,json=refFrom,proto3" json:"ref_from,omitempty"`
	// The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the user who paid for this expense (if paid by organization, then this will be 0)
	PaidByUserId uint64 `protobuf:"varint,15,opt,name=paid_by_user_id,json=paidByUserId,proto3" json:"paid_by_user_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceUpdateRequest) Reset() {
	*x = ExpensesServiceUpdateRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceUpdateRequest) ProtoMessage() {}

func (x *ExpensesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ExpensesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *ExpensesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ExpensesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *ExpensesServiceUpdateRequest) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExpensesServiceUpdateRequest) GetRefFrom() string {
	if x != nil {
		return x.RefFrom
	}
	return ""
}

func (x *ExpensesServiceUpdateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetPaidByUserId() uint64 {
	if x != nil {
		return x.PaidByUserId
	}
	return 0
}

func (x *ExpensesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters that are part of a standard response
type Expense struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this expense
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this expense
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this expense
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this expense was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the expense
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The reference on which the expense has been created
	RefFrom string `protobuf:"bytes,12,opt,name=ref_from,json=refFrom,proto3" json:"ref_from,omitempty"`
	// The ID of the associated reference (can be 0 in case ref_from is "not-applicable")
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The ID of the associated currency
	CurrencyId uint64 `protobuf:"varint,14,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the user who paid for this expense (if paid by organization, then this will be 0)
	PaidByUserId uint64 `protobuf:"varint,15,opt,name=paid_by_user_id,json=paidByUserId,proto3" json:"paid_by_user_id,omitempty"`
	// The list of associated expense items
	List []*ExpenseItem `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	// The list of dynamic forms
	FormData []*FormFieldDatum `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	// The total amount of the expense
	TotalAmount   float64 `protobuf:"fixed64,40,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expense) Reset() {
	*x = Expense{}
	mi := &file_expenses_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expense) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expense) ProtoMessage() {}

func (x *Expense) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expense.ProtoReflect.Descriptor instead.
func (*Expense) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Expense) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Expense) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Expense) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Expense) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Expense) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Expense) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Expense) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Expense) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Expense) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *Expense) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *Expense) GetRefFrom() string {
	if x != nil {
		return x.RefFrom
	}
	return ""
}

func (x *Expense) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *Expense) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *Expense) GetPaidByUserId() uint64 {
	if x != nil {
		return x.PaidByUserId
	}
	return 0
}

func (x *Expense) GetList() []*ExpenseItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *Expense) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

func (x *Expense) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

// Describes the parameters required to add an item to a expense
type ExpensesServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the expense ID
	ExpenseId uint64 `protobuf:"varint,10,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	// Stores the name of the item
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// The associated bill number
	BillNo string `protobuf:"bytes,12,opt,name=bill_no,json=billNo,proto3" json:"bill_no,omitempty"`
	// The description of the item
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The ID of the associated ledger account (can be 0 temporarily)
	LedgerId uint64 `protobuf:"varint,15,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The total amount of this item (in cents)
	Amount uint64 `protobuf:"varint,17,opt,name=amount,proto3" json:"amount,omitempty"`
	// The date on which this expense was incurred
	DateOfExpense string `protobuf:"bytes,18,opt,name=date_of_expense,json=dateOfExpense,proto3" json:"date_of_expense,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceItemCreateRequest) Reset() {
	*x = ExpensesServiceItemCreateRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceItemCreateRequest) ProtoMessage() {}

func (x *ExpensesServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*ExpensesServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *ExpensesServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ExpensesServiceItemCreateRequest) GetExpenseId() uint64 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ExpensesServiceItemCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpensesServiceItemCreateRequest) GetBillNo() string {
	if x != nil {
		return x.BillNo
	}
	return ""
}

func (x *ExpensesServiceItemCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExpensesServiceItemCreateRequest) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *ExpensesServiceItemCreateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *ExpensesServiceItemCreateRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExpensesServiceItemCreateRequest) GetDateOfExpense() string {
	if x != nil {
		return x.DateOfExpense
	}
	return ""
}

// Describes the parameters required to update an item in a expense
type ExpensesServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Stores the name of the item
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// The associated bill number
	BillNo string `protobuf:"bytes,12,opt,name=bill_no,json=billNo,proto3" json:"bill_no,omitempty"`
	// The description of the item
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The ID of the associated ledger account (can be 0 temporarily)
	LedgerId uint64 `protobuf:"varint,15,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The total amount of this item (in cents)
	Amount uint64 `protobuf:"varint,17,opt,name=amount,proto3" json:"amount,omitempty"`
	// The date on which this expense was incurred
	DateOfExpense string `protobuf:"bytes,18,opt,name=date_of_expense,json=dateOfExpense,proto3" json:"date_of_expense,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceItemUpdateRequest) Reset() {
	*x = ExpensesServiceItemUpdateRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceItemUpdateRequest) ProtoMessage() {}

func (x *ExpensesServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*ExpensesServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *ExpensesServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ExpensesServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpensesServiceItemUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpensesServiceItemUpdateRequest) GetBillNo() string {
	if x != nil {
		return x.BillNo
	}
	return ""
}

func (x *ExpensesServiceItemUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExpensesServiceItemUpdateRequest) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *ExpensesServiceItemUpdateRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *ExpensesServiceItemUpdateRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExpensesServiceItemUpdateRequest) GetDateOfExpense() string {
	if x != nil {
		return x.DateOfExpense
	}
	return ""
}

// Describes the parameters that constitute an item associated to a expense
type ExpenseItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this expense
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the expense ID
	ExpenseId uint64 `protobuf:"varint,10,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	// Stores the name of the item
	Name string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	// The associated bill number
	BillNo string `protobuf:"bytes,12,opt,name=bill_no,json=billNo,proto3" json:"bill_no,omitempty"`
	// The description of the item
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The ID of the associated ledger account (can be 0 temporarily)
	LedgerId uint64 `protobuf:"varint,15,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,16,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The total amount of this item (in cents)
	Amount uint64 `protobuf:"varint,17,opt,name=amount,proto3" json:"amount,omitempty"`
	// The date on which this expense was incurred
	DateOfExpense string `protobuf:"bytes,18,opt,name=date_of_expense,json=dateOfExpense,proto3" json:"date_of_expense,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpenseItem) Reset() {
	*x = ExpenseItem{}
	mi := &file_expenses_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpenseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseItem) ProtoMessage() {}

func (x *ExpenseItem) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseItem.ProtoReflect.Descriptor instead.
func (*ExpenseItem) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *ExpenseItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpenseItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExpenseItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *ExpenseItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *ExpenseItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *ExpenseItem) GetExpenseId() uint64 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ExpenseItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpenseItem) GetBillNo() string {
	if x != nil {
		return x.BillNo
	}
	return ""
}

func (x *ExpenseItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExpenseItem) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *ExpenseItem) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *ExpenseItem) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ExpenseItem) GetDateOfExpense() string {
	if x != nil {
		return x.DateOfExpense
	}
	return ""
}

// Describes the message consisting of the list of expenses
type ExpensesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Expense `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesList) Reset() {
	*x = ExpensesList{}
	mi := &file_expenses_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesList) ProtoMessage() {}

func (x *ExpensesList) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesList.ProtoReflect.Descriptor instead.
func (*ExpensesList) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *ExpensesList) GetList() []*Expense {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of expense items
type ExpensesItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*ExpenseItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesItemsList) Reset() {
	*x = ExpensesItemsList{}
	mi := &file_expenses_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesItemsList) ProtoMessage() {}

func (x *ExpensesItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesItemsList.ProtoReflect.Descriptor instead.
func (*ExpensesItemsList) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *ExpensesItemsList) GetList() []*ExpenseItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type ExpenseItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the expense ID
	ExpenseId uint64 `protobuf:"varint,10,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	// Stores the name of the item
	Name          string `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpenseItemHistoryRequest) Reset() {
	*x = ExpenseItemHistoryRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpenseItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseItemHistoryRequest) ProtoMessage() {}

func (x *ExpenseItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*ExpenseItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *ExpenseItemHistoryRequest) GetExpenseId() uint64 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ExpenseItemHistoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Describes the request payload to retrieve approved or unapproved items.
type ExpenseItemsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey EXPENSE_ITEM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.EXPENSE_ITEM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the items
	Status EXPENSE_ITEM_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.EXPENSE_ITEM_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// Stores the expense ID
	ExpenseId uint64 `protobuf:"varint,20,opt,name=expense_id,json=expenseId,proto3" json:"expense_id,omitempty"`
	// The ID of the associated ledger account
	LedgerId uint64 `protobuf:"varint,25,opt,name=ledger_id,json=ledgerId,proto3" json:"ledger_id,omitempty"`
	// The ID of the associated tax group
	TaxGroupId uint64 `protobuf:"varint,26,opt,name=tax_group_id,json=taxGroupId,proto3" json:"tax_group_id,omitempty"`
	// The date on which this expense was incurred
	DateOfExpense string `protobuf:"bytes,28,opt,name=date_of_expense,json=dateOfExpense,proto3" json:"date_of_expense,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpenseItemsSearchRequest) Reset() {
	*x = ExpenseItemsSearchRequest{}
	mi := &file_expenses_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpenseItemsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpenseItemsSearchRequest) ProtoMessage() {}

func (x *ExpenseItemsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpenseItemsSearchRequest.ProtoReflect.Descriptor instead.
func (*ExpenseItemsSearchRequest) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *ExpenseItemsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ExpenseItemsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ExpenseItemsSearchRequest) GetSortKey() EXPENSE_ITEM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return EXPENSE_ITEM_SORT_KEY_EXPENSE_ITEM_SORT_KEY_ID_UNSPECIFIED
}

func (x *ExpenseItemsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpenseItemsSearchRequest) GetStatus() EXPENSE_ITEM_STATUS {
	if x != nil {
		return x.Status
	}
	return EXPENSE_ITEM_STATUS_EXPENSE_ITEM_STATUS_ANY_UNSPECIFIED
}

func (x *ExpenseItemsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetExpenseId() uint64 {
	if x != nil {
		return x.ExpenseId
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetLedgerId() uint64 {
	if x != nil {
		return x.LedgerId
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetTaxGroupId() uint64 {
	if x != nil {
		return x.TaxGroupId
	}
	return 0
}

func (x *ExpenseItemsSearchRequest) GetDateOfExpense() string {
	if x != nil {
		return x.DateOfExpense
	}
	return ""
}

func (x *ExpenseItemsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination items request
type ExpensesServicePaginatedItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*ExpenseItem `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServicePaginatedItemsResponse) Reset() {
	*x = ExpensesServicePaginatedItemsResponse{}
	mi := &file_expenses_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServicePaginatedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServicePaginatedItemsResponse) ProtoMessage() {}

func (x *ExpensesServicePaginatedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServicePaginatedItemsResponse.ProtoReflect.Descriptor instead.
func (*ExpensesServicePaginatedItemsResponse) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *ExpensesServicePaginatedItemsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpensesServicePaginatedItemsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpensesServicePaginatedItemsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExpensesServicePaginatedItemsResponse) GetPayload() []*ExpenseItem {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes a pagination request to retrieve records
type ExpensesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey EXPENSE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.EXPENSE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this expense
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServicePaginationReq) Reset() {
	*x = ExpensesServicePaginationReq{}
	mi := &file_expenses_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServicePaginationReq) ProtoMessage() {}

func (x *ExpensesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*ExpensesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *ExpensesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ExpensesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpensesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpensesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ExpensesServicePaginationReq) GetSortKey() EXPENSE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ExpensesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type ExpensesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Expense `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServicePaginationResponse) Reset() {
	*x = ExpensesServicePaginationResponse{}
	mi := &file_expenses_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServicePaginationResponse) ProtoMessage() {}

func (x *ExpensesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*ExpensesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *ExpensesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpensesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpensesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExpensesServicePaginationResponse) GetPayload() []*Expense {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type ExpensesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey EXPENSE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.EXPENSE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this expense
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the expense
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The currency ID of the expense
	CurrencyId uint64 `protobuf:"varint,22,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the user who paid for this expense (if paid by organization, then this will be 0)
	PaidByUserId uint64 `protobuf:"varint,23,opt,name=paid_by_user_id,json=paidByUserId,proto3" json:"paid_by_user_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,30,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceFilterReq) Reset() {
	*x = ExpensesServiceFilterReq{}
	mi := &file_expenses_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceFilterReq) ProtoMessage() {}

func (x *ExpensesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*ExpensesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *ExpensesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ExpensesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ExpensesServiceFilterReq) GetSortKey() EXPENSE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ExpensesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpensesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ExpensesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExpensesServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *ExpensesServiceFilterReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetPaidByUserId() uint64 {
	if x != nil {
		return x.PaidByUserId
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpensesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type ExpensesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this expense
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the expense
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The currency ID of the expense
	CurrencyId uint64 `protobuf:"varint,22,opt,name=currency_id,json=currencyId,proto3" json:"currency_id,omitempty"`
	// The ID of the user who paid for this expense (if paid by organization, then this will be 0)
	PaidByUserId uint64 `protobuf:"varint,23,opt,name=paid_by_user_id,json=paidByUserId,proto3" json:"paid_by_user_id,omitempty"`
	// The associated project ID
	ProjectId uint64 `protobuf:"varint,30,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceCountReq) Reset() {
	*x = ExpensesServiceCountReq{}
	mi := &file_expenses_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceCountReq) ProtoMessage() {}

func (x *ExpensesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceCountReq.ProtoReflect.Descriptor instead.
func (*ExpensesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *ExpensesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ExpensesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpensesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ExpensesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ExpensesServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *ExpensesServiceCountReq) GetCurrencyId() uint64 {
	if x != nil {
		return x.CurrencyId
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetPaidByUserId() uint64 {
	if x != nil {
		return x.PaidByUserId
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetProjectId() uint64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ExpensesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type ExpensesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey EXPENSE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.EXPENSE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpensesServiceSearchAllReq) Reset() {
	*x = ExpensesServiceSearchAllReq{}
	mi := &file_expenses_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpensesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpensesServiceSearchAllReq) ProtoMessage() {}

func (x *ExpensesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_expenses_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpensesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*ExpensesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_expenses_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *ExpensesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *ExpensesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpensesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ExpensesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *ExpensesServiceSearchAllReq) GetSortKey() EXPENSE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return EXPENSE_SORT_KEY_EXPENSE_SORT_KEY_ID_UNSPECIFIED
}

func (x *ExpensesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *ExpensesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *ExpensesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

var File_expenses_scailo_proto protoreflect.FileDescriptor

const file_expenses_scailo_proto_rawDesc = "" +
	"\n" +
	"\x15expenses.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\x96\x04\n" +
	"\x1cExpensesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"project_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12c\n" +
	"\bref_from\x18\f \x01(\tBH\xbaHErCR\x10purchase-enquiryR\x12quotation-responseR\vsales-orderR\x0enot-applicableR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\x05refId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x12.\n" +
	"\x0fpaid_by_user_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\fpaidByUserId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xb1\x04\n" +
	"\x1cExpensesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12&\n" +
	"\n" +
	"project_id\x18\b \x01(\x04B\a\xbaH\x042\x02(\x00R\tprojectId\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12c\n" +
	"\bref_from\x18\f \x01(\tBH\xbaHErCR\x10purchase-enquiryR\x12quotation-responseR\vsales-orderR\x0enot-applicableR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02(\x00R\x05refId\x12(\n" +
	"\vcurrency_id\x18\x0e \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"currencyId\x12.\n" +
	"\x0fpaid_by_user_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\fpaidByUserId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xc6\x05\n" +
	"\aExpense\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12\x1d\n" +
	"\n" +
	"project_id\x18\b \x01(\x04R\tprojectId\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x12\x19\n" +
	"\bref_from\x18\f \x01(\tR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\r \x01(\x04R\x05refId\x12\x1f\n" +
	"\vcurrency_id\x18\x0e \x01(\x04R\n" +
	"currencyId\x12%\n" +
	"\x0fpaid_by_user_id\x18\x0f \x01(\x04R\fpaidByUserId\x12'\n" +
	"\x04list\x18\x14 \x03(\v2\x13.Scailo.ExpenseItemR\x04list\x123\n" +
	"\tform_data\x18\x1e \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\x12!\n" +
	"\ftotal_amount\x18( \x01(\x01R\vtotalAmount\"\xfa\x02\n" +
	" ExpensesServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12&\n" +
	"\n" +
	"expense_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\texpenseId\x12\x1b\n" +
	"\x04name\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\abill_no\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x00R\x06billNo\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\x12$\n" +
	"\tledger_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\bledgerId\x12)\n" +
	"\ftax_group_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1f\n" +
	"\x06amount\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\x06amount\x12/\n" +
	"\x0fdate_of_expense\x18\x12 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rdateOfExpense\"\xeb\x02\n" +
	" ExpensesServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12\x1b\n" +
	"\x04name\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\abill_no\x18\f \x01(\tB\a\xbaH\x04r\x02\x10\x00R\x06billNo\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\x12$\n" +
	"\tledger_id\x18\x0f \x01(\x04B\a\xbaH\x042\x02(\x00R\bledgerId\x12)\n" +
	"\ftax_group_id\x18\x10 \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"taxGroupId\x12\x1f\n" +
	"\x06amount\x18\x11 \x01(\x04B\a\xbaH\x042\x02 \x00R\x06amount\x12/\n" +
	"\x0fdate_of_expense\x18\x12 \x01(\tB\a\xbaH\x04r\x02\x10\x01R\rdateOfExpense\"\xe0\x03\n" +
	"\vExpenseItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x1d\n" +
	"\n" +
	"expense_id\x18\n" +
	" \x01(\x04R\texpenseId\x12\x12\n" +
	"\x04name\x18\v \x01(\tR\x04name\x12\x17\n" +
	"\abill_no\x18\f \x01(\tR\x06billNo\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x12\x1b\n" +
	"\tledger_id\x18\x0f \x01(\x04R\bledgerId\x12 \n" +
	"\ftax_group_id\x18\x10 \x01(\x04R\n" +
	"taxGroupId\x12\x16\n" +
	"\x06amount\x18\x11 \x01(\x04R\x06amount\x12&\n" +
	"\x0fdate_of_expense\x18\x12 \x01(\tR\rdateOfExpense\"3\n" +
	"\fExpensesList\x12#\n" +
	"\x04list\x18\x01 \x03(\v2\x0f.Scailo.ExpenseR\x04list\"<\n" +
	"\x11ExpensesItemsList\x12'\n" +
	"\x04list\x18\x01 \x03(\v2\x13.Scailo.ExpenseItemR\x04list\"`\n" +
	"\x19ExpenseItemHistoryRequest\x12&\n" +
	"\n" +
	"expense_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\texpenseId\x12\x1b\n" +
	"\x04name\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\"\xab\x05\n" +
	"\x19ExpenseItemsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x128\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1d.Scailo.EXPENSE_ITEM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x123\n" +
	"\x06status\x18\a \x01(\x0e2\x1b.Scailo.EXPENSE_ITEM_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12\x1d\n" +
	"\n" +
	"expense_id\x18\x14 \x01(\x04R\texpenseId\x12\x1b\n" +
	"\tledger_id\x18\x19 \x01(\x04R\bledgerId\x12 \n" +
	"\ftax_group_id\x18\x1a \x01(\x04R\n" +
	"taxGroupId\x12&\n" +
	"\x0fdate_of_expense\x18\x1c \x01(\tR\rdateOfExpense\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\x9a\x01\n" +
	"%ExpensesServicePaginatedItemsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12-\n" +
	"\apayload\x18\x04 \x03(\v2\x13.Scailo.ExpenseItemR\apayload\"\xb3\x02\n" +
	"\x1cExpensesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.EXPENSE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x92\x01\n" +
	"!ExpensesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12)\n" +
	"\apayload\x18\x04 \x03(\v2\x0f.Scailo.ExpenseR\apayload\"\xc5\b\n" +
	"\x18ExpensesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.EXPENSE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x1f\n" +
	"\vcurrency_id\x18\x16 \x01(\x04R\n" +
	"currencyId\x12%\n" +
	"\x0fpaid_by_user_id\x18\x17 \x01(\x04R\fpaidByUserId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x1e \x01(\x04R\tprojectId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\x93\a\n" +
	"\x17ExpensesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12\x1f\n" +
	"\vcurrency_id\x18\x16 \x01(\x04R\n" +
	"currencyId\x12%\n" +
	"\x0fpaid_by_user_id\x18\x17 \x01(\x04R\fpaidByUserId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x1e \x01(\x04R\tprojectId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xfb\x02\n" +
	"\x1bExpensesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x123\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x18.Scailo.EXPENSE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey*\xa2\x03\n" +
	"\x15EXPENSE_ITEM_SORT_KEY\x12(\n" +
	"$EXPENSE_ITEM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12$\n" +
	" EXPENSE_ITEM_SORT_KEY_CREATED_AT\x10\x01\x12%\n" +
	"!EXPENSE_ITEM_SORT_KEY_MODIFIED_AT\x10\x02\x12%\n" +
	"!EXPENSE_ITEM_SORT_KEY_APPROVED_ON\x10\x03\x12%\n" +
	"!EXPENSE_ITEM_SORT_KEY_APPROVED_BY\x10\x04\x12*\n" +
	"&EXPENSE_ITEM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12#\n" +
	"\x1fEXPENSE_ITEM_SORT_KEY_LEDGER_ID\x10\n" +
	"\x12&\n" +
	"\"EXPENSE_ITEM_SORT_KEY_TAX_GROUP_ID\x10\v\x12 \n" +
	"\x1cEXPENSE_ITEM_SORT_KEY_AMOUNT\x10\f\x12)\n" +
	"%EXPENSE_ITEM_SORT_KEY_DATE_OF_EXPENSE\x10\r*\x84\x01\n" +
	"\x13EXPENSE_ITEM_STATUS\x12'\n" +
	"#EXPENSE_ITEM_STATUS_ANY_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cEXPENSE_ITEM_STATUS_APPROVED\x10\x01\x12\"\n" +
	"\x1eEXPENSE_ITEM_STATUS_UNAPPROVED\x10\x02*\x9a\x03\n" +
	"\x10EXPENSE_SORT_KEY\x12#\n" +
	"\x1fEXPENSE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bEXPENSE_SORT_KEY_CREATED_AT\x10\x01\x12 \n" +
	"\x1cEXPENSE_SORT_KEY_MODIFIED_AT\x10\x02\x12 \n" +
	"\x1cEXPENSE_SORT_KEY_APPROVED_ON\x10\x03\x12 \n" +
	"\x1cEXPENSE_SORT_KEY_APPROVED_BY\x10\x04\x12%\n" +
	"!EXPENSE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12!\n" +
	"\x1dEXPENSE_SORT_KEY_COMPLETED_ON\x10\x06\x12!\n" +
	"\x1dEXPENSE_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12%\n" +
	"!EXPENSE_SORT_KEY_FINAL_REF_NUMBER\x10\v\x12 \n" +
	"\x1cEXPENSE_SORT_KEY_CURRENCY_ID\x10\f\x12$\n" +
	" EXPENSE_SORT_KEY_PAID_BY_USER_ID\x10\r2\xb8\x1d\n" +
	"\x0fExpensesService\x12J\n" +
	"\x06Create\x12$.Scailo.ExpensesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x05Draft\x12$.Scailo.ExpensesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\vDraftUpdate\x12$.Scailo.ExpensesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x0eRevisionUpdate\x12$.Scailo.ExpensesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12V\n" +
	"\x0eAddExpenseItem\x12(.Scailo.ExpensesServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Y\n" +
	"\x11ModifyExpenseItem\x12(.Scailo.ExpensesServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12S\n" +
	"\x12ApproveExpenseItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x11DeleteExpenseItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\x13ReorderExpenseItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12>\n" +
	"\x13ViewExpenseItemByID\x12\x12.Scailo.Identifier\x1a\x13.Scailo.ExpenseItem\x12V\n" +
	"\x18ViewApprovedExpenseItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x19.Scailo.ExpensesItemsList\x12X\n" +
	"\x1aViewUnapprovedExpenseItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x19.Scailo.ExpensesItemsList\x12V\n" +
	"\x16ViewExpenseItemHistory\x12!.Scailo.ExpenseItemHistoryRequest\x1a\x19.Scailo.ExpensesItemsList\x12u\n" +
	"!ViewPaginatedApprovedExpenseItems\x12!.Scailo.ExpenseItemsSearchRequest\x1a-.Scailo.ExpensesServicePaginatedItemsResponse\x12w\n" +
	"#ViewPaginatedUnapprovedExpenseItems\x12!.Scailo.ExpenseItemsSearchRequest\x1a-.Scailo.ExpensesServicePaginatedItemsResponse\x12m\n" +
	"\x19SearchItemsWithPagination\x12!.Scailo.ExpenseItemsSearchRequest\x1a-.Scailo.ExpensesServicePaginatedItemsResponse\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x12M\n" +
	"\x12UploadExpenseItems\x12\x1e.Scailo.IdentifierUUIDWithFile\x1a\x17.Scailo.IdentifiersList\x12/\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Expense\x125\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Expense\x12=\n" +
	"\x11ViewByReferenceID\x12\x17.Scailo.SimpleSearchReq\x1a\x0f.Scailo.Expense\x128\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x0f.Scailo.Expense\x12>\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0f.Scailo.Expense\x12<\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x14.Scailo.ExpensesList\x125\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x14.Scailo.ExpensesList\x12D\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.ExpensesList\x12e\n" +
	"\x12ViewWithPagination\x12$.Scailo.ExpensesServicePaginationReq\x1a).Scailo.ExpensesServicePaginationResponse\x12A\n" +
	"\x0eIsDownloadable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12>\n" +
	"\x0eDownloadByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12F\n" +
	"\tSearchAll\x12#.Scailo.ExpensesServiceSearchAllReq\x1a\x14.Scailo.ExpensesList\x12@\n" +
	"\x06Filter\x12 .Scailo.ExpensesServiceFilterReq\x1a\x14.Scailo.ExpensesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12?\n" +
	"\x05Count\x12\x1f.Scailo.ExpensesServiceCountReq\x1a\x15.Scailo.CountResponse\x12G\n" +
	"\rDownloadAsCSV\x12 .Scailo.ExpensesServiceFilterReq\x1a\x14.Scailo.StandardFileBe\n" +
	"\n" +
	"com.ScailoB\x13ExpensesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_expenses_scailo_proto_rawDescOnce sync.Once
	file_expenses_scailo_proto_rawDescData []byte
)

func file_expenses_scailo_proto_rawDescGZIP() []byte {
	file_expenses_scailo_proto_rawDescOnce.Do(func() {
		file_expenses_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_expenses_scailo_proto_rawDesc), len(file_expenses_scailo_proto_rawDesc)))
	})
	return file_expenses_scailo_proto_rawDescData
}

var file_expenses_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_expenses_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_expenses_scailo_proto_goTypes = []any{
	(EXPENSE_ITEM_SORT_KEY)(0),                                // 0: Scailo.EXPENSE_ITEM_SORT_KEY
	(EXPENSE_ITEM_STATUS)(0),                                  // 1: Scailo.EXPENSE_ITEM_STATUS
	(EXPENSE_SORT_KEY)(0),                                     // 2: Scailo.EXPENSE_SORT_KEY
	(*ExpensesServiceCreateRequest)(nil),                      // 3: Scailo.ExpensesServiceCreateRequest
	(*ExpensesServiceUpdateRequest)(nil),                      // 4: Scailo.ExpensesServiceUpdateRequest
	(*Expense)(nil),                                           // 5: Scailo.Expense
	(*ExpensesServiceItemCreateRequest)(nil),                  // 6: Scailo.ExpensesServiceItemCreateRequest
	(*ExpensesServiceItemUpdateRequest)(nil),                  // 7: Scailo.ExpensesServiceItemUpdateRequest
	(*ExpenseItem)(nil),                                       // 8: Scailo.ExpenseItem
	(*ExpensesList)(nil),                                      // 9: Scailo.ExpensesList
	(*ExpensesItemsList)(nil),                                 // 10: Scailo.ExpensesItemsList
	(*ExpenseItemHistoryRequest)(nil),                         // 11: Scailo.ExpenseItemHistoryRequest
	(*ExpenseItemsSearchRequest)(nil),                         // 12: Scailo.ExpenseItemsSearchRequest
	(*ExpensesServicePaginatedItemsResponse)(nil),             // 13: Scailo.ExpensesServicePaginatedItemsResponse
	(*ExpensesServicePaginationReq)(nil),                      // 14: Scailo.ExpensesServicePaginationReq
	(*ExpensesServicePaginationResponse)(nil),                 // 15: Scailo.ExpensesServicePaginationResponse
	(*ExpensesServiceFilterReq)(nil),                          // 16: Scailo.ExpensesServiceFilterReq
	(*ExpensesServiceCountReq)(nil),                           // 17: Scailo.ExpensesServiceCountReq
	(*ExpensesServiceSearchAllReq)(nil),                       // 18: Scailo.ExpensesServiceSearchAllReq
	(*FormFieldDatumCreateRequest)(nil),                       // 19: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                  // 20: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                  // 21: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                            // 22: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                              // 23: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                    // 24: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                          // 25: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                           // 26: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                       // 27: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                     // 28: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),                     // 29: Scailo.IdentifierWithEmailAttributes
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil), // 30: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*IdentifierWithUserComment)(nil),                         // 31: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                               // 32: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                        // 33: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),                           // 34: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                                    // 35: Scailo.IdentifierUUID
	(*Empty)(nil),                                             // 36: Scailo.Empty
	(*IdentifierUUIDWithFile)(nil),                            // 37: Scailo.IdentifierUUIDWithFile
	(*SimpleSearchReq)(nil),                                   // 38: Scailo.SimpleSearchReq
	(*IdentifiersList)(nil),                                   // 39: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                      // 40: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),                           // 41: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                // 42: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                         // 43: Scailo.MagicLink
	(*StandardFile)(nil),                                      // 44: Scailo.StandardFile
	(*BooleanResponse)(nil),                                   // 45: Scailo.BooleanResponse
	(*CountResponse)(nil),                                     // 46: Scailo.CountResponse
}
var file_expenses_scailo_proto_depIdxs = []int32{
	19, // 0: Scailo.ExpensesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	19, // 1: Scailo.ExpensesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	20, // 2: Scailo.Expense.metadata:type_name -> Scailo.EmployeeMetadata
	21, // 3: Scailo.Expense.approval_metadata:type_name -> Scailo.ApprovalMetadata
	22, // 4: Scailo.Expense.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 5: Scailo.Expense.logs:type_name -> Scailo.LogbookLogConciseSLC
	8,  // 6: Scailo.Expense.list:type_name -> Scailo.ExpenseItem
	24, // 7: Scailo.Expense.form_data:type_name -> Scailo.FormFieldDatum
	20, // 8: Scailo.ExpenseItem.metadata:type_name -> Scailo.EmployeeMetadata
	21, // 9: Scailo.ExpenseItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	5,  // 10: Scailo.ExpensesList.list:type_name -> Scailo.Expense
	8,  // 11: Scailo.ExpensesItemsList.list:type_name -> Scailo.ExpenseItem
	25, // 12: Scailo.ExpenseItemsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	26, // 13: Scailo.ExpenseItemsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 14: Scailo.ExpenseItemsSearchRequest.sort_key:type_name -> Scailo.EXPENSE_ITEM_SORT_KEY
	1,  // 15: Scailo.ExpenseItemsSearchRequest.status:type_name -> Scailo.EXPENSE_ITEM_STATUS
	8,  // 16: Scailo.ExpensesServicePaginatedItemsResponse.payload:type_name -> Scailo.ExpenseItem
	25, // 17: Scailo.ExpensesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	26, // 18: Scailo.ExpensesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 19: Scailo.ExpensesServicePaginationReq.sort_key:type_name -> Scailo.EXPENSE_SORT_KEY
	22, // 20: Scailo.ExpensesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	5,  // 21: Scailo.ExpensesServicePaginationResponse.payload:type_name -> Scailo.Expense
	25, // 22: Scailo.ExpensesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	26, // 23: Scailo.ExpensesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 24: Scailo.ExpensesServiceFilterReq.sort_key:type_name -> Scailo.EXPENSE_SORT_KEY
	22, // 25: Scailo.ExpensesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	27, // 26: Scailo.ExpensesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	25, // 27: Scailo.ExpensesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	22, // 28: Scailo.ExpensesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	27, // 29: Scailo.ExpensesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	25, // 30: Scailo.ExpensesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	26, // 31: Scailo.ExpensesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 32: Scailo.ExpensesServiceSearchAllReq.sort_key:type_name -> Scailo.EXPENSE_SORT_KEY
	22, // 33: Scailo.ExpensesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 34: Scailo.ExpensesService.Create:input_type -> Scailo.ExpensesServiceCreateRequest
	3,  // 35: Scailo.ExpensesService.Draft:input_type -> Scailo.ExpensesServiceCreateRequest
	4,  // 36: Scailo.ExpensesService.DraftUpdate:input_type -> Scailo.ExpensesServiceUpdateRequest
	28, // 37: Scailo.ExpensesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 38: Scailo.ExpensesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 39: Scailo.ExpensesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 40: Scailo.ExpensesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	4,  // 41: Scailo.ExpensesService.RevisionUpdate:input_type -> Scailo.ExpensesServiceUpdateRequest
	28, // 42: Scailo.ExpensesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 43: Scailo.ExpensesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 44: Scailo.ExpensesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 45: Scailo.ExpensesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 46: Scailo.ExpensesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 47: Scailo.ExpensesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	28, // 48: Scailo.ExpensesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	29, // 49: Scailo.ExpensesService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	30, // 50: Scailo.ExpensesService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	6,  // 51: Scailo.ExpensesService.AddExpenseItem:input_type -> Scailo.ExpensesServiceItemCreateRequest
	7,  // 52: Scailo.ExpensesService.ModifyExpenseItem:input_type -> Scailo.ExpensesServiceItemUpdateRequest
	31, // 53: Scailo.ExpensesService.ApproveExpenseItem:input_type -> Scailo.IdentifierWithUserComment
	31, // 54: Scailo.ExpensesService.DeleteExpenseItem:input_type -> Scailo.IdentifierWithUserComment
	32, // 55: Scailo.ExpensesService.ReorderExpenseItems:input_type -> Scailo.ReorderItemsRequest
	33, // 56: Scailo.ExpensesService.ViewExpenseItemByID:input_type -> Scailo.Identifier
	34, // 57: Scailo.ExpensesService.ViewApprovedExpenseItems:input_type -> Scailo.IdentifierWithSearchKey
	34, // 58: Scailo.ExpensesService.ViewUnapprovedExpenseItems:input_type -> Scailo.IdentifierWithSearchKey
	11, // 59: Scailo.ExpensesService.ViewExpenseItemHistory:input_type -> Scailo.ExpenseItemHistoryRequest
	12, // 60: Scailo.ExpensesService.ViewPaginatedApprovedExpenseItems:input_type -> Scailo.ExpenseItemsSearchRequest
	12, // 61: Scailo.ExpensesService.ViewPaginatedUnapprovedExpenseItems:input_type -> Scailo.ExpenseItemsSearchRequest
	12, // 62: Scailo.ExpensesService.SearchItemsWithPagination:input_type -> Scailo.ExpenseItemsSearchRequest
	35, // 63: Scailo.ExpensesService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	36, // 64: Scailo.ExpensesService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	37, // 65: Scailo.ExpensesService.UploadExpenseItems:input_type -> Scailo.IdentifierUUIDWithFile
	33, // 66: Scailo.ExpensesService.ViewByID:input_type -> Scailo.Identifier
	35, // 67: Scailo.ExpensesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	38, // 68: Scailo.ExpensesService.ViewByReferenceID:input_type -> Scailo.SimpleSearchReq
	33, // 69: Scailo.ExpensesService.ViewEssentialByID:input_type -> Scailo.Identifier
	35, // 70: Scailo.ExpensesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	39, // 71: Scailo.ExpensesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	40, // 72: Scailo.ExpensesService.ViewAll:input_type -> Scailo.ActiveStatus
	35, // 73: Scailo.ExpensesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	14, // 74: Scailo.ExpensesService.ViewWithPagination:input_type -> Scailo.ExpensesServicePaginationReq
	35, // 75: Scailo.ExpensesService.IsDownloadable:input_type -> Scailo.IdentifierUUID
	35, // 76: Scailo.ExpensesService.DownloadByUUID:input_type -> Scailo.IdentifierUUID
	18, // 77: Scailo.ExpensesService.SearchAll:input_type -> Scailo.ExpensesServiceSearchAllReq
	16, // 78: Scailo.ExpensesService.Filter:input_type -> Scailo.ExpensesServiceFilterReq
	41, // 79: Scailo.ExpensesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	17, // 80: Scailo.ExpensesService.Count:input_type -> Scailo.ExpensesServiceCountReq
	16, // 81: Scailo.ExpensesService.DownloadAsCSV:input_type -> Scailo.ExpensesServiceFilterReq
	42, // 82: Scailo.ExpensesService.Create:output_type -> Scailo.IdentifierResponse
	42, // 83: Scailo.ExpensesService.Draft:output_type -> Scailo.IdentifierResponse
	42, // 84: Scailo.ExpensesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	42, // 85: Scailo.ExpensesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	42, // 86: Scailo.ExpensesService.Verify:output_type -> Scailo.IdentifierResponse
	42, // 87: Scailo.ExpensesService.Approve:output_type -> Scailo.IdentifierResponse
	42, // 88: Scailo.ExpensesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	42, // 89: Scailo.ExpensesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	42, // 90: Scailo.ExpensesService.Halt:output_type -> Scailo.IdentifierResponse
	42, // 91: Scailo.ExpensesService.Discard:output_type -> Scailo.IdentifierResponse
	42, // 92: Scailo.ExpensesService.Restore:output_type -> Scailo.IdentifierResponse
	42, // 93: Scailo.ExpensesService.Complete:output_type -> Scailo.IdentifierResponse
	42, // 94: Scailo.ExpensesService.Repeat:output_type -> Scailo.IdentifierResponse
	42, // 95: Scailo.ExpensesService.Reopen:output_type -> Scailo.IdentifierResponse
	42, // 96: Scailo.ExpensesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	42, // 97: Scailo.ExpensesService.SendEmail:output_type -> Scailo.IdentifierResponse
	43, // 98: Scailo.ExpensesService.CreateMagicLink:output_type -> Scailo.MagicLink
	42, // 99: Scailo.ExpensesService.AddExpenseItem:output_type -> Scailo.IdentifierResponse
	42, // 100: Scailo.ExpensesService.ModifyExpenseItem:output_type -> Scailo.IdentifierResponse
	42, // 101: Scailo.ExpensesService.ApproveExpenseItem:output_type -> Scailo.IdentifierResponse
	42, // 102: Scailo.ExpensesService.DeleteExpenseItem:output_type -> Scailo.IdentifierResponse
	42, // 103: Scailo.ExpensesService.ReorderExpenseItems:output_type -> Scailo.IdentifierResponse
	8,  // 104: Scailo.ExpensesService.ViewExpenseItemByID:output_type -> Scailo.ExpenseItem
	10, // 105: Scailo.ExpensesService.ViewApprovedExpenseItems:output_type -> Scailo.ExpensesItemsList
	10, // 106: Scailo.ExpensesService.ViewUnapprovedExpenseItems:output_type -> Scailo.ExpensesItemsList
	10, // 107: Scailo.ExpensesService.ViewExpenseItemHistory:output_type -> Scailo.ExpensesItemsList
	13, // 108: Scailo.ExpensesService.ViewPaginatedApprovedExpenseItems:output_type -> Scailo.ExpensesServicePaginatedItemsResponse
	13, // 109: Scailo.ExpensesService.ViewPaginatedUnapprovedExpenseItems:output_type -> Scailo.ExpensesServicePaginatedItemsResponse
	13, // 110: Scailo.ExpensesService.SearchItemsWithPagination:output_type -> Scailo.ExpensesServicePaginatedItemsResponse
	44, // 111: Scailo.ExpensesService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	44, // 112: Scailo.ExpensesService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	39, // 113: Scailo.ExpensesService.UploadExpenseItems:output_type -> Scailo.IdentifiersList
	5,  // 114: Scailo.ExpensesService.ViewByID:output_type -> Scailo.Expense
	5,  // 115: Scailo.ExpensesService.ViewByUUID:output_type -> Scailo.Expense
	5,  // 116: Scailo.ExpensesService.ViewByReferenceID:output_type -> Scailo.Expense
	5,  // 117: Scailo.ExpensesService.ViewEssentialByID:output_type -> Scailo.Expense
	5,  // 118: Scailo.ExpensesService.ViewEssentialByUUID:output_type -> Scailo.Expense
	9,  // 119: Scailo.ExpensesService.ViewFromIDs:output_type -> Scailo.ExpensesList
	9,  // 120: Scailo.ExpensesService.ViewAll:output_type -> Scailo.ExpensesList
	9,  // 121: Scailo.ExpensesService.ViewAllForEntityUUID:output_type -> Scailo.ExpensesList
	15, // 122: Scailo.ExpensesService.ViewWithPagination:output_type -> Scailo.ExpensesServicePaginationResponse
	45, // 123: Scailo.ExpensesService.IsDownloadable:output_type -> Scailo.BooleanResponse
	44, // 124: Scailo.ExpensesService.DownloadByUUID:output_type -> Scailo.StandardFile
	9,  // 125: Scailo.ExpensesService.SearchAll:output_type -> Scailo.ExpensesList
	9,  // 126: Scailo.ExpensesService.Filter:output_type -> Scailo.ExpensesList
	46, // 127: Scailo.ExpensesService.CountInStatus:output_type -> Scailo.CountResponse
	46, // 128: Scailo.ExpensesService.Count:output_type -> Scailo.CountResponse
	44, // 129: Scailo.ExpensesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	82, // [82:130] is the sub-list for method output_type
	34, // [34:82] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_expenses_scailo_proto_init() }
func file_expenses_scailo_proto_init() {
	if File_expenses_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_expenses_scailo_proto_rawDesc), len(file_expenses_scailo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expenses_scailo_proto_goTypes,
		DependencyIndexes: file_expenses_scailo_proto_depIdxs,
		EnumInfos:         file_expenses_scailo_proto_enumTypes,
		MessageInfos:      file_expenses_scailo_proto_msgTypes,
	}.Build()
	File_expenses_scailo_proto = out.File
	file_expenses_scailo_proto_goTypes = nil
	file_expenses_scailo_proto_depIdxs = nil
}
