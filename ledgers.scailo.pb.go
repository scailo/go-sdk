// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: ledgers.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type LEDGER_SORT_KEY int32

const (
	// Fetch ordered results by id
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_ID_UNSPECIFIED LEDGER_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_CREATED_AT LEDGER_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_MODIFIED_AT LEDGER_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_APPROVED_ON LEDGER_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_APPROVED_BY LEDGER_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_APPROVER_ROLE_ID LEDGER_SORT_KEY = 5
	// Fetch ordered results by the name
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_NAME LEDGER_SORT_KEY = 10
	// Fetch ordered results by the code
	LEDGER_SORT_KEY_LEDGER_SORT_KEY_CODE LEDGER_SORT_KEY = 11
)

// Enum value maps for LEDGER_SORT_KEY.
var (
	LEDGER_SORT_KEY_name = map[int32]string{
		0:  "LEDGER_SORT_KEY_ID_UNSPECIFIED",
		1:  "LEDGER_SORT_KEY_CREATED_AT",
		2:  "LEDGER_SORT_KEY_MODIFIED_AT",
		3:  "LEDGER_SORT_KEY_APPROVED_ON",
		4:  "LEDGER_SORT_KEY_APPROVED_BY",
		5:  "LEDGER_SORT_KEY_APPROVER_ROLE_ID",
		10: "LEDGER_SORT_KEY_NAME",
		11: "LEDGER_SORT_KEY_CODE",
	}
	LEDGER_SORT_KEY_value = map[string]int32{
		"LEDGER_SORT_KEY_ID_UNSPECIFIED":   0,
		"LEDGER_SORT_KEY_CREATED_AT":       1,
		"LEDGER_SORT_KEY_MODIFIED_AT":      2,
		"LEDGER_SORT_KEY_APPROVED_ON":      3,
		"LEDGER_SORT_KEY_APPROVED_BY":      4,
		"LEDGER_SORT_KEY_APPROVER_ROLE_ID": 5,
		"LEDGER_SORT_KEY_NAME":             10,
		"LEDGER_SORT_KEY_CODE":             11,
	}
)

func (x LEDGER_SORT_KEY) Enum() *LEDGER_SORT_KEY {
	p := new(LEDGER_SORT_KEY)
	*p = x
	return p
}

func (x LEDGER_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LEDGER_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_ledgers_scailo_proto_enumTypes[0].Descriptor()
}

func (LEDGER_SORT_KEY) Type() protoreflect.EnumType {
	return &file_ledgers_scailo_proto_enumTypes[0]
}

func (x LEDGER_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LEDGER_SORT_KEY.Descriptor instead.
func (LEDGER_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the parameters necessary to create a record
type LedgersServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ledgers a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Ledgers any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The name of the ledger
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the ledger is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated non-leaf parent ledger (0, if the first ledger that is being created is a leaf ledger)
	ParentLedgerId uint64 `protobuf:"varint,12,opt,name=parent_ledger_id,json=parentLedgerId,proto3" json:"parent_ledger_id,omitempty"`
	// Stores if this is a leaf ledger or a non-leaf ledger
	IsLeaf bool `protobuf:"varint,13,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the ledger
	Description   string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServiceCreateRequest) Reset() {
	*x = LedgersServiceCreateRequest{}
	mi := &file_ledgers_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServiceCreateRequest) ProtoMessage() {}

func (x *LedgersServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*LedgersServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *LedgersServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LedgersServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LedgersServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LedgersServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LedgersServiceCreateRequest) GetParentLedgerId() uint64 {
	if x != nil {
		return x.ParentLedgerId
	}
	return 0
}

func (x *LedgersServiceCreateRequest) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *LedgersServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type LedgersServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ledgers any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that ledgers if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The name of the ledger
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the ledger
	Description   string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServiceUpdateRequest) Reset() {
	*x = LedgersServiceUpdateRequest{}
	mi := &file_ledgers_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServiceUpdateRequest) ProtoMessage() {}

func (x *LedgersServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*LedgersServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *LedgersServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *LedgersServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LedgersServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *LedgersServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LedgersServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type Ledger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Ledgers a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Ledgers the metadata of this ledger
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Ledgers the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this ledger
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Ledgers the logs of every operation performed on this ledger
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The name of the ledger
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the ledger is classified
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated non-leaf parent ledger (0, if the first ledger that is being created is a leaf ledger)
	ParentLedgerId uint64 `protobuf:"varint,12,opt,name=parent_ledger_id,json=parentLedgerId,proto3" json:"parent_ledger_id,omitempty"`
	// Stores if this is a leaf ledger or a non-leaf ledger
	IsLeaf bool `protobuf:"varint,13,opt,name=is_leaf,json=isLeaf,proto3" json:"is_leaf,omitempty"`
	// The description of the ledger
	Description   string `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ledger) Reset() {
	*x = Ledger{}
	mi := &file_ledgers_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ledger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ledger) ProtoMessage() {}

func (x *Ledger) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ledger.ProtoReflect.Descriptor instead.
func (*Ledger) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Ledger) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Ledger) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Ledger) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Ledger) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Ledger) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Ledger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ledger) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Ledger) GetParentLedgerId() uint64 {
	if x != nil {
		return x.ParentLedgerId
	}
	return 0
}

func (x *Ledger) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *Ledger) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the message consisting of the list of records
type LedgersList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Ledger `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersList) Reset() {
	*x = LedgersList{}
	mi := &file_ledgers_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersList) ProtoMessage() {}

func (x *LedgersList) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersList.ProtoReflect.Descriptor instead.
func (*LedgersList) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *LedgersList) GetList() []*Ledger {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes a pagination request to retrieve records
type LedgersServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEDGER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEDGER_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this ledger
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServicePaginationReq) Reset() {
	*x = LedgersServicePaginationReq{}
	mi := &file_ledgers_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServicePaginationReq) ProtoMessage() {}

func (x *LedgersServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServicePaginationReq.ProtoReflect.Descriptor instead.
func (*LedgersServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *LedgersServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LedgersServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LedgersServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LedgersServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LedgersServicePaginationReq) GetSortKey() LEDGER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEDGER_SORT_KEY_LEDGER_SORT_KEY_ID_UNSPECIFIED
}

func (x *LedgersServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type LedgersServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Ledger `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServicePaginationResponse) Reset() {
	*x = LedgersServicePaginationResponse{}
	mi := &file_ledgers_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServicePaginationResponse) ProtoMessage() {}

func (x *LedgersServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*LedgersServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *LedgersServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LedgersServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LedgersServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LedgersServicePaginationResponse) GetPayload() []*Ledger {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type LedgersServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEDGER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEDGER_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this ledger
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the ledger
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the ledger is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated non-leaf parent ledger (0, if the first ledger that is being created is a leaf ledger)
	ParentLedgerId uint64 `protobuf:"varint,22,opt,name=parent_ledger_id,json=parentLedgerId,proto3" json:"parent_ledger_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,23,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServiceFilterReq) Reset() {
	*x = LedgersServiceFilterReq{}
	mi := &file_ledgers_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServiceFilterReq) ProtoMessage() {}

func (x *LedgersServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServiceFilterReq.ProtoReflect.Descriptor instead.
func (*LedgersServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *LedgersServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LedgersServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LedgersServiceFilterReq) GetSortKey() LEDGER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEDGER_SORT_KEY_LEDGER_SORT_KEY_ID_UNSPECIFIED
}

func (x *LedgersServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LedgersServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LedgersServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LedgersServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LedgersServiceFilterReq) GetParentLedgerId() uint64 {
	if x != nil {
		return x.ParentLedgerId
	}
	return 0
}

func (x *LedgersServiceFilterReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

// Describes the base request payload of a count search
type LedgersServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this ledger
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The name of the ledger
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The unique code by which the ledger is classified
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the associated non-leaf parent ledger (0, if the first ledger that is being created is a leaf ledger)
	ParentLedgerId uint64 `protobuf:"varint,22,opt,name=parent_ledger_id,json=parentLedgerId,proto3" json:"parent_ledger_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,23,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServiceCountReq) Reset() {
	*x = LedgersServiceCountReq{}
	mi := &file_ledgers_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServiceCountReq) ProtoMessage() {}

func (x *LedgersServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServiceCountReq.ProtoReflect.Descriptor instead.
func (*LedgersServiceCountReq) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *LedgersServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LedgersServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *LedgersServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *LedgersServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *LedgersServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *LedgersServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LedgersServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LedgersServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *LedgersServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *LedgersServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *LedgersServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *LedgersServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LedgersServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LedgersServiceCountReq) GetParentLedgerId() uint64 {
	if x != nil {
		return x.ParentLedgerId
	}
	return 0
}

func (x *LedgersServiceCountReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

// Describes the request payload for performing a generic search operation on records
type LedgersServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey LEDGER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.LEDGER_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The ID of the associated non-leaf parent ledger (0, if the first ledger that is being created is a leaf ledger)
	ParentLedgerId uint64 `protobuf:"varint,22,opt,name=parent_ledger_id,json=parentLedgerId,proto3" json:"parent_ledger_id,omitempty"`
	// Filter with the given leaf property
	IsLeaf        BOOL_FILTER `protobuf:"varint,23,opt,name=is_leaf,json=isLeaf,proto3,enum=Scailo.BOOL_FILTER" json:"is_leaf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LedgersServiceSearchAllReq) Reset() {
	*x = LedgersServiceSearchAllReq{}
	mi := &file_ledgers_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LedgersServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgersServiceSearchAllReq) ProtoMessage() {}

func (x *LedgersServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_ledgers_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgersServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*LedgersServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_ledgers_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *LedgersServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *LedgersServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LedgersServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LedgersServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *LedgersServiceSearchAllReq) GetSortKey() LEDGER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return LEDGER_SORT_KEY_LEDGER_SORT_KEY_ID_UNSPECIFIED
}

func (x *LedgersServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *LedgersServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *LedgersServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *LedgersServiceSearchAllReq) GetParentLedgerId() uint64 {
	if x != nil {
		return x.ParentLedgerId
	}
	return 0
}

func (x *LedgersServiceSearchAllReq) GetIsLeaf() BOOL_FILTER {
	if x != nil {
		return x.IsLeaf
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

var File_ledgers_scailo_proto protoreflect.FileDescriptor

const file_ledgers_scailo_proto_rawDesc = "" +
	"\n" +
	"\x14ledgers.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\x89\x02\n" +
	"\x1bLedgersServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x121\n" +
	"\x10parent_ledger_id\x18\f \x01(\x04B\a\xbaH\x042\x02(\x00R\x0eparentLedgerId\x12\x17\n" +
	"\ais_leaf\x18\r \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\"\xbb\x01\n" +
	"\x1bLedgersServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\"\xa0\x03\n" +
	"\x06Ledger\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12(\n" +
	"\x10parent_ledger_id\x18\f \x01(\x04R\x0eparentLedgerId\x12\x17\n" +
	"\ais_leaf\x18\r \x01(\bR\x06isLeaf\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\"1\n" +
	"\vLedgersList\x12\"\n" +
	"\x04list\x18\x01 \x03(\v2\x0e.Scailo.LedgerR\x04list\"\xb1\x02\n" +
	"\x1bLedgersServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.LEDGER_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x90\x01\n" +
	" LedgersServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12(\n" +
	"\apayload\x18\x04 \x03(\v2\x0e.Scailo.LedgerR\apayload\"\xf4\x06\n" +
	"\x17LedgersServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.LEDGER_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12(\n" +
	"\x10parent_ledger_id\x18\x16 \x01(\x04R\x0eparentLedgerId\x12,\n" +
	"\ais_leaf\x18\x17 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\"\xc3\x05\n" +
	"\x16LedgersServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12(\n" +
	"\x10parent_ledger_id\x18\x16 \x01(\x04R\x0eparentLedgerId\x12,\n" +
	"\ais_leaf\x18\x17 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf\"\xd1\x03\n" +
	"\x1aLedgersServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x122\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x17.Scailo.LEDGER_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12(\n" +
	"\x10parent_ledger_id\x18\x16 \x01(\x04R\x0eparentLedgerId\x12,\n" +
	"\ais_leaf\x18\x17 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\x06isLeaf*\x92\x02\n" +
	"\x0fLEDGER_SORT_KEY\x12\"\n" +
	"\x1eLEDGER_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aLEDGER_SORT_KEY_CREATED_AT\x10\x01\x12\x1f\n" +
	"\x1bLEDGER_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1f\n" +
	"\x1bLEDGER_SORT_KEY_APPROVED_ON\x10\x03\x12\x1f\n" +
	"\x1bLEDGER_SORT_KEY_APPROVED_BY\x10\x04\x12$\n" +
	" LEDGER_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x18\n" +
	"\x14LEDGER_SORT_KEY_NAME\x10\n" +
	"\x12\x18\n" +
	"\x14LEDGER_SORT_KEY_CODE\x10\v2\xe1\x0e\n" +
	"\x0eLedgersService\x12I\n" +
	"\x06Create\x12#.Scailo.LedgersServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12H\n" +
	"\x05Draft\x12#.Scailo.LedgersServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\vDraftUpdate\x12#.Scailo.LedgersServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\x0eRevisionUpdate\x12#.Scailo.LedgersServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12.\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x0e.Scailo.Ledger\x124\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0e.Scailo.Ledger\x127\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x0e.Scailo.Ledger\x12=\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x0e.Scailo.Ledger\x12;\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x13.Scailo.LedgersList\x124\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x13.Scailo.LedgersList\x12C\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x13.Scailo.LedgersList\x12c\n" +
	"\x12ViewWithPagination\x12#.Scailo.LedgersServicePaginationReq\x1a(.Scailo.LedgersServicePaginationResponse\x12D\n" +
	"\tSearchAll\x12\".Scailo.LedgersServiceSearchAllReq\x1a\x13.Scailo.LedgersList\x12>\n" +
	"\x06Filter\x12\x1f.Scailo.LedgersServiceFilterReq\x1a\x13.Scailo.LedgersList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12>\n" +
	"\x05Count\x12\x1e.Scailo.LedgersServiceCountReq\x1a\x15.Scailo.CountResponse\x12F\n" +
	"\rDownloadAsCSV\x12\x1f.Scailo.LedgersServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBd\n" +
	"\n" +
	"com.ScailoB\x12LedgersScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_ledgers_scailo_proto_rawDescOnce sync.Once
	file_ledgers_scailo_proto_rawDescData []byte
)

func file_ledgers_scailo_proto_rawDescGZIP() []byte {
	file_ledgers_scailo_proto_rawDescOnce.Do(func() {
		file_ledgers_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ledgers_scailo_proto_rawDesc), len(file_ledgers_scailo_proto_rawDesc)))
	})
	return file_ledgers_scailo_proto_rawDescData
}

var file_ledgers_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ledgers_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_ledgers_scailo_proto_goTypes = []any{
	(LEDGER_SORT_KEY)(0),                     // 0: Scailo.LEDGER_SORT_KEY
	(*LedgersServiceCreateRequest)(nil),      // 1: Scailo.LedgersServiceCreateRequest
	(*LedgersServiceUpdateRequest)(nil),      // 2: Scailo.LedgersServiceUpdateRequest
	(*Ledger)(nil),                           // 3: Scailo.Ledger
	(*LedgersList)(nil),                      // 4: Scailo.LedgersList
	(*LedgersServicePaginationReq)(nil),      // 5: Scailo.LedgersServicePaginationReq
	(*LedgersServicePaginationResponse)(nil), // 6: Scailo.LedgersServicePaginationResponse
	(*LedgersServiceFilterReq)(nil),          // 7: Scailo.LedgersServiceFilterReq
	(*LedgersServiceCountReq)(nil),           // 8: Scailo.LedgersServiceCountReq
	(*LedgersServiceSearchAllReq)(nil),       // 9: Scailo.LedgersServiceSearchAllReq
	(*EmployeeMetadata)(nil),                 // 10: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                 // 11: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),           // 12: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),             // 13: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                         // 14: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                          // 15: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),    // 16: Scailo.IdentifierUUIDWithUserComment
	(*Identifier)(nil),                       // 17: Scailo.Identifier
	(*IdentifierUUID)(nil),                   // 18: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                  // 19: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                     // 20: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),          // 21: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                     // 22: Scailo.StandardFile
	(*IdentifierResponse)(nil),               // 23: Scailo.IdentifierResponse
	(*CountResponse)(nil),                    // 24: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),              // 25: Scailo.IdentifierUUIDsList
}
var file_ledgers_scailo_proto_depIdxs = []int32{
	10, // 0: Scailo.Ledger.metadata:type_name -> Scailo.EmployeeMetadata
	11, // 1: Scailo.Ledger.approval_metadata:type_name -> Scailo.ApprovalMetadata
	12, // 2: Scailo.Ledger.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	13, // 3: Scailo.Ledger.logs:type_name -> Scailo.LogbookLogConciseSLC
	3,  // 4: Scailo.LedgersList.list:type_name -> Scailo.Ledger
	14, // 5: Scailo.LedgersServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 6: Scailo.LedgersServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 7: Scailo.LedgersServicePaginationReq.sort_key:type_name -> Scailo.LEDGER_SORT_KEY
	12, // 8: Scailo.LedgersServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	3,  // 9: Scailo.LedgersServicePaginationResponse.payload:type_name -> Scailo.Ledger
	14, // 10: Scailo.LedgersServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 11: Scailo.LedgersServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 12: Scailo.LedgersServiceFilterReq.sort_key:type_name -> Scailo.LEDGER_SORT_KEY
	12, // 13: Scailo.LedgersServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 14: Scailo.LedgersServiceFilterReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 15: Scailo.LedgersServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	12, // 16: Scailo.LedgersServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 17: Scailo.LedgersServiceCountReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	14, // 18: Scailo.LedgersServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	15, // 19: Scailo.LedgersServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 20: Scailo.LedgersServiceSearchAllReq.sort_key:type_name -> Scailo.LEDGER_SORT_KEY
	12, // 21: Scailo.LedgersServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	14, // 22: Scailo.LedgersServiceSearchAllReq.is_leaf:type_name -> Scailo.BOOL_FILTER
	1,  // 23: Scailo.LedgersService.Create:input_type -> Scailo.LedgersServiceCreateRequest
	1,  // 24: Scailo.LedgersService.Draft:input_type -> Scailo.LedgersServiceCreateRequest
	2,  // 25: Scailo.LedgersService.DraftUpdate:input_type -> Scailo.LedgersServiceUpdateRequest
	16, // 26: Scailo.LedgersService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 27: Scailo.LedgersService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 28: Scailo.LedgersService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 29: Scailo.LedgersService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	2,  // 30: Scailo.LedgersService.RevisionUpdate:input_type -> Scailo.LedgersServiceUpdateRequest
	16, // 31: Scailo.LedgersService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 32: Scailo.LedgersService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 33: Scailo.LedgersService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	16, // 34: Scailo.LedgersService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	17, // 35: Scailo.LedgersService.ViewByID:input_type -> Scailo.Identifier
	18, // 36: Scailo.LedgersService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	17, // 37: Scailo.LedgersService.ViewEssentialByID:input_type -> Scailo.Identifier
	18, // 38: Scailo.LedgersService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	19, // 39: Scailo.LedgersService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	20, // 40: Scailo.LedgersService.ViewAll:input_type -> Scailo.ActiveStatus
	18, // 41: Scailo.LedgersService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	5,  // 42: Scailo.LedgersService.ViewWithPagination:input_type -> Scailo.LedgersServicePaginationReq
	9,  // 43: Scailo.LedgersService.SearchAll:input_type -> Scailo.LedgersServiceSearchAllReq
	7,  // 44: Scailo.LedgersService.Filter:input_type -> Scailo.LedgersServiceFilterReq
	21, // 45: Scailo.LedgersService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	8,  // 46: Scailo.LedgersService.Count:input_type -> Scailo.LedgersServiceCountReq
	7,  // 47: Scailo.LedgersService.DownloadAsCSV:input_type -> Scailo.LedgersServiceFilterReq
	22, // 48: Scailo.LedgersService.ImportFromCSV:input_type -> Scailo.StandardFile
	23, // 49: Scailo.LedgersService.Create:output_type -> Scailo.IdentifierResponse
	23, // 50: Scailo.LedgersService.Draft:output_type -> Scailo.IdentifierResponse
	23, // 51: Scailo.LedgersService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	23, // 52: Scailo.LedgersService.SendForVerification:output_type -> Scailo.IdentifierResponse
	23, // 53: Scailo.LedgersService.Verify:output_type -> Scailo.IdentifierResponse
	23, // 54: Scailo.LedgersService.Approve:output_type -> Scailo.IdentifierResponse
	23, // 55: Scailo.LedgersService.SendForRevision:output_type -> Scailo.IdentifierResponse
	23, // 56: Scailo.LedgersService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	23, // 57: Scailo.LedgersService.Halt:output_type -> Scailo.IdentifierResponse
	23, // 58: Scailo.LedgersService.Discard:output_type -> Scailo.IdentifierResponse
	23, // 59: Scailo.LedgersService.Restore:output_type -> Scailo.IdentifierResponse
	23, // 60: Scailo.LedgersService.CommentAdd:output_type -> Scailo.IdentifierResponse
	3,  // 61: Scailo.LedgersService.ViewByID:output_type -> Scailo.Ledger
	3,  // 62: Scailo.LedgersService.ViewByUUID:output_type -> Scailo.Ledger
	3,  // 63: Scailo.LedgersService.ViewEssentialByID:output_type -> Scailo.Ledger
	3,  // 64: Scailo.LedgersService.ViewEssentialByUUID:output_type -> Scailo.Ledger
	4,  // 65: Scailo.LedgersService.ViewFromIDs:output_type -> Scailo.LedgersList
	4,  // 66: Scailo.LedgersService.ViewAll:output_type -> Scailo.LedgersList
	4,  // 67: Scailo.LedgersService.ViewAllForEntityUUID:output_type -> Scailo.LedgersList
	6,  // 68: Scailo.LedgersService.ViewWithPagination:output_type -> Scailo.LedgersServicePaginationResponse
	4,  // 69: Scailo.LedgersService.SearchAll:output_type -> Scailo.LedgersList
	4,  // 70: Scailo.LedgersService.Filter:output_type -> Scailo.LedgersList
	24, // 71: Scailo.LedgersService.CountInStatus:output_type -> Scailo.CountResponse
	24, // 72: Scailo.LedgersService.Count:output_type -> Scailo.CountResponse
	22, // 73: Scailo.LedgersService.DownloadAsCSV:output_type -> Scailo.StandardFile
	25, // 74: Scailo.LedgersService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	49, // [49:75] is the sub-list for method output_type
	23, // [23:49] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_ledgers_scailo_proto_init() }
func file_ledgers_scailo_proto_init() {
	if File_ledgers_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ledgers_scailo_proto_rawDesc), len(file_ledgers_scailo_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ledgers_scailo_proto_goTypes,
		DependencyIndexes: file_ledgers_scailo_proto_depIdxs,
		EnumInfos:         file_ledgers_scailo_proto_enumTypes,
		MessageInfos:      file_ledgers_scailo_proto_msgTypes,
	}.Build()
	File_ledgers_scailo_proto = out.File
	file_ledgers_scailo_proto_goTypes = nil
	file_ledgers_scailo_proto_depIdxs = nil
}
