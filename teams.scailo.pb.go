// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: teams.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes the available sort keys
type TEAM_SORT_KEY int32

const (
	// Fetch ordered results by id
	TEAM_SORT_KEY_TEAM_SORT_KEY_ID_UNSPECIFIED TEAM_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	TEAM_SORT_KEY_TEAM_SORT_KEY_CREATED_AT TEAM_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	TEAM_SORT_KEY_TEAM_SORT_KEY_MODIFIED_AT TEAM_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	TEAM_SORT_KEY_TEAM_SORT_KEY_APPROVED_ON TEAM_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	TEAM_SORT_KEY_TEAM_SORT_KEY_APPROVED_BY TEAM_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	TEAM_SORT_KEY_TEAM_SORT_KEY_APPROVER_ROLE_ID TEAM_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	TEAM_SORT_KEY_TEAM_SORT_KEY_COMPLETED_ON TEAM_SORT_KEY = 6
	// Fetch ordered results by the name
	TEAM_SORT_KEY_TEAM_SORT_KEY_NAME TEAM_SORT_KEY = 10
	// Fetch ordered results by the code
	TEAM_SORT_KEY_TEAM_SORT_KEY_CODE TEAM_SORT_KEY = 11
	// Fetch ordered results by the leader ID
	TEAM_SORT_KEY_TEAM_SORT_KEY_LEAD_USER_ID TEAM_SORT_KEY = 12
)

// Enum value maps for TEAM_SORT_KEY.
var (
	TEAM_SORT_KEY_name = map[int32]string{
		0:  "TEAM_SORT_KEY_ID_UNSPECIFIED",
		1:  "TEAM_SORT_KEY_CREATED_AT",
		2:  "TEAM_SORT_KEY_MODIFIED_AT",
		3:  "TEAM_SORT_KEY_APPROVED_ON",
		4:  "TEAM_SORT_KEY_APPROVED_BY",
		5:  "TEAM_SORT_KEY_APPROVER_ROLE_ID",
		6:  "TEAM_SORT_KEY_COMPLETED_ON",
		10: "TEAM_SORT_KEY_NAME",
		11: "TEAM_SORT_KEY_CODE",
		12: "TEAM_SORT_KEY_LEAD_USER_ID",
	}
	TEAM_SORT_KEY_value = map[string]int32{
		"TEAM_SORT_KEY_ID_UNSPECIFIED":   0,
		"TEAM_SORT_KEY_CREATED_AT":       1,
		"TEAM_SORT_KEY_MODIFIED_AT":      2,
		"TEAM_SORT_KEY_APPROVED_ON":      3,
		"TEAM_SORT_KEY_APPROVED_BY":      4,
		"TEAM_SORT_KEY_APPROVER_ROLE_ID": 5,
		"TEAM_SORT_KEY_COMPLETED_ON":     6,
		"TEAM_SORT_KEY_NAME":             10,
		"TEAM_SORT_KEY_CODE":             11,
		"TEAM_SORT_KEY_LEAD_USER_ID":     12,
	}
)

func (x TEAM_SORT_KEY) Enum() *TEAM_SORT_KEY {
	p := new(TEAM_SORT_KEY)
	*p = x
	return p
}

func (x TEAM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TEAM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_scailo_proto_enumTypes[0].Descriptor()
}

func (TEAM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_teams_scailo_proto_enumTypes[0]
}

func (x TEAM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TEAM_SORT_KEY.Descriptor instead.
func (TEAM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type TEAM_MEMBER_SORT_KEY int32

const (
	// Fetch invoiced results by id
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_ID_UNSPECIFIED TEAM_MEMBER_SORT_KEY = 0
	// Fetch invoiced results by the creation timestamp
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_CREATED_AT TEAM_MEMBER_SORT_KEY = 1
	// Fetch invoiced results by the modified timestamp
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_MODIFIED_AT TEAM_MEMBER_SORT_KEY = 2
	// Fetch invoiced results by the approved on timestamp
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_APPROVED_ON TEAM_MEMBER_SORT_KEY = 3
	// Fetch invoiced results by the approved by field
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_APPROVED_BY TEAM_MEMBER_SORT_KEY = 4
	// Fetch invoiced results by the approver's role ID
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_APPROVER_ROLE_ID TEAM_MEMBER_SORT_KEY = 5
	// Fetch invoiced results by the team ID
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_TEAM_ID TEAM_MEMBER_SORT_KEY = 10
	// Fetch invoiced results by the member ID
	TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_MEMBER_ID TEAM_MEMBER_SORT_KEY = 11
)

// Enum value maps for TEAM_MEMBER_SORT_KEY.
var (
	TEAM_MEMBER_SORT_KEY_name = map[int32]string{
		0:  "TEAM_MEMBER_SORT_KEY_ID_UNSPECIFIED",
		1:  "TEAM_MEMBER_SORT_KEY_CREATED_AT",
		2:  "TEAM_MEMBER_SORT_KEY_MODIFIED_AT",
		3:  "TEAM_MEMBER_SORT_KEY_APPROVED_ON",
		4:  "TEAM_MEMBER_SORT_KEY_APPROVED_BY",
		5:  "TEAM_MEMBER_SORT_KEY_APPROVER_ROLE_ID",
		10: "TEAM_MEMBER_SORT_KEY_TEAM_ID",
		11: "TEAM_MEMBER_SORT_KEY_MEMBER_ID",
	}
	TEAM_MEMBER_SORT_KEY_value = map[string]int32{
		"TEAM_MEMBER_SORT_KEY_ID_UNSPECIFIED":   0,
		"TEAM_MEMBER_SORT_KEY_CREATED_AT":       1,
		"TEAM_MEMBER_SORT_KEY_MODIFIED_AT":      2,
		"TEAM_MEMBER_SORT_KEY_APPROVED_ON":      3,
		"TEAM_MEMBER_SORT_KEY_APPROVED_BY":      4,
		"TEAM_MEMBER_SORT_KEY_APPROVER_ROLE_ID": 5,
		"TEAM_MEMBER_SORT_KEY_TEAM_ID":          10,
		"TEAM_MEMBER_SORT_KEY_MEMBER_ID":        11,
	}
)

func (x TEAM_MEMBER_SORT_KEY) Enum() *TEAM_MEMBER_SORT_KEY {
	p := new(TEAM_MEMBER_SORT_KEY)
	*p = x
	return p
}

func (x TEAM_MEMBER_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TEAM_MEMBER_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_scailo_proto_enumTypes[1].Descriptor()
}

func (TEAM_MEMBER_SORT_KEY) Type() protoreflect.EnumType {
	return &file_teams_scailo_proto_enumTypes[1]
}

func (x TEAM_MEMBER_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TEAM_MEMBER_SORT_KEY.Descriptor instead.
func (TEAM_MEMBER_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the applicable statuses of team members
type TEAM_MEMBER_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	TEAM_MEMBER_STATUS_TEAM_MEMBER_STATUS_ANY_UNSPECIFIED TEAM_MEMBER_STATUS = 0
	// Denotes that the team members must have been approved
	TEAM_MEMBER_STATUS_TEAM_MEMBER_STATUS_APPROVED TEAM_MEMBER_STATUS = 1
	// Denotes that the team members must be waiting for approval
	TEAM_MEMBER_STATUS_TEAM_MEMBER_STATUS_UNAPPROVED TEAM_MEMBER_STATUS = 2
)

// Enum value maps for TEAM_MEMBER_STATUS.
var (
	TEAM_MEMBER_STATUS_name = map[int32]string{
		0: "TEAM_MEMBER_STATUS_ANY_UNSPECIFIED",
		1: "TEAM_MEMBER_STATUS_APPROVED",
		2: "TEAM_MEMBER_STATUS_UNAPPROVED",
	}
	TEAM_MEMBER_STATUS_value = map[string]int32{
		"TEAM_MEMBER_STATUS_ANY_UNSPECIFIED": 0,
		"TEAM_MEMBER_STATUS_APPROVED":        1,
		"TEAM_MEMBER_STATUS_UNAPPROVED":      2,
	}
)

func (x TEAM_MEMBER_STATUS) Enum() *TEAM_MEMBER_STATUS {
	p := new(TEAM_MEMBER_STATUS)
	*p = x
	return p
}

func (x TEAM_MEMBER_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TEAM_MEMBER_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_scailo_proto_enumTypes[2].Descriptor()
}

func (TEAM_MEMBER_STATUS) Type() protoreflect.EnumType {
	return &file_teams_scailo_proto_enumTypes[2]
}

func (x TEAM_MEMBER_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TEAM_MEMBER_STATUS.Descriptor instead.
func (TEAM_MEMBER_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the parameters necessary to create a record
type TeamsServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the team
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the team
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the user who is the team lead of this team
	LeadUserId uint64 `protobuf:"varint,12,opt,name=lead_user_id,json=leadUserId,proto3" json:"lead_user_id,omitempty"`
	// The description of the team
	Description   string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceCreateRequest) Reset() {
	*x = TeamsServiceCreateRequest{}
	mi := &file_teams_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceCreateRequest) ProtoMessage() {}

func (x *TeamsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*TeamsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *TeamsServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamsServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *TeamsServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *TeamsServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamsServiceCreateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TeamsServiceCreateRequest) GetLeadUserId() uint64 {
	if x != nil {
		return x.LeadUserId
	}
	return 0
}

func (x *TeamsServiceCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters necessary to update a record
type TeamsServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the team
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the team
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the user who is the team lead of this team
	LeadUserId uint64 `protobuf:"varint,12,opt,name=lead_user_id,json=leadUserId,proto3" json:"lead_user_id,omitempty"`
	// The description of the team
	Description   string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceUpdateRequest) Reset() {
	*x = TeamsServiceUpdateRequest{}
	mi := &file_teams_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceUpdateRequest) ProtoMessage() {}

func (x *TeamsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*TeamsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *TeamsServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *TeamsServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TeamsServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *TeamsServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *TeamsServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamsServiceUpdateRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TeamsServiceUpdateRequest) GetLeadUserId() uint64 {
	if x != nil {
		return x.LeadUserId
	}
	return 0
}

func (x *TeamsServiceUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Describes the parameters that are part of a standard response
type Team struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this team
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this team
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this team
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this team was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The name of the team
	Name string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the team
	Code string `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the user who is the team lead of this team
	LeadUserId uint64 `protobuf:"varint,12,opt,name=lead_user_id,json=leadUserId,proto3" json:"lead_user_id,omitempty"`
	// The description of the team
	Description string `protobuf:"bytes,13,opt,name=description,proto3" json:"description,omitempty"`
	// The list of associated team members
	List          []*TeamMember `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_teams_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *Team) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *Team) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Team) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *Team) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *Team) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Team) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *Team) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Team) GetLeadUserId() uint64 {
	if x != nil {
		return x.LeadUserId
	}
	return 0
}

func (x *Team) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Team) GetList() []*TeamMember {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters required to add a member to a team
type TeamsServiceMemberCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the ID of the team
	TeamId uint64 `protobuf:"varint,10,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// The ID of the user that is part of the team
	UserId        uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceMemberCreateRequest) Reset() {
	*x = TeamsServiceMemberCreateRequest{}
	mi := &file_teams_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceMemberCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceMemberCreateRequest) ProtoMessage() {}

func (x *TeamsServiceMemberCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceMemberCreateRequest.ProtoReflect.Descriptor instead.
func (*TeamsServiceMemberCreateRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *TeamsServiceMemberCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *TeamsServiceMemberCreateRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamsServiceMemberCreateRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the parameters required to update a member in a team
type TeamsServiceMemberUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceMemberUpdateRequest) Reset() {
	*x = TeamsServiceMemberUpdateRequest{}
	mi := &file_teams_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceMemberUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceMemberUpdateRequest) ProtoMessage() {}

func (x *TeamsServiceMemberUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceMemberUpdateRequest.ProtoReflect.Descriptor instead.
func (*TeamsServiceMemberUpdateRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *TeamsServiceMemberUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *TeamsServiceMemberUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Describes the parameters that constitute a member associated to a team
type TeamMember struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this team
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the ID of the team
	TeamId uint64 `protobuf:"varint,10,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// The ID of the user that is part of the team
	UserId        uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
	mi := &file_teams_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMember.ProtoReflect.Descriptor instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *TeamMember) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamMember) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TeamMember) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *TeamMember) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *TeamMember) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *TeamMember) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamMember) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes the message consisting of the list of teams
type TeamsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*Team `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsList) Reset() {
	*x = TeamsList{}
	mi := &file_teams_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsList) ProtoMessage() {}

func (x *TeamsList) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsList.ProtoReflect.Descriptor instead.
func (*TeamsList) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *TeamsList) GetList() []*Team {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of team members
type TeamsMembersList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*TeamMember `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsMembersList) Reset() {
	*x = TeamsMembersList{}
	mi := &file_teams_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsMembersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsMembersList) ProtoMessage() {}

func (x *TeamsMembersList) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsMembersList.ProtoReflect.Descriptor instead.
func (*TeamsMembersList) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *TeamsMembersList) GetList() []*TeamMember {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type TeamMemberHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the ID of the team
	TeamId uint64 `protobuf:"varint,10,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// The ID of the user that is part of the team
	UserId        uint64 `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamMemberHistoryRequest) Reset() {
	*x = TeamMemberHistoryRequest{}
	mi := &file_teams_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamMemberHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMemberHistoryRequest) ProtoMessage() {}

func (x *TeamMemberHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMemberHistoryRequest.ProtoReflect.Descriptor instead.
func (*TeamMemberHistoryRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *TeamMemberHistoryRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamMemberHistoryRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Describes a pagination request to retrieve records
type TeamsServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey TEAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.TEAM_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this team
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServicePaginationReq) Reset() {
	*x = TeamsServicePaginationReq{}
	mi := &file_teams_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServicePaginationReq) ProtoMessage() {}

func (x *TeamsServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServicePaginationReq.ProtoReflect.Descriptor instead.
func (*TeamsServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *TeamsServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *TeamsServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamsServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamsServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *TeamsServicePaginationReq) GetSortKey() TEAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return TEAM_SORT_KEY_TEAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *TeamsServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type TeamsServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*Team `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServicePaginationResponse) Reset() {
	*x = TeamsServicePaginationResponse{}
	mi := &file_teams_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServicePaginationResponse) ProtoMessage() {}

func (x *TeamsServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*TeamsServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *TeamsServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamsServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamsServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TeamsServicePaginationResponse) GetPayload() []*Team {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type TeamsServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey TEAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.TEAM_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this team
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the team
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the team
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the leader
	LeadUserId uint64 `protobuf:"varint,22,opt,name=lead_user_id,json=leadUserId,proto3" json:"lead_user_id,omitempty"`
	// The ID of the member
	MemberUserId  uint64 `protobuf:"varint,23,opt,name=member_user_id,json=memberUserId,proto3" json:"member_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceFilterReq) Reset() {
	*x = TeamsServiceFilterReq{}
	mi := &file_teams_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceFilterReq) ProtoMessage() {}

func (x *TeamsServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceFilterReq.ProtoReflect.Descriptor instead.
func (*TeamsServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *TeamsServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *TeamsServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *TeamsServiceFilterReq) GetSortKey() TEAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return TEAM_SORT_KEY_TEAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *TeamsServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamsServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *TeamsServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamsServiceFilterReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TeamsServiceFilterReq) GetLeadUserId() uint64 {
	if x != nil {
		return x.LeadUserId
	}
	return 0
}

func (x *TeamsServiceFilterReq) GetMemberUserId() uint64 {
	if x != nil {
		return x.MemberUserId
	}
	return 0
}

// Describes the base request payload of a count search
type TeamsServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this team
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The name of the team
	Name string `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	// The code of the team
	Code string `protobuf:"bytes,21,opt,name=code,proto3" json:"code,omitempty"`
	// The ID of the leader
	LeadUserId uint64 `protobuf:"varint,22,opt,name=lead_user_id,json=leadUserId,proto3" json:"lead_user_id,omitempty"`
	// The ID of the member
	MemberUserId  uint64 `protobuf:"varint,23,opt,name=member_user_id,json=memberUserId,proto3" json:"member_user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceCountReq) Reset() {
	*x = TeamsServiceCountReq{}
	mi := &file_teams_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceCountReq) ProtoMessage() {}

func (x *TeamsServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceCountReq.ProtoReflect.Descriptor instead.
func (*TeamsServiceCountReq) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *TeamsServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *TeamsServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *TeamsServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *TeamsServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *TeamsServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *TeamsServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamsServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *TeamsServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *TeamsServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *TeamsServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *TeamsServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *TeamsServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *TeamsServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *TeamsServiceCountReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamsServiceCountReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TeamsServiceCountReq) GetLeadUserId() uint64 {
	if x != nil {
		return x.LeadUserId
	}
	return 0
}

func (x *TeamsServiceCountReq) GetMemberUserId() uint64 {
	if x != nil {
		return x.MemberUserId
	}
	return 0
}

// Describes the request payload for performing a generic search operation on records
type TeamsServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey TEAM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.TEAM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServiceSearchAllReq) Reset() {
	*x = TeamsServiceSearchAllReq{}
	mi := &file_teams_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServiceSearchAllReq) ProtoMessage() {}

func (x *TeamsServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*TeamsServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *TeamsServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *TeamsServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamsServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamsServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *TeamsServiceSearchAllReq) GetSortKey() TEAM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return TEAM_SORT_KEY_TEAM_SORT_KEY_ID_UNSPECIFIED
}

func (x *TeamsServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamsServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *TeamsServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the request payload to retrieve approved or unapproved members.
type TeamMembersSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey TEAM_MEMBER_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.TEAM_MEMBER_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the members
	Status TEAM_MEMBER_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.TEAM_MEMBER_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the team
	TeamId uint64 `protobuf:"varint,20,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	// The ID of the member
	UserId uint64 `protobuf:"varint,21,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamMembersSearchRequest) Reset() {
	*x = TeamMembersSearchRequest{}
	mi := &file_teams_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamMembersSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMembersSearchRequest) ProtoMessage() {}

func (x *TeamMembersSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMembersSearchRequest.ProtoReflect.Descriptor instead.
func (*TeamMembersSearchRequest) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *TeamMembersSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *TeamMembersSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *TeamMembersSearchRequest) GetSortKey() TEAM_MEMBER_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return TEAM_MEMBER_SORT_KEY_TEAM_MEMBER_SORT_KEY_ID_UNSPECIFIED
}

func (x *TeamMembersSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *TeamMembersSearchRequest) GetStatus() TEAM_MEMBER_STATUS {
	if x != nil {
		return x.Status
	}
	return TEAM_MEMBER_STATUS_TEAM_MEMBER_STATUS_ANY_UNSPECIFIED
}

func (x *TeamMembersSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetTeamId() uint64 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TeamMembersSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination members request
type TeamsServicePaginatedMembersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*TeamMember `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamsServicePaginatedMembersResponse) Reset() {
	*x = TeamsServicePaginatedMembersResponse{}
	mi := &file_teams_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamsServicePaginatedMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamsServicePaginatedMembersResponse) ProtoMessage() {}

func (x *TeamsServicePaginatedMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teams_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamsServicePaginatedMembersResponse.ProtoReflect.Descriptor instead.
func (*TeamsServicePaginatedMembersResponse) Descriptor() ([]byte, []int) {
	return file_teams_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *TeamsServicePaginatedMembersResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TeamsServicePaginatedMembersResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TeamsServicePaginatedMembersResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TeamsServicePaginatedMembersResponse) GetPayload() []*TeamMember {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_teams_scailo_proto protoreflect.FileDescriptor

const file_teams_scailo_proto_rawDesc = "" +
	"\n" +
	"\x12teams.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\"\xa0\x02\n" +
	"\x19TeamsServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12)\n" +
	"\flead_user_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"leadUserId\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\"\xbb\x02\n" +
	"\x19TeamsServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x12\x1b\n" +
	"\x04name\x18\n" +
	" \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04name\x12\x1b\n" +
	"\x04code\x18\v \x01(\tB\a\xbaH\x04r\x02\x10\x01R\x04code\x12)\n" +
	"\flead_user_id\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\n" +
	"leadUserId\x12)\n" +
	"\vdescription\x18\r \x01(\tB\a\xbaH\x04r\x02\x10\x01R\vdescription\"\xf0\x03\n" +
	"\x04Team\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12 \n" +
	"\flead_user_id\x18\f \x01(\x04R\n" +
	"leadUserId\x12 \n" +
	"\vdescription\x18\r \x01(\tR\vdescription\x12&\n" +
	"\x04list\x18\x14 \x03(\v2\x12.Scailo.TeamMemberR\x04list\"\x88\x01\n" +
	"\x1fTeamsServiceMemberCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12 \n" +
	"\ateam_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x06teamId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\"]\n" +
	"\x1fTeamsServiceMemberUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\"\xa4\x02\n" +
	"\n" +
	"TeamMember\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12\x17\n" +
	"\ateam_id\x18\n" +
	" \x01(\x04R\x06teamId\x12\x17\n" +
	"\auser_id\x18\v \x01(\x04R\x06userId\"-\n" +
	"\tTeamsList\x12 \n" +
	"\x04list\x18\x01 \x03(\v2\f.Scailo.TeamR\x04list\":\n" +
	"\x10TeamsMembersList\x12&\n" +
	"\x04list\x18\x01 \x03(\v2\x12.Scailo.TeamMemberR\x04list\"^\n" +
	"\x18TeamMemberHistoryRequest\x12 \n" +
	"\ateam_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x06teamId\x12 \n" +
	"\auser_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\x06userId\"\xad\x02\n" +
	"\x19TeamsServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.TEAM_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x8c\x01\n" +
	"\x1eTeamsServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12&\n" +
	"\apayload\x18\x04 \x03(\v2\f.Scailo.TeamR\apayload\"\xb8\a\n" +
	"\x15TeamsServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.TEAM_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12 \n" +
	"\flead_user_id\x18\x16 \x01(\x04R\n" +
	"leadUserId\x12$\n" +
	"\x0emember_user_id\x18\x17 \x01(\x04R\fmemberUserId\"\x89\x06\n" +
	"\x14TeamsServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12\x12\n" +
	"\x04name\x18\x14 \x01(\tR\x04name\x12\x12\n" +
	"\x04code\x18\x15 \x01(\tR\x04code\x12 \n" +
	"\flead_user_id\x18\x16 \x01(\x04R\n" +
	"leadUserId\x12$\n" +
	"\x0emember_user_id\x18\x17 \x01(\x04R\fmemberUserId\"\xf5\x02\n" +
	"\x18TeamsServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x120\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x15.Scailo.TEAM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\"\xd4\x04\n" +
	"\x18TeamMembersSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x127\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1c.Scailo.TEAM_MEMBER_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x122\n" +
	"\x06status\x18\a \x01(\x0e2\x1a.Scailo.TEAM_MEMBER_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12\x17\n" +
	"\ateam_id\x18\x14 \x01(\x04R\x06teamId\x12\x17\n" +
	"\auser_id\x18\x15 \x01(\x04R\x06userId\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\x98\x01\n" +
	"$TeamsServicePaginatedMembersResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12,\n" +
	"\apayload\x18\x04 \x03(\v2\x12.Scailo.TeamMemberR\apayload*\xc0\x02\n" +
	"\rTEAM_SORT_KEY\x12 \n" +
	"\x1cTEAM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18TEAM_SORT_KEY_CREATED_AT\x10\x01\x12\x1d\n" +
	"\x19TEAM_SORT_KEY_MODIFIED_AT\x10\x02\x12\x1d\n" +
	"\x19TEAM_SORT_KEY_APPROVED_ON\x10\x03\x12\x1d\n" +
	"\x19TEAM_SORT_KEY_APPROVED_BY\x10\x04\x12\"\n" +
	"\x1eTEAM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12\x1e\n" +
	"\x1aTEAM_SORT_KEY_COMPLETED_ON\x10\x06\x12\x16\n" +
	"\x12TEAM_SORT_KEY_NAME\x10\n" +
	"\x12\x16\n" +
	"\x12TEAM_SORT_KEY_CODE\x10\v\x12\x1e\n" +
	"\x1aTEAM_SORT_KEY_LEAD_USER_ID\x10\f*\xc7\x02\n" +
	"\x14TEAM_MEMBER_SORT_KEY\x12'\n" +
	"#TEAM_MEMBER_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12#\n" +
	"\x1fTEAM_MEMBER_SORT_KEY_CREATED_AT\x10\x01\x12$\n" +
	" TEAM_MEMBER_SORT_KEY_MODIFIED_AT\x10\x02\x12$\n" +
	" TEAM_MEMBER_SORT_KEY_APPROVED_ON\x10\x03\x12$\n" +
	" TEAM_MEMBER_SORT_KEY_APPROVED_BY\x10\x04\x12)\n" +
	"%TEAM_MEMBER_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12 \n" +
	"\x1cTEAM_MEMBER_SORT_KEY_TEAM_ID\x10\n" +
	"\x12\"\n" +
	"\x1eTEAM_MEMBER_SORT_KEY_MEMBER_ID\x10\v*\x80\x01\n" +
	"\x12TEAM_MEMBER_STATUS\x12&\n" +
	"\"TEAM_MEMBER_STATUS_ANY_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bTEAM_MEMBER_STATUS_APPROVED\x10\x01\x12!\n" +
	"\x1dTEAM_MEMBER_STATUS_UNAPPROVED\x10\x022\xd9\x19\n" +
	"\fTeamsService\x12G\n" +
	"\x06Create\x12!.Scailo.TeamsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12F\n" +
	"\x05Draft\x12!.Scailo.TeamsServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\vDraftUpdate\x12!.Scailo.TeamsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x0eRevisionUpdate\x12!.Scailo.TeamsServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x129\n" +
	"\x05Clone\x12\x14.Scailo.CloneRequest\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\rAddTeamMember\x12'.Scailo.TeamsServiceMemberCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12W\n" +
	"\x10ModifyTeamMember\x12'.Scailo.TeamsServiceMemberUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12R\n" +
	"\x11ApproveTeamMember\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12Q\n" +
	"\x10DeleteTeamMember\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\x12ReorderTeamMembers\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12<\n" +
	"\x12ViewTeamMemberByID\x12\x12.Scailo.Identifier\x1a\x12.Scailo.TeamMember\x12T\n" +
	"\x17ViewApprovedTeamMembers\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x18.Scailo.TeamsMembersList\x12V\n" +
	"\x19ViewUnapprovedTeamMembers\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x18.Scailo.TeamsMembersList\x12S\n" +
	"\x15ViewTeamMemberHistory\x12 .Scailo.TeamMemberHistoryRequest\x1a\x18.Scailo.TeamsMembersList\x12r\n" +
	" ViewPaginatedApprovedTeamMembers\x12 .Scailo.TeamMembersSearchRequest\x1a,.Scailo.TeamsServicePaginatedMembersResponse\x12t\n" +
	"\"ViewPaginatedUnapprovedTeamMembers\x12 .Scailo.TeamMembersSearchRequest\x1a,.Scailo.TeamsServicePaginatedMembersResponse\x12m\n" +
	"\x1bSearchMembersWithPagination\x12 .Scailo.TeamMembersSearchRequest\x1a,.Scailo.TeamsServicePaginatedMembersResponse\x12;\n" +
	"\x12ViewTeamsForMember\x12\x12.Scailo.Identifier\x1a\x11.Scailo.TeamsList\x12,\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Team\x122\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Team\x125\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\f.Scailo.Team\x12;\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\f.Scailo.Team\x129\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x11.Scailo.TeamsList\x122\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x11.Scailo.TeamsList\x12A\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x11.Scailo.TeamsList\x12_\n" +
	"\x12ViewWithPagination\x12!.Scailo.TeamsServicePaginationReq\x1a&.Scailo.TeamsServicePaginationResponse\x12@\n" +
	"\tSearchAll\x12 .Scailo.TeamsServiceSearchAllReq\x1a\x11.Scailo.TeamsList\x12:\n" +
	"\x06Filter\x12\x1d.Scailo.TeamsServiceFilterReq\x1a\x11.Scailo.TeamsList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12<\n" +
	"\x05Count\x12\x1c.Scailo.TeamsServiceCountReq\x1a\x15.Scailo.CountResponse\x12D\n" +
	"\rDownloadAsCSV\x12\x1d.Scailo.TeamsServiceFilterReq\x1a\x14.Scailo.StandardFile\x12B\n" +
	"\rImportFromCSV\x12\x14.Scailo.StandardFile\x1a\x1b.Scailo.IdentifierUUIDsListBb\n" +
	"\n" +
	"com.ScailoB\x10TeamsScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_teams_scailo_proto_rawDescOnce sync.Once
	file_teams_scailo_proto_rawDescData []byte
)

func file_teams_scailo_proto_rawDescGZIP() []byte {
	file_teams_scailo_proto_rawDescOnce.Do(func() {
		file_teams_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_teams_scailo_proto_rawDesc), len(file_teams_scailo_proto_rawDesc)))
	})
	return file_teams_scailo_proto_rawDescData
}

var file_teams_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_teams_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_teams_scailo_proto_goTypes = []any{
	(TEAM_SORT_KEY)(0),                           // 0: Scailo.TEAM_SORT_KEY
	(TEAM_MEMBER_SORT_KEY)(0),                    // 1: Scailo.TEAM_MEMBER_SORT_KEY
	(TEAM_MEMBER_STATUS)(0),                      // 2: Scailo.TEAM_MEMBER_STATUS
	(*TeamsServiceCreateRequest)(nil),            // 3: Scailo.TeamsServiceCreateRequest
	(*TeamsServiceUpdateRequest)(nil),            // 4: Scailo.TeamsServiceUpdateRequest
	(*Team)(nil),                                 // 5: Scailo.Team
	(*TeamsServiceMemberCreateRequest)(nil),      // 6: Scailo.TeamsServiceMemberCreateRequest
	(*TeamsServiceMemberUpdateRequest)(nil),      // 7: Scailo.TeamsServiceMemberUpdateRequest
	(*TeamMember)(nil),                           // 8: Scailo.TeamMember
	(*TeamsList)(nil),                            // 9: Scailo.TeamsList
	(*TeamsMembersList)(nil),                     // 10: Scailo.TeamsMembersList
	(*TeamMemberHistoryRequest)(nil),             // 11: Scailo.TeamMemberHistoryRequest
	(*TeamsServicePaginationReq)(nil),            // 12: Scailo.TeamsServicePaginationReq
	(*TeamsServicePaginationResponse)(nil),       // 13: Scailo.TeamsServicePaginationResponse
	(*TeamsServiceFilterReq)(nil),                // 14: Scailo.TeamsServiceFilterReq
	(*TeamsServiceCountReq)(nil),                 // 15: Scailo.TeamsServiceCountReq
	(*TeamsServiceSearchAllReq)(nil),             // 16: Scailo.TeamsServiceSearchAllReq
	(*TeamMembersSearchRequest)(nil),             // 17: Scailo.TeamMembersSearchRequest
	(*TeamsServicePaginatedMembersResponse)(nil), // 18: Scailo.TeamsServicePaginatedMembersResponse
	(*EmployeeMetadata)(nil),                     // 19: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                     // 20: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),               // 21: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                 // 22: Scailo.LogbookLogConciseSLC
	(BOOL_FILTER)(0),                             // 23: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                              // 24: Scailo.SORT_ORDER
	(*IdentifierUUIDWithUserComment)(nil),        // 25: Scailo.IdentifierUUIDWithUserComment
	(*CloneRequest)(nil),                         // 26: Scailo.CloneRequest
	(*IdentifierWithUserComment)(nil),            // 27: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                  // 28: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                           // 29: Scailo.Identifier
	(*IdentifierWithSearchKey)(nil),              // 30: Scailo.IdentifierWithSearchKey
	(*IdentifierUUID)(nil),                       // 31: Scailo.IdentifierUUID
	(*IdentifiersList)(nil),                      // 32: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                         // 33: Scailo.ActiveStatus
	(*CountInSLCStatusRequest)(nil),              // 34: Scailo.CountInSLCStatusRequest
	(*StandardFile)(nil),                         // 35: Scailo.StandardFile
	(*IdentifierResponse)(nil),                   // 36: Scailo.IdentifierResponse
	(*CountResponse)(nil),                        // 37: Scailo.CountResponse
	(*IdentifierUUIDsList)(nil),                  // 38: Scailo.IdentifierUUIDsList
}
var file_teams_scailo_proto_depIdxs = []int32{
	19, // 0: Scailo.Team.metadata:type_name -> Scailo.EmployeeMetadata
	20, // 1: Scailo.Team.approval_metadata:type_name -> Scailo.ApprovalMetadata
	21, // 2: Scailo.Team.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	22, // 3: Scailo.Team.logs:type_name -> Scailo.LogbookLogConciseSLC
	8,  // 4: Scailo.Team.list:type_name -> Scailo.TeamMember
	19, // 5: Scailo.TeamMember.metadata:type_name -> Scailo.EmployeeMetadata
	20, // 6: Scailo.TeamMember.approval_metadata:type_name -> Scailo.ApprovalMetadata
	5,  // 7: Scailo.TeamsList.list:type_name -> Scailo.Team
	8,  // 8: Scailo.TeamsMembersList.list:type_name -> Scailo.TeamMember
	23, // 9: Scailo.TeamsServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 10: Scailo.TeamsServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 11: Scailo.TeamsServicePaginationReq.sort_key:type_name -> Scailo.TEAM_SORT_KEY
	21, // 12: Scailo.TeamsServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	5,  // 13: Scailo.TeamsServicePaginationResponse.payload:type_name -> Scailo.Team
	23, // 14: Scailo.TeamsServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 15: Scailo.TeamsServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 16: Scailo.TeamsServiceFilterReq.sort_key:type_name -> Scailo.TEAM_SORT_KEY
	21, // 17: Scailo.TeamsServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 18: Scailo.TeamsServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	21, // 19: Scailo.TeamsServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 20: Scailo.TeamsServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 21: Scailo.TeamsServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	0,  // 22: Scailo.TeamsServiceSearchAllReq.sort_key:type_name -> Scailo.TEAM_SORT_KEY
	21, // 23: Scailo.TeamsServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	23, // 24: Scailo.TeamMembersSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	24, // 25: Scailo.TeamMembersSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 26: Scailo.TeamMembersSearchRequest.sort_key:type_name -> Scailo.TEAM_MEMBER_SORT_KEY
	2,  // 27: Scailo.TeamMembersSearchRequest.status:type_name -> Scailo.TEAM_MEMBER_STATUS
	8,  // 28: Scailo.TeamsServicePaginatedMembersResponse.payload:type_name -> Scailo.TeamMember
	3,  // 29: Scailo.TeamsService.Create:input_type -> Scailo.TeamsServiceCreateRequest
	3,  // 30: Scailo.TeamsService.Draft:input_type -> Scailo.TeamsServiceCreateRequest
	4,  // 31: Scailo.TeamsService.DraftUpdate:input_type -> Scailo.TeamsServiceUpdateRequest
	25, // 32: Scailo.TeamsService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 33: Scailo.TeamsService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 34: Scailo.TeamsService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 35: Scailo.TeamsService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	4,  // 36: Scailo.TeamsService.RevisionUpdate:input_type -> Scailo.TeamsServiceUpdateRequest
	25, // 37: Scailo.TeamsService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 38: Scailo.TeamsService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 39: Scailo.TeamsService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 40: Scailo.TeamsService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 41: Scailo.TeamsService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 42: Scailo.TeamsService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	25, // 43: Scailo.TeamsService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	26, // 44: Scailo.TeamsService.Clone:input_type -> Scailo.CloneRequest
	6,  // 45: Scailo.TeamsService.AddTeamMember:input_type -> Scailo.TeamsServiceMemberCreateRequest
	7,  // 46: Scailo.TeamsService.ModifyTeamMember:input_type -> Scailo.TeamsServiceMemberUpdateRequest
	27, // 47: Scailo.TeamsService.ApproveTeamMember:input_type -> Scailo.IdentifierWithUserComment
	27, // 48: Scailo.TeamsService.DeleteTeamMember:input_type -> Scailo.IdentifierWithUserComment
	28, // 49: Scailo.TeamsService.ReorderTeamMembers:input_type -> Scailo.ReorderItemsRequest
	29, // 50: Scailo.TeamsService.ViewTeamMemberByID:input_type -> Scailo.Identifier
	30, // 51: Scailo.TeamsService.ViewApprovedTeamMembers:input_type -> Scailo.IdentifierWithSearchKey
	30, // 52: Scailo.TeamsService.ViewUnapprovedTeamMembers:input_type -> Scailo.IdentifierWithSearchKey
	11, // 53: Scailo.TeamsService.ViewTeamMemberHistory:input_type -> Scailo.TeamMemberHistoryRequest
	17, // 54: Scailo.TeamsService.ViewPaginatedApprovedTeamMembers:input_type -> Scailo.TeamMembersSearchRequest
	17, // 55: Scailo.TeamsService.ViewPaginatedUnapprovedTeamMembers:input_type -> Scailo.TeamMembersSearchRequest
	17, // 56: Scailo.TeamsService.SearchMembersWithPagination:input_type -> Scailo.TeamMembersSearchRequest
	29, // 57: Scailo.TeamsService.ViewTeamsForMember:input_type -> Scailo.Identifier
	29, // 58: Scailo.TeamsService.ViewByID:input_type -> Scailo.Identifier
	31, // 59: Scailo.TeamsService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	29, // 60: Scailo.TeamsService.ViewEssentialByID:input_type -> Scailo.Identifier
	31, // 61: Scailo.TeamsService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	32, // 62: Scailo.TeamsService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	33, // 63: Scailo.TeamsService.ViewAll:input_type -> Scailo.ActiveStatus
	31, // 64: Scailo.TeamsService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	12, // 65: Scailo.TeamsService.ViewWithPagination:input_type -> Scailo.TeamsServicePaginationReq
	16, // 66: Scailo.TeamsService.SearchAll:input_type -> Scailo.TeamsServiceSearchAllReq
	14, // 67: Scailo.TeamsService.Filter:input_type -> Scailo.TeamsServiceFilterReq
	34, // 68: Scailo.TeamsService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	15, // 69: Scailo.TeamsService.Count:input_type -> Scailo.TeamsServiceCountReq
	14, // 70: Scailo.TeamsService.DownloadAsCSV:input_type -> Scailo.TeamsServiceFilterReq
	35, // 71: Scailo.TeamsService.ImportFromCSV:input_type -> Scailo.StandardFile
	36, // 72: Scailo.TeamsService.Create:output_type -> Scailo.IdentifierResponse
	36, // 73: Scailo.TeamsService.Draft:output_type -> Scailo.IdentifierResponse
	36, // 74: Scailo.TeamsService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	36, // 75: Scailo.TeamsService.SendForVerification:output_type -> Scailo.IdentifierResponse
	36, // 76: Scailo.TeamsService.Verify:output_type -> Scailo.IdentifierResponse
	36, // 77: Scailo.TeamsService.Approve:output_type -> Scailo.IdentifierResponse
	36, // 78: Scailo.TeamsService.SendForRevision:output_type -> Scailo.IdentifierResponse
	36, // 79: Scailo.TeamsService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	36, // 80: Scailo.TeamsService.Halt:output_type -> Scailo.IdentifierResponse
	36, // 81: Scailo.TeamsService.Discard:output_type -> Scailo.IdentifierResponse
	36, // 82: Scailo.TeamsService.Restore:output_type -> Scailo.IdentifierResponse
	36, // 83: Scailo.TeamsService.Complete:output_type -> Scailo.IdentifierResponse
	36, // 84: Scailo.TeamsService.Repeat:output_type -> Scailo.IdentifierResponse
	36, // 85: Scailo.TeamsService.Reopen:output_type -> Scailo.IdentifierResponse
	36, // 86: Scailo.TeamsService.CommentAdd:output_type -> Scailo.IdentifierResponse
	36, // 87: Scailo.TeamsService.Clone:output_type -> Scailo.IdentifierResponse
	36, // 88: Scailo.TeamsService.AddTeamMember:output_type -> Scailo.IdentifierResponse
	36, // 89: Scailo.TeamsService.ModifyTeamMember:output_type -> Scailo.IdentifierResponse
	36, // 90: Scailo.TeamsService.ApproveTeamMember:output_type -> Scailo.IdentifierResponse
	36, // 91: Scailo.TeamsService.DeleteTeamMember:output_type -> Scailo.IdentifierResponse
	36, // 92: Scailo.TeamsService.ReorderTeamMembers:output_type -> Scailo.IdentifierResponse
	8,  // 93: Scailo.TeamsService.ViewTeamMemberByID:output_type -> Scailo.TeamMember
	10, // 94: Scailo.TeamsService.ViewApprovedTeamMembers:output_type -> Scailo.TeamsMembersList
	10, // 95: Scailo.TeamsService.ViewUnapprovedTeamMembers:output_type -> Scailo.TeamsMembersList
	10, // 96: Scailo.TeamsService.ViewTeamMemberHistory:output_type -> Scailo.TeamsMembersList
	18, // 97: Scailo.TeamsService.ViewPaginatedApprovedTeamMembers:output_type -> Scailo.TeamsServicePaginatedMembersResponse
	18, // 98: Scailo.TeamsService.ViewPaginatedUnapprovedTeamMembers:output_type -> Scailo.TeamsServicePaginatedMembersResponse
	18, // 99: Scailo.TeamsService.SearchMembersWithPagination:output_type -> Scailo.TeamsServicePaginatedMembersResponse
	9,  // 100: Scailo.TeamsService.ViewTeamsForMember:output_type -> Scailo.TeamsList
	5,  // 101: Scailo.TeamsService.ViewByID:output_type -> Scailo.Team
	5,  // 102: Scailo.TeamsService.ViewByUUID:output_type -> Scailo.Team
	5,  // 103: Scailo.TeamsService.ViewEssentialByID:output_type -> Scailo.Team
	5,  // 104: Scailo.TeamsService.ViewEssentialByUUID:output_type -> Scailo.Team
	9,  // 105: Scailo.TeamsService.ViewFromIDs:output_type -> Scailo.TeamsList
	9,  // 106: Scailo.TeamsService.ViewAll:output_type -> Scailo.TeamsList
	9,  // 107: Scailo.TeamsService.ViewAllForEntityUUID:output_type -> Scailo.TeamsList
	13, // 108: Scailo.TeamsService.ViewWithPagination:output_type -> Scailo.TeamsServicePaginationResponse
	9,  // 109: Scailo.TeamsService.SearchAll:output_type -> Scailo.TeamsList
	9,  // 110: Scailo.TeamsService.Filter:output_type -> Scailo.TeamsList
	37, // 111: Scailo.TeamsService.CountInStatus:output_type -> Scailo.CountResponse
	37, // 112: Scailo.TeamsService.Count:output_type -> Scailo.CountResponse
	35, // 113: Scailo.TeamsService.DownloadAsCSV:output_type -> Scailo.StandardFile
	38, // 114: Scailo.TeamsService.ImportFromCSV:output_type -> Scailo.IdentifierUUIDsList
	72, // [72:115] is the sub-list for method output_type
	29, // [29:72] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_teams_scailo_proto_init() }
func file_teams_scailo_proto_init() {
	if File_teams_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_teams_scailo_proto_rawDesc), len(file_teams_scailo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teams_scailo_proto_goTypes,
		DependencyIndexes: file_teams_scailo_proto_depIdxs,
		EnumInfos:         file_teams_scailo_proto_enumTypes,
		MessageInfos:      file_teams_scailo_proto_msgTypes,
	}.Build()
	File_teams_scailo_proto = out.File
	file_teams_scailo_proto_goTypes = nil
	file_teams_scailo_proto_depIdxs = nil
}
