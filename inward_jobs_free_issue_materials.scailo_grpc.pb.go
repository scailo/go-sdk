// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: inward_jobs_free_issue_materials.scailo.proto

package sdk

import (
	context "context"

	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	InwardJobsFreeIssueMaterialsService_Create_FullMethodName                                                 = "/Scailo.InwardJobsFreeIssueMaterialsService/Create"
	InwardJobsFreeIssueMaterialsService_Draft_FullMethodName                                                  = "/Scailo.InwardJobsFreeIssueMaterialsService/Draft"
	InwardJobsFreeIssueMaterialsService_DraftUpdate_FullMethodName                                            = "/Scailo.InwardJobsFreeIssueMaterialsService/DraftUpdate"
	InwardJobsFreeIssueMaterialsService_SendForVerification_FullMethodName                                    = "/Scailo.InwardJobsFreeIssueMaterialsService/SendForVerification"
	InwardJobsFreeIssueMaterialsService_Verify_FullMethodName                                                 = "/Scailo.InwardJobsFreeIssueMaterialsService/Verify"
	InwardJobsFreeIssueMaterialsService_Approve_FullMethodName                                                = "/Scailo.InwardJobsFreeIssueMaterialsService/Approve"
	InwardJobsFreeIssueMaterialsService_SendForRevision_FullMethodName                                        = "/Scailo.InwardJobsFreeIssueMaterialsService/SendForRevision"
	InwardJobsFreeIssueMaterialsService_RevisionUpdate_FullMethodName                                         = "/Scailo.InwardJobsFreeIssueMaterialsService/RevisionUpdate"
	InwardJobsFreeIssueMaterialsService_Halt_FullMethodName                                                   = "/Scailo.InwardJobsFreeIssueMaterialsService/Halt"
	InwardJobsFreeIssueMaterialsService_Discard_FullMethodName                                                = "/Scailo.InwardJobsFreeIssueMaterialsService/Discard"
	InwardJobsFreeIssueMaterialsService_Restore_FullMethodName                                                = "/Scailo.InwardJobsFreeIssueMaterialsService/Restore"
	InwardJobsFreeIssueMaterialsService_Complete_FullMethodName                                               = "/Scailo.InwardJobsFreeIssueMaterialsService/Complete"
	InwardJobsFreeIssueMaterialsService_Repeat_FullMethodName                                                 = "/Scailo.InwardJobsFreeIssueMaterialsService/Repeat"
	InwardJobsFreeIssueMaterialsService_Reopen_FullMethodName                                                 = "/Scailo.InwardJobsFreeIssueMaterialsService/Reopen"
	InwardJobsFreeIssueMaterialsService_CommentAdd_FullMethodName                                             = "/Scailo.InwardJobsFreeIssueMaterialsService/CommentAdd"
	InwardJobsFreeIssueMaterialsService_SendEmail_FullMethodName                                              = "/Scailo.InwardJobsFreeIssueMaterialsService/SendEmail"
	InwardJobsFreeIssueMaterialsService_CreateMagicLink_FullMethodName                                        = "/Scailo.InwardJobsFreeIssueMaterialsService/CreateMagicLink"
	InwardJobsFreeIssueMaterialsService_Autofill_FullMethodName                                               = "/Scailo.InwardJobsFreeIssueMaterialsService/Autofill"
	InwardJobsFreeIssueMaterialsService_IsCompletable_FullMethodName                                          = "/Scailo.InwardJobsFreeIssueMaterialsService/IsCompletable"
	InwardJobsFreeIssueMaterialsService_AddInwardJobFreeIssueMaterialItem_FullMethodName                      = "/Scailo.InwardJobsFreeIssueMaterialsService/AddInwardJobFreeIssueMaterialItem"
	InwardJobsFreeIssueMaterialsService_ModifyInwardJobFreeIssueMaterialItem_FullMethodName                   = "/Scailo.InwardJobsFreeIssueMaterialsService/ModifyInwardJobFreeIssueMaterialItem"
	InwardJobsFreeIssueMaterialsService_ApproveInwardJobFreeIssueMaterialItem_FullMethodName                  = "/Scailo.InwardJobsFreeIssueMaterialsService/ApproveInwardJobFreeIssueMaterialItem"
	InwardJobsFreeIssueMaterialsService_DeleteInwardJobFreeIssueMaterialItem_FullMethodName                   = "/Scailo.InwardJobsFreeIssueMaterialsService/DeleteInwardJobFreeIssueMaterialItem"
	InwardJobsFreeIssueMaterialsService_ReorderInwardJobFreeIssueMaterialItems_FullMethodName                 = "/Scailo.InwardJobsFreeIssueMaterialsService/ReorderInwardJobFreeIssueMaterialItems"
	InwardJobsFreeIssueMaterialsService_ViewInwardJobFreeIssueMaterialItemByID_FullMethodName                 = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewInwardJobFreeIssueMaterialItemByID"
	InwardJobsFreeIssueMaterialsService_ViewApprovedInwardJobFreeIssueMaterialItems_FullMethodName            = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewApprovedInwardJobFreeIssueMaterialItems"
	InwardJobsFreeIssueMaterialsService_ViewUnapprovedInwardJobFreeIssueMaterialItems_FullMethodName          = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewUnapprovedInwardJobFreeIssueMaterialItems"
	InwardJobsFreeIssueMaterialsService_ViewInwardJobFreeIssueMaterialItemHistory_FullMethodName              = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewInwardJobFreeIssueMaterialItemHistory"
	InwardJobsFreeIssueMaterialsService_ViewPaginatedApprovedInwardJobFreeIssueMaterialItems_FullMethodName   = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewPaginatedApprovedInwardJobFreeIssueMaterialItems"
	InwardJobsFreeIssueMaterialsService_ViewPaginatedUnapprovedInwardJobFreeIssueMaterialItems_FullMethodName = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewPaginatedUnapprovedInwardJobFreeIssueMaterialItems"
	InwardJobsFreeIssueMaterialsService_SearchItemsWithPagination_FullMethodName                              = "/Scailo.InwardJobsFreeIssueMaterialsService/SearchItemsWithPagination"
	InwardJobsFreeIssueMaterialsService_DownloadItemsAsCSV_FullMethodName                                     = "/Scailo.InwardJobsFreeIssueMaterialsService/DownloadItemsAsCSV"
	InwardJobsFreeIssueMaterialsService_DownloadItemsTemplateAsCSV_FullMethodName                             = "/Scailo.InwardJobsFreeIssueMaterialsService/DownloadItemsTemplateAsCSV"
	InwardJobsFreeIssueMaterialsService_ViewByID_FullMethodName                                               = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewByID"
	InwardJobsFreeIssueMaterialsService_ViewByUUID_FullMethodName                                             = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewByUUID"
	InwardJobsFreeIssueMaterialsService_ViewByReferenceID_FullMethodName                                      = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewByReferenceID"
	InwardJobsFreeIssueMaterialsService_ViewEssentialByID_FullMethodName                                      = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewEssentialByID"
	InwardJobsFreeIssueMaterialsService_ViewEssentialByUUID_FullMethodName                                    = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewEssentialByUUID"
	InwardJobsFreeIssueMaterialsService_ViewFromIDs_FullMethodName                                            = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewFromIDs"
	InwardJobsFreeIssueMaterialsService_ViewAncillaryParametersByUUID_FullMethodName                          = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewAncillaryParametersByUUID"
	InwardJobsFreeIssueMaterialsService_ViewAll_FullMethodName                                                = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewAll"
	InwardJobsFreeIssueMaterialsService_ViewAllForEntityUUID_FullMethodName                                   = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewAllForEntityUUID"
	InwardJobsFreeIssueMaterialsService_ViewWithPagination_FullMethodName                                     = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewWithPagination"
	InwardJobsFreeIssueMaterialsService_ViewProspectiveFamilies_FullMethodName                                = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewProspectiveFamilies"
	InwardJobsFreeIssueMaterialsService_FilterProspectiveFamilies_FullMethodName                              = "/Scailo.InwardJobsFreeIssueMaterialsService/FilterProspectiveFamilies"
	InwardJobsFreeIssueMaterialsService_ViewProspectiveInwardJobFreeIssueMaterialItem_FullMethodName          = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewProspectiveInwardJobFreeIssueMaterialItem"
	InwardJobsFreeIssueMaterialsService_IsDownloadable_FullMethodName                                         = "/Scailo.InwardJobsFreeIssueMaterialsService/IsDownloadable"
	InwardJobsFreeIssueMaterialsService_DownloadByUUID_FullMethodName                                         = "/Scailo.InwardJobsFreeIssueMaterialsService/DownloadByUUID"
	InwardJobsFreeIssueMaterialsService_DownloadLabelByUUID_FullMethodName                                    = "/Scailo.InwardJobsFreeIssueMaterialsService/DownloadLabelByUUID"
	InwardJobsFreeIssueMaterialsService_ViewAddedFamilyQuantityForSource_FullMethodName                       = "/Scailo.InwardJobsFreeIssueMaterialsService/ViewAddedFamilyQuantityForSource"
	InwardJobsFreeIssueMaterialsService_SearchAll_FullMethodName                                              = "/Scailo.InwardJobsFreeIssueMaterialsService/SearchAll"
	InwardJobsFreeIssueMaterialsService_Filter_FullMethodName                                                 = "/Scailo.InwardJobsFreeIssueMaterialsService/Filter"
	InwardJobsFreeIssueMaterialsService_CountInStatus_FullMethodName                                          = "/Scailo.InwardJobsFreeIssueMaterialsService/CountInStatus"
	InwardJobsFreeIssueMaterialsService_Count_FullMethodName                                                  = "/Scailo.InwardJobsFreeIssueMaterialsService/Count"
	InwardJobsFreeIssueMaterialsService_DownloadAsCSV_FullMethodName                                          = "/Scailo.InwardJobsFreeIssueMaterialsService/DownloadAsCSV"
)

// InwardJobsFreeIssueMaterialsServiceClient is the client API for InwardJobsFreeIssueMaterialsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Describes the common methods applicable on each inward job free issue material
type InwardJobsFreeIssueMaterialsServiceClient interface {
	// Create and send for verification
	Create(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Create and save as draft
	Draft(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update draft
	DraftUpdate(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send for verification
	SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Verify
	Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Approve
	Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send For Revision
	SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Update revision
	RevisionUpdate(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Halt
	Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Discard
	Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Restore
	Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Complete
	Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Repeat
	Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Reopen
	Reopen(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Add comment
	CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Send Email
	SendEmail(ctx context.Context, in *IdentifierWithEmailAttributes, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Create a magic link
	CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error)
	// Autofill the inward job free issue material
	Autofill(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceAutofillRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Checks if the Inward Job Free Issue Material can be marked as completed
	IsCompletable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// Add an item to a inward job free issue material
	AddInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceItemCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Modify an item in a inward job free issue material
	ModifyInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceItemUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Approve an item in a inward job free issue material
	ApproveInwardJobFreeIssueMaterialItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Delete an item in a inward job free issue material
	DeleteInwardJobFreeIssueMaterialItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// Reorder items in a inward job free issue material
	ReorderInwardJobFreeIssueMaterialItems(ctx context.Context, in *ReorderItemsRequest, opts ...grpc.CallOption) (*IdentifierResponse, error)
	// View Inward Job Free Issue Material Item by ID
	ViewInwardJobFreeIssueMaterialItemByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterialItem, error)
	// View approved inward job free issue material items for given inward job free issue material ID
	ViewApprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error)
	// View unapproved inward job free issue material items for given inward job free issue material ID
	ViewUnapprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error)
	// View the history of the inward job free issue material item
	ViewInwardJobFreeIssueMaterialItemHistory(ctx context.Context, in *InwardJobFreeIssueMaterialItemHistoryRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error)
	// View approved inward job free issue material items for given inward job free issue material ID with pagination
	ViewPaginatedApprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error)
	// View unapproved inward job free issue material items for given inward job free issue material ID with pagination
	ViewPaginatedUnapprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error)
	// Search through inward job free issue material items with pagination
	SearchItemsWithPagination(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error)
	// CSV operations
	// Download the CSV file with the associated line items. The same file could then be used to upload line items.
	DownloadItemsAsCSV(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error)
	// Download the CSV template that could be used to upload items
	DownloadItemsTemplateAsCSV(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StandardFile, error)
	// View by ID
	ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error)
	// View by UUID
	ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error)
	// View by Reference ID (returns the latest record in case of duplicates)
	ViewByReferenceID(ctx context.Context, in *SimpleSearchReq, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error)
	// View only essential components by ID (without logs)
	ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error)
	// View only essential components (without logs) that matches the given UUID
	ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error)
	// View all records with the given IDs
	ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error)
	// View the ancillary parameters (UUIDs of the internal references) by UUID
	ViewAncillaryParametersByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterialAncillaryParameters, error)
	// View all
	ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error)
	// View all with the given entity UUID
	ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error)
	// View with pagination
	ViewWithPagination(ctx context.Context, in *InwardJobsFreeIssueMaterialsServicePaginationReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginationResponse, error)
	// View prospective families for the given inward job free issue material
	ViewProspectiveFamilies(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*FamiliesList, error)
	// Filter prospective families for the record represented by the given UUID identifier
	FilterProspectiveFamilies(ctx context.Context, in *FilterFamiliesReqForIdentifier, opts ...grpc.CallOption) (*FamiliesList, error)
	// View prospective inward job free issue material item info for the given family ID and inward job free issue material ID
	ViewProspectiveInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobFreeIssueMaterialItemProspectiveInfoRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServiceItemCreateRequest, error)
	// Checks if the record is downloadable (checks if the custom download function has been implemented)
	IsDownloadable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error)
	// Download inward job free issue material with the given IdentifierUUID (can be used to allow public downloads)
	DownloadByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error)
	// Download the label for the inward job free issue material with the given IdentifierUUID
	DownloadLabelByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error)
	// View already added quantities
	ViewAddedFamilyQuantityForSource(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceAlreadyAddedQuantityForSourceRequest, opts ...grpc.CallOption) (*DualQuantitiesResponse, error)
	// View all that match the given search key
	SearchAll(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceSearchAllReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error)
	// View all that match the given filter criteria
	Filter(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceFilterReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error)
	// Count in status
	CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error)
	// Count all that match the given criteria
	Count(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error)
	// CSV operations
	// Download the CSV file that consists of the list of records according to the given filter request. The same file could also be used as a template for uploading records
	DownloadAsCSV(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error)
}

type inwardJobsFreeIssueMaterialsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewInwardJobsFreeIssueMaterialsServiceClient(cc grpc.ClientConnInterface) InwardJobsFreeIssueMaterialsServiceClient {
	return &inwardJobsFreeIssueMaterialsServiceClient{cc}
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Create(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Create_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Draft(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Draft_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DraftUpdate(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DraftUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) SendForVerification(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_SendForVerification_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Verify(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Verify_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Approve(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Approve_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) SendForRevision(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_SendForRevision_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) RevisionUpdate(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_RevisionUpdate_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Halt(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Halt_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Discard(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Discard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Restore(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Restore_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Complete(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Complete_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Repeat(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Repeat_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Reopen(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Reopen_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) CommentAdd(ctx context.Context, in *IdentifierUUIDWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_CommentAdd_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) SendEmail(ctx context.Context, in *IdentifierWithEmailAttributes, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_SendEmail_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) CreateMagicLink(ctx context.Context, in *MagicLinksServiceCreateRequestForSpecificResource, opts ...grpc.CallOption) (*MagicLink, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(MagicLink)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_CreateMagicLink_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Autofill(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceAutofillRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Autofill_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) IsCompletable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_IsCompletable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) AddInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceItemCreateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_AddInwardJobFreeIssueMaterialItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ModifyInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceItemUpdateRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ModifyInwardJobFreeIssueMaterialItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ApproveInwardJobFreeIssueMaterialItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ApproveInwardJobFreeIssueMaterialItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DeleteInwardJobFreeIssueMaterialItem(ctx context.Context, in *IdentifierWithUserComment, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DeleteInwardJobFreeIssueMaterialItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ReorderInwardJobFreeIssueMaterialItems(ctx context.Context, in *ReorderItemsRequest, opts ...grpc.CallOption) (*IdentifierResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(IdentifierResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ReorderInwardJobFreeIssueMaterialItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewInwardJobFreeIssueMaterialItemByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterialItem, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterialItem)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewInwardJobFreeIssueMaterialItemByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewApprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsItemsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewApprovedInwardJobFreeIssueMaterialItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewUnapprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsItemsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewUnapprovedInwardJobFreeIssueMaterialItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewInwardJobFreeIssueMaterialItemHistory(ctx context.Context, in *InwardJobFreeIssueMaterialItemHistoryRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsItemsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsItemsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewInwardJobFreeIssueMaterialItemHistory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewPaginatedApprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewPaginatedApprovedInwardJobFreeIssueMaterialItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewPaginatedUnapprovedInwardJobFreeIssueMaterialItems(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewPaginatedUnapprovedInwardJobFreeIssueMaterialItems_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) SearchItemsWithPagination(ctx context.Context, in *InwardJobFreeIssueMaterialItemsSearchRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsServicePaginatedItemsResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_SearchItemsWithPagination_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DownloadItemsAsCSV(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DownloadItemsAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DownloadItemsTemplateAsCSV(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DownloadItemsTemplateAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterial)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterial)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewByReferenceID(ctx context.Context, in *SimpleSearchReq, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterial)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewByReferenceID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewEssentialByID(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterial)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewEssentialByID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewEssentialByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterial, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterial)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewEssentialByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewFromIDs(ctx context.Context, in *IdentifiersList, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewFromIDs_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewAncillaryParametersByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobFreeIssueMaterialAncillaryParameters, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobFreeIssueMaterialAncillaryParameters)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewAncillaryParametersByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewAll(ctx context.Context, in *ActiveStatus, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewAllForEntityUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewAllForEntityUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewWithPagination(ctx context.Context, in *InwardJobsFreeIssueMaterialsServicePaginationReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServicePaginationResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsServicePaginationResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewWithPagination_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewProspectiveFamilies(ctx context.Context, in *IdentifierWithSearchKey, opts ...grpc.CallOption) (*FamiliesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FamiliesList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewProspectiveFamilies_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) FilterProspectiveFamilies(ctx context.Context, in *FilterFamiliesReqForIdentifier, opts ...grpc.CallOption) (*FamiliesList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FamiliesList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_FilterProspectiveFamilies_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewProspectiveInwardJobFreeIssueMaterialItem(ctx context.Context, in *InwardJobFreeIssueMaterialItemProspectiveInfoRequest, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsServiceItemCreateRequest, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsServiceItemCreateRequest)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewProspectiveInwardJobFreeIssueMaterialItem_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) IsDownloadable(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*BooleanResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BooleanResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_IsDownloadable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DownloadByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DownloadByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DownloadLabelByUUID(ctx context.Context, in *IdentifierUUID, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DownloadLabelByUUID_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) ViewAddedFamilyQuantityForSource(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceAlreadyAddedQuantityForSourceRequest, opts ...grpc.CallOption) (*DualQuantitiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DualQuantitiesResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_ViewAddedFamilyQuantityForSource_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) SearchAll(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceSearchAllReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_SearchAll_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Filter(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceFilterReq, opts ...grpc.CallOption) (*InwardJobsFreeIssueMaterialsList, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(InwardJobsFreeIssueMaterialsList)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Filter_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) CountInStatus(ctx context.Context, in *CountInSLCStatusRequest, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_CountInStatus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) Count(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceCountReq, opts ...grpc.CallOption) (*CountResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CountResponse)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_Count_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inwardJobsFreeIssueMaterialsServiceClient) DownloadAsCSV(ctx context.Context, in *InwardJobsFreeIssueMaterialsServiceFilterReq, opts ...grpc.CallOption) (*StandardFile, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(StandardFile)
	err := c.cc.Invoke(ctx, InwardJobsFreeIssueMaterialsService_DownloadAsCSV_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InwardJobsFreeIssueMaterialsService
