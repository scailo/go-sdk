// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: stock_issuances.scailo.proto

package sdk

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores all the possible references from which a stock issuance can be added
type STOCK_ISSUANCE_REF_FROM int32

const (
	// Used only in filters
	STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED STOCK_ISSUANCE_REF_FROM = 0
	// Denotes that the stock issuance originated from a production indent
	STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT STOCK_ISSUANCE_REF_FROM = 1
	// Denotes that the stock issuance originated from an asset indent
	STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ASSET_INDENT STOCK_ISSUANCE_REF_FROM = 2
	// Denotes that the stock issuance originated from a replaceable indent
	STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT STOCK_ISSUANCE_REF_FROM = 3
)

// Enum value maps for STOCK_ISSUANCE_REF_FROM.
var (
	STOCK_ISSUANCE_REF_FROM_name = map[int32]string{
		0: "STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED",
		1: "STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT",
		2: "STOCK_ISSUANCE_REF_FROM_ASSET_INDENT",
		3: "STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT",
	}
	STOCK_ISSUANCE_REF_FROM_value = map[string]int32{
		"STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED":    0,
		"STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT":  1,
		"STOCK_ISSUANCE_REF_FROM_ASSET_INDENT":       2,
		"STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT": 3,
	}
)

func (x STOCK_ISSUANCE_REF_FROM) Enum() *STOCK_ISSUANCE_REF_FROM {
	p := new(STOCK_ISSUANCE_REF_FROM)
	*p = x
	return p
}

func (x STOCK_ISSUANCE_REF_FROM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_ISSUANCE_REF_FROM) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_issuances_scailo_proto_enumTypes[0].Descriptor()
}

func (STOCK_ISSUANCE_REF_FROM) Type() protoreflect.EnumType {
	return &file_stock_issuances_scailo_proto_enumTypes[0]
}

func (x STOCK_ISSUANCE_REF_FROM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_ISSUANCE_REF_FROM.Descriptor instead.
func (STOCK_ISSUANCE_REF_FROM) EnumDescriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{0}
}

// Describes the available sort keys
type STOCK_ISSUANCE_SORT_KEY int32

const (
	// Fetch ordered results by id
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED STOCK_ISSUANCE_SORT_KEY = 0
	// Fetch ordered results by the creation timestamp
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_CREATED_AT STOCK_ISSUANCE_SORT_KEY = 1
	// Fetch ordered results by the modified timestamp
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT STOCK_ISSUANCE_SORT_KEY = 2
	// Fetch ordered results by the approved on timestamp
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_APPROVED_ON STOCK_ISSUANCE_SORT_KEY = 3
	// Fetch ordered results by the approved by field
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_APPROVED_BY STOCK_ISSUANCE_SORT_KEY = 4
	// Fetch ordered results by the approver's role ID
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID STOCK_ISSUANCE_SORT_KEY = 5
	// Fetch ordered results by the approver's completed on timestamp
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON STOCK_ISSUANCE_SORT_KEY = 6
	// Fetch ordered results by the reference ID
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID STOCK_ISSUANCE_SORT_KEY = 10
	// Fetch ordered results by the final ref number
	STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER STOCK_ISSUANCE_SORT_KEY = 11
)

// Enum value maps for STOCK_ISSUANCE_SORT_KEY.
var (
	STOCK_ISSUANCE_SORT_KEY_name = map[int32]string{
		0:  "STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED",
		1:  "STOCK_ISSUANCE_SORT_KEY_CREATED_AT",
		2:  "STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT",
		3:  "STOCK_ISSUANCE_SORT_KEY_APPROVED_ON",
		4:  "STOCK_ISSUANCE_SORT_KEY_APPROVED_BY",
		5:  "STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID",
		6:  "STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON",
		10: "STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID",
		11: "STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER",
	}
	STOCK_ISSUANCE_SORT_KEY_value = map[string]int32{
		"STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED":   0,
		"STOCK_ISSUANCE_SORT_KEY_CREATED_AT":       1,
		"STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT":      2,
		"STOCK_ISSUANCE_SORT_KEY_APPROVED_ON":      3,
		"STOCK_ISSUANCE_SORT_KEY_APPROVED_BY":      4,
		"STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID": 5,
		"STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON":     6,
		"STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID":     10,
		"STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER": 11,
	}
)

func (x STOCK_ISSUANCE_SORT_KEY) Enum() *STOCK_ISSUANCE_SORT_KEY {
	p := new(STOCK_ISSUANCE_SORT_KEY)
	*p = x
	return p
}

func (x STOCK_ISSUANCE_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_ISSUANCE_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_issuances_scailo_proto_enumTypes[1].Descriptor()
}

func (STOCK_ISSUANCE_SORT_KEY) Type() protoreflect.EnumType {
	return &file_stock_issuances_scailo_proto_enumTypes[1]
}

func (x STOCK_ISSUANCE_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_ISSUANCE_SORT_KEY.Descriptor instead.
func (STOCK_ISSUANCE_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{1}
}

// Describes the available sort keys
type STOCK_ISSUANCE_ITEM_SORT_KEY int32

const (
	// Fetch results by id
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED STOCK_ISSUANCE_ITEM_SORT_KEY = 0
	// Fetch results by the creation timestamp
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT STOCK_ISSUANCE_ITEM_SORT_KEY = 1
	// Fetch results by the modified timestamp
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT STOCK_ISSUANCE_ITEM_SORT_KEY = 2
	// Fetch results by the approved on timestamp
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON STOCK_ISSUANCE_ITEM_SORT_KEY = 3
	// Fetch results by the approved by field
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY STOCK_ISSUANCE_ITEM_SORT_KEY = 4
	// Fetch results by the approver's role ID
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID STOCK_ISSUANCE_ITEM_SORT_KEY = 5
	// Fetch results by the family ID
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID STOCK_ISSUANCE_ITEM_SORT_KEY = 10
	// Fetch results by the quantity
	STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY STOCK_ISSUANCE_ITEM_SORT_KEY = 11
)

// Enum value maps for STOCK_ISSUANCE_ITEM_SORT_KEY.
var (
	STOCK_ISSUANCE_ITEM_SORT_KEY_name = map[int32]string{
		0:  "STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED",
		1:  "STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT",
		2:  "STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT",
		3:  "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON",
		4:  "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY",
		5:  "STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID",
		10: "STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID",
		11: "STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY",
	}
	STOCK_ISSUANCE_ITEM_SORT_KEY_value = map[string]int32{
		"STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED":    0,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT":        1,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT":       2,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON":       3,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY":       4,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID":  5,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID":         10,
		"STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY": 11,
	}
)

func (x STOCK_ISSUANCE_ITEM_SORT_KEY) Enum() *STOCK_ISSUANCE_ITEM_SORT_KEY {
	p := new(STOCK_ISSUANCE_ITEM_SORT_KEY)
	*p = x
	return p
}

func (x STOCK_ISSUANCE_ITEM_SORT_KEY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_ISSUANCE_ITEM_SORT_KEY) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_issuances_scailo_proto_enumTypes[2].Descriptor()
}

func (STOCK_ISSUANCE_ITEM_SORT_KEY) Type() protoreflect.EnumType {
	return &file_stock_issuances_scailo_proto_enumTypes[2]
}

func (x STOCK_ISSUANCE_ITEM_SORT_KEY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_ISSUANCE_ITEM_SORT_KEY.Descriptor instead.
func (STOCK_ISSUANCE_ITEM_SORT_KEY) EnumDescriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{2}
}

// Describes the applicable statuses of stock issuance items
type STOCK_ISSUANCE_ITEM_STATUS int32

const (
	// Denotes that status be disregarded. This is used only within search APIs
	STOCK_ISSUANCE_ITEM_STATUS_STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED STOCK_ISSUANCE_ITEM_STATUS = 0
	// Denotes that the stock issuance items must have been approved
	STOCK_ISSUANCE_ITEM_STATUS_STOCK_ISSUANCE_ITEM_STATUS_APPROVED STOCK_ISSUANCE_ITEM_STATUS = 1
	// Denotes that the stock issuance items must be waiting for approval
	STOCK_ISSUANCE_ITEM_STATUS_STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED STOCK_ISSUANCE_ITEM_STATUS = 2
)

// Enum value maps for STOCK_ISSUANCE_ITEM_STATUS.
var (
	STOCK_ISSUANCE_ITEM_STATUS_name = map[int32]string{
		0: "STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED",
		1: "STOCK_ISSUANCE_ITEM_STATUS_APPROVED",
		2: "STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED",
	}
	STOCK_ISSUANCE_ITEM_STATUS_value = map[string]int32{
		"STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED": 0,
		"STOCK_ISSUANCE_ITEM_STATUS_APPROVED":        1,
		"STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED":      2,
	}
)

func (x STOCK_ISSUANCE_ITEM_STATUS) Enum() *STOCK_ISSUANCE_ITEM_STATUS {
	p := new(STOCK_ISSUANCE_ITEM_STATUS)
	*p = x
	return p
}

func (x STOCK_ISSUANCE_ITEM_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STOCK_ISSUANCE_ITEM_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_issuances_scailo_proto_enumTypes[3].Descriptor()
}

func (STOCK_ISSUANCE_ITEM_STATUS) Type() protoreflect.EnumType {
	return &file_stock_issuances_scailo_proto_enumTypes[3]
}

func (x STOCK_ISSUANCE_ITEM_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STOCK_ISSUANCE_ITEM_STATUS.Descriptor instead.
func (STOCK_ISSUANCE_ITEM_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{3}
}

// Describes the parameters necessary to create a record
type StockIssuancesServiceCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,2,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock issuance
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceCreateRequest) Reset() {
	*x = StockIssuancesServiceCreateRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceCreateRequest) ProtoMessage() {}

func (x *StockIssuancesServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{0}
}

func (x *StockIssuancesServiceCreateRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuancesServiceCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuancesServiceCreateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockIssuancesServiceCreateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockIssuancesServiceCreateRequest) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceCreateRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *StockIssuancesServiceCreateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to update a record
type StockIssuancesServiceUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record that needs to be updated
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Optional boolean value that stores if a notification needs to be sent to users about the update to the record. This is useful when a subsequent operation needs to be performed immediately (such as send to verification after updating the revision)
	NotifyUsers bool `protobuf:"varint,3,opt,name=notify_users,json=notifyUsers,proto3" json:"notify_users,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock issuance
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatumCreateRequest `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceUpdateRequest) Reset() {
	*x = StockIssuancesServiceUpdateRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceUpdateRequest) ProtoMessage() {}

func (x *StockIssuancesServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{1}
}

func (x *StockIssuancesServiceUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuancesServiceUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockIssuancesServiceUpdateRequest) GetNotifyUsers() bool {
	if x != nil {
		return x.NotifyUsers
	}
	return false
}

func (x *StockIssuancesServiceUpdateRequest) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockIssuancesServiceUpdateRequest) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockIssuancesServiceUpdateRequest) GetFormData() []*FormFieldDatumCreateRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters necessary to perform an autofill request
type StockIssuancesServiceAutofillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The UUID of the record that needs to be updated
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Stores if the inventory needs to be split into unit quantities
	SplitIntoUnitQuantity bool `protobuf:"varint,10,opt,name=split_into_unit_quantity,json=splitIntoUnitQuantity,proto3" json:"split_into_unit_quantity,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StockIssuancesServiceAutofillRequest) Reset() {
	*x = StockIssuancesServiceAutofillRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceAutofillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceAutofillRequest) ProtoMessage() {}

func (x *StockIssuancesServiceAutofillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceAutofillRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceAutofillRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{2}
}

func (x *StockIssuancesServiceAutofillRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuancesServiceAutofillRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StockIssuancesServiceAutofillRequest) GetSplitIntoUnitQuantity() bool {
	if x != nil {
		return x.SplitIntoUnitQuantity
	}
	return false
}

// Describes the parameters that are part of a standard response
type StockIssuance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this stock issuance
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// The status of this stock issuance
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,4,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Stores the logs of every operation performed on this stock issuance
	Logs []*LogbookLogConciseSLC `protobuf:"bytes,5,rep,name=logs,proto3" json:"logs,omitempty"`
	// The timestamp of when this stock issuance was marked as completed
	CompletedOn uint64 `protobuf:"varint,6,opt,name=completed_on,json=completedOn,proto3" json:"completed_on,omitempty"`
	// The associated vault folder ID
	VaultFolderId uint64 `protobuf:"varint,9,opt,name=vault_folder_id,json=vaultFolderId,proto3" json:"vault_folder_id,omitempty"`
	// The reference ID of the stock issuance
	ReferenceId string `protobuf:"bytes,10,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,11,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,12,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,13,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,15,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The list of associated stock issuance items
	List []*StockIssuanceItem `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	// The list of dynamic forms
	FormData      []*FormFieldDatum `protobuf:"bytes,30,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuance) Reset() {
	*x = StockIssuance{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuance) ProtoMessage() {}

func (x *StockIssuance) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuance.ProtoReflect.Descriptor instead.
func (*StockIssuance) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{3}
}

func (x *StockIssuance) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuance) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StockIssuance) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *StockIssuance) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockIssuance) GetLogs() []*LogbookLogConciseSLC {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *StockIssuance) GetCompletedOn() uint64 {
	if x != nil {
		return x.CompletedOn
	}
	return 0
}

func (x *StockIssuance) GetVaultFolderId() uint64 {
	if x != nil {
		return x.VaultFolderId
	}
	return 0
}

func (x *StockIssuance) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockIssuance) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockIssuance) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuance) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *StockIssuance) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockIssuance) GetList() []*StockIssuanceItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *StockIssuance) GetFormData() []*FormFieldDatum {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the parameters required to add an item to a stock issuance
type StockIssuancesServiceItemCreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the stock issuance ID
	StockIssuanceId uint64 `protobuf:"varint,10,opt,name=stock_issuance_id,json=stockIssuanceId,proto3" json:"stock_issuance_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// The hash of the inventory item
	ItemHash      string `protobuf:"bytes,13,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceItemCreateRequest) Reset() {
	*x = StockIssuancesServiceItemCreateRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceItemCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceItemCreateRequest) ProtoMessage() {}

func (x *StockIssuancesServiceItemCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceItemCreateRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceItemCreateRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{4}
}

func (x *StockIssuancesServiceItemCreateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuancesServiceItemCreateRequest) GetStockIssuanceId() uint64 {
	if x != nil {
		return x.StockIssuanceId
	}
	return 0
}

func (x *StockIssuancesServiceItemCreateRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockIssuancesServiceItemCreateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *StockIssuancesServiceItemCreateRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

// Describes the parameters required to update an item in a stock issuance
type StockIssuancesServiceItemUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores any comment that the user might add during this operation
	UserComment string `protobuf:"bytes,1,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// The ID of the record
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// The hash of the inventory item
	ItemHash      string `protobuf:"bytes,13,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceItemUpdateRequest) Reset() {
	*x = StockIssuancesServiceItemUpdateRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceItemUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceItemUpdateRequest) ProtoMessage() {}

func (x *StockIssuancesServiceItemUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceItemUpdateRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceItemUpdateRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{5}
}

func (x *StockIssuancesServiceItemUpdateRequest) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuancesServiceItemUpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockIssuancesServiceItemUpdateRequest) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *StockIssuancesServiceItemUpdateRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

// Describes the parameters that constitute an item associated to a stock issuance
type StockIssuanceItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores a globally unique entity UUID. This will be set at the organization level
	EntityUuid string `protobuf:"bytes,1,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Stores the metadata of this stock issuance
	Metadata *EmployeeMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Stores the approval metadata
	ApprovalMetadata *ApprovalMetadata `protobuf:"bytes,3,opt,name=approval_metadata,json=approvalMetadata,proto3" json:"approval_metadata,omitempty"`
	// Denotes if this record requires approval (or has been approved)
	NeedApproval bool `protobuf:"varint,4,opt,name=need_approval,json=needApproval,proto3" json:"need_approval,omitempty"`
	// Stores any comment that the user might have added during an operation
	UserComment string `protobuf:"bytes,5,opt,name=user_comment,json=userComment,proto3" json:"user_comment,omitempty"`
	// Stores the stock issuance ID
	StockIssuanceId uint64 `protobuf:"varint,10,opt,name=stock_issuance_id,json=stockIssuanceId,proto3" json:"stock_issuance_id,omitempty"`
	// Stores the family ID
	FamilyId uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The quantity (in cents) being admitted in internal unit of material
	InternalQuantity uint64 `protobuf:"varint,12,opt,name=internal_quantity,json=internalQuantity,proto3" json:"internal_quantity,omitempty"`
	// The hash of the inventory item
	ItemHash      string `protobuf:"bytes,13,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuanceItem) Reset() {
	*x = StockIssuanceItem{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuanceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuanceItem) ProtoMessage() {}

func (x *StockIssuanceItem) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuanceItem.ProtoReflect.Descriptor instead.
func (*StockIssuanceItem) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{6}
}

func (x *StockIssuanceItem) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuanceItem) GetMetadata() *EmployeeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StockIssuanceItem) GetApprovalMetadata() *ApprovalMetadata {
	if x != nil {
		return x.ApprovalMetadata
	}
	return nil
}

func (x *StockIssuanceItem) GetNeedApproval() bool {
	if x != nil {
		return x.NeedApproval
	}
	return false
}

func (x *StockIssuanceItem) GetUserComment() string {
	if x != nil {
		return x.UserComment
	}
	return ""
}

func (x *StockIssuanceItem) GetStockIssuanceId() uint64 {
	if x != nil {
		return x.StockIssuanceId
	}
	return 0
}

func (x *StockIssuanceItem) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockIssuanceItem) GetInternalQuantity() uint64 {
	if x != nil {
		return x.InternalQuantity
	}
	return 0
}

func (x *StockIssuanceItem) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

// Describes the message consisting of the list of stock issuances
type StockIssuancesList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*StockIssuance `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesList) Reset() {
	*x = StockIssuancesList{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesList) ProtoMessage() {}

func (x *StockIssuancesList) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesList.ProtoReflect.Descriptor instead.
func (*StockIssuancesList) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{7}
}

func (x *StockIssuancesList) GetList() []*StockIssuance {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the message consisting of the list of stock issuance items
type StockIssuancesItemsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of records
	List          []*StockIssuanceItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesItemsList) Reset() {
	*x = StockIssuancesItemsList{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesItemsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesItemsList) ProtoMessage() {}

func (x *StockIssuancesItemsList) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesItemsList.ProtoReflect.Descriptor instead.
func (*StockIssuancesItemsList) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{8}
}

func (x *StockIssuancesItemsList) GetList() []*StockIssuanceItem {
	if x != nil {
		return x.List
	}
	return nil
}

// Describes the parameters that are required to retrieve the history of the record
type StockIssuanceItemHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the stock issuance ID
	StockIssuanceId uint64 `protobuf:"varint,10,opt,name=stock_issuance_id,json=stockIssuanceId,proto3" json:"stock_issuance_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuanceItemHistoryRequest) Reset() {
	*x = StockIssuanceItemHistoryRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuanceItemHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuanceItemHistoryRequest) ProtoMessage() {}

func (x *StockIssuanceItemHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuanceItemHistoryRequest.ProtoReflect.Descriptor instead.
func (*StockIssuanceItemHistoryRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{9}
}

func (x *StockIssuanceItemHistoryRequest) GetStockIssuanceId() uint64 {
	if x != nil {
		return x.StockIssuanceId
	}
	return 0
}

func (x *StockIssuanceItemHistoryRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the parameters that are required to retrieve the info of a prospective stock issuance item
type StockIssuanceItemProspectiveInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stores the stock issuance ID
	StockIssuanceId uint64 `protobuf:"varint,10,opt,name=stock_issuance_id,json=stockIssuanceId,proto3" json:"stock_issuance_id,omitempty"`
	// Stores the family ID
	FamilyId      uint64 `protobuf:"varint,11,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuanceItemProspectiveInfoRequest) Reset() {
	*x = StockIssuanceItemProspectiveInfoRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuanceItemProspectiveInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuanceItemProspectiveInfoRequest) ProtoMessage() {}

func (x *StockIssuanceItemProspectiveInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuanceItemProspectiveInfoRequest.ProtoReflect.Descriptor instead.
func (*StockIssuanceItemProspectiveInfoRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{10}
}

func (x *StockIssuanceItemProspectiveInfoRequest) GetStockIssuanceId() uint64 {
	if x != nil {
		return x.StockIssuanceId
	}
	return 0
}

func (x *StockIssuanceItemProspectiveInfoRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes the request payload to retrieve the quantity that has already been added for the specific ref_from, ref_id and family_id
type StockIssuancesServiceAlreadyAddedQuantityForSourceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,1,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,2,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The associated family ID
	FamilyId      uint64 `protobuf:"varint,3,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) Reset() {
	*x = StockIssuancesServiceAlreadyAddedQuantityForSourceRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) ProtoMessage() {}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceAlreadyAddedQuantityForSourceRequest.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{11}
}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *StockIssuancesServiceAlreadyAddedQuantityForSourceRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

// Describes a pagination request to retrieve records
type StockIssuancesServicePaginationReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_ISSUANCE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_ISSUANCE_SORT_KEY" json:"sort_key,omitempty"`
	// The status of this stock issuance
	Status        STANDARD_LIFECYCLE_STATUS `protobuf:"varint,6,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServicePaginationReq) Reset() {
	*x = StockIssuancesServicePaginationReq{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServicePaginationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServicePaginationReq) ProtoMessage() {}

func (x *StockIssuancesServicePaginationReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServicePaginationReq.ProtoReflect.Descriptor instead.
func (*StockIssuancesServicePaginationReq) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{12}
}

func (x *StockIssuancesServicePaginationReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockIssuancesServicePaginationReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuancesServicePaginationReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuancesServicePaginationReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockIssuancesServicePaginationReq) GetSortKey() STOCK_ISSUANCE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockIssuancesServicePaginationReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

// Describes the response to a pagination request
type StockIssuancesServicePaginationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*StockIssuance `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServicePaginationResponse) Reset() {
	*x = StockIssuancesServicePaginationResponse{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServicePaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServicePaginationResponse) ProtoMessage() {}

func (x *StockIssuancesServicePaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServicePaginationResponse.ProtoReflect.Descriptor instead.
func (*StockIssuancesServicePaginationResponse) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{13}
}

func (x *StockIssuancesServicePaginationResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuancesServicePaginationResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuancesServicePaginationResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StockIssuancesServicePaginationResponse) GetPayload() []*StockIssuance {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Describes the base request payload of a filter search
type StockIssuancesServiceFilterReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_ISSUANCE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_ISSUANCE_SORT_KEY" json:"sort_key,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this stock issuance
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the stock issuance
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,25,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceFilterReq) Reset() {
	*x = StockIssuancesServiceFilterReq{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceFilterReq) ProtoMessage() {}

func (x *StockIssuancesServiceFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceFilterReq.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceFilterReq) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{14}
}

func (x *StockIssuancesServiceFilterReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceFilterReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockIssuancesServiceFilterReq) GetSortKey() STOCK_ISSUANCE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockIssuancesServiceFilterReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuancesServiceFilterReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceFilterReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockIssuancesServiceFilterReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockIssuancesServiceFilterReq) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceFilterReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockIssuancesServiceFilterReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the base request payload of a count search
type StockIssuancesServiceCountReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The minimum timestamp that needs to be considered to filter by creation
	CreationTimestampStart uint64 `protobuf:"varint,101,opt,name=creation_timestamp_start,json=creationTimestampStart,proto3" json:"creation_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by creation
	CreationTimestampEnd uint64 `protobuf:"varint,102,opt,name=creation_timestamp_end,json=creationTimestampEnd,proto3" json:"creation_timestamp_end,omitempty"`
	// The minimum timestamp that needs to be considered to filter by modification
	ModificationTimestampStart uint64 `protobuf:"varint,103,opt,name=modification_timestamp_start,json=modificationTimestampStart,proto3" json:"modification_timestamp_start,omitempty"`
	// The maximum timestamp that needs to be considered to filter by modification
	ModificationTimestampEnd uint64 `protobuf:"varint,104,opt,name=modification_timestamp_end,json=modificationTimestampEnd,proto3" json:"modification_timestamp_end,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,8,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of this stock issuance
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,11,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,12,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,13,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,14,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The start range of completed timestamp
	CompletedOnStart uint64 `protobuf:"varint,15,opt,name=completed_on_start,json=completedOnStart,proto3" json:"completed_on_start,omitempty"`
	// The end range of completed timestamp
	CompletedOnEnd uint64 `protobuf:"varint,16,opt,name=completed_on_end,json=completedOnEnd,proto3" json:"completed_on_end,omitempty"`
	// The reference ID of the stock issuance
	ReferenceId string `protobuf:"bytes,20,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	// The unique reference number that has been automatically generated
	FinalRefNumber string `protobuf:"bytes,21,opt,name=final_ref_number,json=finalRefNumber,proto3" json:"final_ref_number,omitempty"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	// The location ID of where the record is created
	LocationId uint64 `protobuf:"varint,25,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,30,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// The list of form data filters
	FormData      []*FormFieldDatumFilterRequest `protobuf:"bytes,500,rep,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceCountReq) Reset() {
	*x = StockIssuancesServiceCountReq{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceCountReq) ProtoMessage() {}

func (x *StockIssuancesServiceCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceCountReq.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceCountReq) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{15}
}

func (x *StockIssuancesServiceCountReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceCountReq) GetCreationTimestampStart() uint64 {
	if x != nil {
		return x.CreationTimestampStart
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetCreationTimestampEnd() uint64 {
	if x != nil {
		return x.CreationTimestampEnd
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetModificationTimestampStart() uint64 {
	if x != nil {
		return x.ModificationTimestampStart
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetModificationTimestampEnd() uint64 {
	if x != nil {
		return x.ModificationTimestampEnd
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuancesServiceCountReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceCountReq) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetCompletedOnStart() uint64 {
	if x != nil {
		return x.CompletedOnStart
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetCompletedOnEnd() uint64 {
	if x != nil {
		return x.CompletedOnEnd
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *StockIssuancesServiceCountReq) GetFinalRefNumber() string {
	if x != nil {
		return x.FinalRefNumber
	}
	return ""
}

func (x *StockIssuancesServiceCountReq) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceCountReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockIssuancesServiceCountReq) GetFormData() []*FormFieldDatumFilterRequest {
	if x != nil {
		return x.FormData
	}
	return nil
}

// Describes the request payload for performing a generic search operation on records
type StockIssuancesServiceSearchAllReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_ISSUANCE_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_ISSUANCE_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// Limit the search space to the given status
	Status STANDARD_LIFECYCLE_STATUS `protobuf:"varint,10,opt,name=status,proto3,enum=Scailo.STANDARD_LIFECYCLE_STATUS" json:"status,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey string `protobuf:"bytes,11,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	// The associated reference
	RefFrom STOCK_ISSUANCE_REF_FROM `protobuf:"varint,22,opt,name=ref_from,json=refFrom,proto3,enum=Scailo.STOCK_ISSUANCE_REF_FROM" json:"ref_from,omitempty"`
	// The associated ID of the reference
	RefId         uint64 `protobuf:"varint,23,opt,name=ref_id,json=refId,proto3" json:"ref_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServiceSearchAllReq) Reset() {
	*x = StockIssuancesServiceSearchAllReq{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServiceSearchAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServiceSearchAllReq) ProtoMessage() {}

func (x *StockIssuancesServiceSearchAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServiceSearchAllReq.ProtoReflect.Descriptor instead.
func (*StockIssuancesServiceSearchAllReq) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{16}
}

func (x *StockIssuancesServiceSearchAllReq) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceSearchAllReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuancesServiceSearchAllReq) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuancesServiceSearchAllReq) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockIssuancesServiceSearchAllReq) GetSortKey() STOCK_ISSUANCE_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_ISSUANCE_SORT_KEY_STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockIssuancesServiceSearchAllReq) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuancesServiceSearchAllReq) GetStatus() STANDARD_LIFECYCLE_STATUS {
	if x != nil {
		return x.Status
	}
	return STANDARD_LIFECYCLE_STATUS_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceSearchAllReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *StockIssuancesServiceSearchAllReq) GetRefFrom() STOCK_ISSUANCE_REF_FROM {
	if x != nil {
		return x.RefFrom
	}
	return STOCK_ISSUANCE_REF_FROM_STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED
}

func (x *StockIssuancesServiceSearchAllReq) GetRefId() uint64 {
	if x != nil {
		return x.RefId
	}
	return 0
}

// Describes the request payload to retrieve approved or unapproved items.
type StockIssuanceItemsSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If true, then returns only active records. If false, then returns only inactive records
	IsActive BOOL_FILTER `protobuf:"varint,1,opt,name=is_active,json=isActive,proto3,enum=Scailo.BOOL_FILTER" json:"is_active,omitempty"`
	// The number of records that need to be sent in the response. Returns all records if it is set to -1
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// The number that need to be offset by before fetching the records
	Offset uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The sort order that is to be used to fetch the pagination response
	SortOrder SORT_ORDER `protobuf:"varint,4,opt,name=sort_order,json=sortOrder,proto3,enum=Scailo.SORT_ORDER" json:"sort_order,omitempty"`
	// The sort key that is to be used to fetch the pagination response
	SortKey STOCK_ISSUANCE_ITEM_SORT_KEY `protobuf:"varint,5,opt,name=sort_key,json=sortKey,proto3,enum=Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY" json:"sort_key,omitempty"`
	// The entity UUID that is to be used to filter records
	EntityUuid string `protobuf:"bytes,6,opt,name=entity_uuid,json=entityUuid,proto3" json:"entity_uuid,omitempty"`
	// The status of the items
	Status STOCK_ISSUANCE_ITEM_STATUS `protobuf:"varint,7,opt,name=status,proto3,enum=Scailo.STOCK_ISSUANCE_ITEM_STATUS" json:"status,omitempty"`
	// The start range of approved timestamp
	ApprovedOnStart uint64 `protobuf:"varint,10,opt,name=approved_on_start,json=approvedOnStart,proto3" json:"approved_on_start,omitempty"`
	// The end range of approved timestamp
	ApprovedOnEnd uint64 `protobuf:"varint,11,opt,name=approved_on_end,json=approvedOnEnd,proto3" json:"approved_on_end,omitempty"`
	// The ID of the approver
	ApprovedByUserId uint64 `protobuf:"varint,12,opt,name=approved_by_user_id,json=approvedByUserId,proto3" json:"approved_by_user_id,omitempty"`
	// The role ID of the approver
	ApproverRoleId uint64 `protobuf:"varint,13,opt,name=approver_role_id,json=approverRoleId,proto3" json:"approver_role_id,omitempty"`
	// The ID of the stock issuance
	StockIssuanceId uint64 `protobuf:"varint,20,opt,name=stock_issuance_id,json=stockIssuanceId,proto3" json:"stock_issuance_id,omitempty"`
	// The ID of the family
	FamilyId uint64 `protobuf:"varint,21,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	// Stores the item hash
	ItemHash string `protobuf:"bytes,22,opt,name=item_hash,json=itemHash,proto3" json:"item_hash,omitempty"`
	// Describes the key with which the search operation needs to be performed
	SearchKey     string `protobuf:"bytes,40,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuanceItemsSearchRequest) Reset() {
	*x = StockIssuanceItemsSearchRequest{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuanceItemsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuanceItemsSearchRequest) ProtoMessage() {}

func (x *StockIssuanceItemsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuanceItemsSearchRequest.ProtoReflect.Descriptor instead.
func (*StockIssuanceItemsSearchRequest) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{17}
}

func (x *StockIssuanceItemsSearchRequest) GetIsActive() BOOL_FILTER {
	if x != nil {
		return x.IsActive
	}
	return BOOL_FILTER_BOOL_FILTER_ANY_UNSPECIFIED
}

func (x *StockIssuanceItemsSearchRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetSortOrder() SORT_ORDER {
	if x != nil {
		return x.SortOrder
	}
	return SORT_ORDER_ASCENDING_UNSPECIFIED
}

func (x *StockIssuanceItemsSearchRequest) GetSortKey() STOCK_ISSUANCE_ITEM_SORT_KEY {
	if x != nil {
		return x.SortKey
	}
	return STOCK_ISSUANCE_ITEM_SORT_KEY_STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED
}

func (x *StockIssuanceItemsSearchRequest) GetEntityUuid() string {
	if x != nil {
		return x.EntityUuid
	}
	return ""
}

func (x *StockIssuanceItemsSearchRequest) GetStatus() STOCK_ISSUANCE_ITEM_STATUS {
	if x != nil {
		return x.Status
	}
	return STOCK_ISSUANCE_ITEM_STATUS_STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED
}

func (x *StockIssuanceItemsSearchRequest) GetApprovedOnStart() uint64 {
	if x != nil {
		return x.ApprovedOnStart
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetApprovedOnEnd() uint64 {
	if x != nil {
		return x.ApprovedOnEnd
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetApprovedByUserId() uint64 {
	if x != nil {
		return x.ApprovedByUserId
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetApproverRoleId() uint64 {
	if x != nil {
		return x.ApproverRoleId
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetStockIssuanceId() uint64 {
	if x != nil {
		return x.StockIssuanceId
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetFamilyId() uint64 {
	if x != nil {
		return x.FamilyId
	}
	return 0
}

func (x *StockIssuanceItemsSearchRequest) GetItemHash() string {
	if x != nil {
		return x.ItemHash
	}
	return ""
}

func (x *StockIssuanceItemsSearchRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

// Describes the response to a pagination items request
type StockIssuancesServicePaginatedItemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of records in this payload
	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// The number that has been offset before fetching the records. This is the same value that has been sent as part of the pagination request
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// The total number of records that are available
	Total uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// The list of records
	Payload       []*StockIssuanceItem `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StockIssuancesServicePaginatedItemsResponse) Reset() {
	*x = StockIssuancesServicePaginatedItemsResponse{}
	mi := &file_stock_issuances_scailo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockIssuancesServicePaginatedItemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockIssuancesServicePaginatedItemsResponse) ProtoMessage() {}

func (x *StockIssuancesServicePaginatedItemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stock_issuances_scailo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockIssuancesServicePaginatedItemsResponse.ProtoReflect.Descriptor instead.
func (*StockIssuancesServicePaginatedItemsResponse) Descriptor() ([]byte, []int) {
	return file_stock_issuances_scailo_proto_rawDescGZIP(), []int{18}
}

func (x *StockIssuancesServicePaginatedItemsResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StockIssuancesServicePaginatedItemsResponse) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *StockIssuancesServicePaginatedItemsResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StockIssuancesServicePaginatedItemsResponse) GetPayload() []*StockIssuanceItem {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_stock_issuances_scailo_proto protoreflect.FileDescriptor

const file_stock_issuances_scailo_proto_rawDesc = "" +
	"\n" +
	"\x1cstock_issuances.scailo.proto\x12\x06Scailo\x1a\x11base.scailo.proto\x1a\x1bbuf/validate/validate.proto\x1a\x15families.scailo.proto\x1a\x1eforms_fields_data.scailo.proto\x1a\x18magic_links.scailo.proto\"\xf1\x02\n" +
	"\"StockIssuancesServiceCreateRequest\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x12!\n" +
	"\fuser_comment\x18\x02 \x01(\tR\vuserComment\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12:\n" +
	"\bref_from\x18\f \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\r \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xb0\x02\n" +
	"\"StockIssuancesServiceUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x12!\n" +
	"\fnotify_users\x18\x03 \x01(\bR\vnotifyUsers\x12/\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04B\a\xbaH\x042\x02(\x00R\rvaultFolderId\x128\n" +
	"\freference_id\x18\n" +
	" \x01(\tB\x15\xbaH\x12r\x102\x0e[0-9A-Za-z ]+$R\vreferenceId\x12@\n" +
	"\tform_data\x18\x1e \x03(\v2#.Scailo.FormFieldDatumCreateRequestR\bformData\"\xa0\x01\n" +
	"$StockIssuancesServiceAutofillRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x1c\n" +
	"\x04uuid\x18\x02 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\x04uuid\x127\n" +
	"\x18split_into_unit_quantity\x18\n" +
	" \x01(\bR\x15splitIntoUnitQuantity\"\x8a\x05\n" +
	"\rStockIssuance\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x129\n" +
	"\x06status\x18\x04 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x120\n" +
	"\x04logs\x18\x05 \x03(\v2\x1c.Scailo.LogbookLogConciseSLCR\x04logs\x12!\n" +
	"\fcompleted_on\x18\x06 \x01(\x04R\vcompletedOn\x12&\n" +
	"\x0fvault_folder_id\x18\t \x01(\x04R\rvaultFolderId\x12!\n" +
	"\freference_id\x18\n" +
	" \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\v \x01(\tR\x0efinalRefNumber\x12:\n" +
	"\bref_from\x18\f \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\r \x01(\x04R\x05refId\x12\x1f\n" +
	"\vlocation_id\x18\x0f \x01(\x04R\n" +
	"locationId\x12-\n" +
	"\x04list\x18\x14 \x03(\v2\x19.Scailo.StockIssuanceItemR\x04list\x123\n" +
	"\tform_data\x18\x1e \x03(\v2\x16.Scailo.FormFieldDatumR\bformData\"\x86\x02\n" +
	"&StockIssuancesServiceItemCreateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x123\n" +
	"\x11stock_issuance_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0fstockIssuanceId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12(\n" +
	"\titem_hash\x18\r \x01(\tB\v\xbaH\br\x06\x10\x80\x01\x18\x80\x01R\bitemHash\"\xc4\x01\n" +
	"&StockIssuancesServiceItemUpdateRequest\x12!\n" +
	"\fuser_comment\x18\x01 \x01(\tR\vuserComment\x12\x17\n" +
	"\x02id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x02id\x124\n" +
	"\x11internal_quantity\x18\f \x01(\x04B\a\xbaH\x042\x02 \x00R\x10internalQuantity\x12(\n" +
	"\titem_hash\x18\r \x01(\tB\v\xbaH\br\x06\x10\x80\x01\x18\x80\x01R\bitemHash\"\x8c\x03\n" +
	"\x11StockIssuanceItem\x12\x1f\n" +
	"\ventity_uuid\x18\x01 \x01(\tR\n" +
	"entityUuid\x124\n" +
	"\bmetadata\x18\x02 \x01(\v2\x18.Scailo.EmployeeMetadataR\bmetadata\x12E\n" +
	"\x11approval_metadata\x18\x03 \x01(\v2\x18.Scailo.ApprovalMetadataR\x10approvalMetadata\x12#\n" +
	"\rneed_approval\x18\x04 \x01(\bR\fneedApproval\x12!\n" +
	"\fuser_comment\x18\x05 \x01(\tR\vuserComment\x12*\n" +
	"\x11stock_issuance_id\x18\n" +
	" \x01(\x04R\x0fstockIssuanceId\x12\x1b\n" +
	"\tfamily_id\x18\v \x01(\x04R\bfamilyId\x12+\n" +
	"\x11internal_quantity\x18\f \x01(\x04R\x10internalQuantity\x12\x1b\n" +
	"\titem_hash\x18\r \x01(\tR\bitemHash\"?\n" +
	"\x12StockIssuancesList\x12)\n" +
	"\x04list\x18\x01 \x03(\v2\x15.Scailo.StockIssuanceR\x04list\"H\n" +
	"\x17StockIssuancesItemsList\x12-\n" +
	"\x04list\x18\x01 \x03(\v2\x19.Scailo.StockIssuanceItemR\x04list\"|\n" +
	"\x1fStockIssuanceItemHistoryRequest\x123\n" +
	"\x11stock_issuance_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0fstockIssuanceId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\x84\x01\n" +
	"'StockIssuanceItemProspectiveInfoRequest\x123\n" +
	"\x11stock_issuance_id\x18\n" +
	" \x01(\x04B\a\xbaH\x042\x02 \x00R\x0fstockIssuanceId\x12$\n" +
	"\tfamily_id\x18\v \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xbd\x01\n" +
	"9StockIssuancesServiceAlreadyAddedQuantityForSourceRequest\x12:\n" +
	"\bref_from\x18\x01 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x1e\n" +
	"\x06ref_id\x18\x02 \x01(\x04B\a\xbaH\x042\x02 \x00R\x05refId\x12$\n" +
	"\tfamily_id\x18\x03 \x01(\x04B\a\xbaH\x042\x02 \x00R\bfamilyId\"\xc0\x02\n" +
	"\"StockIssuancesServicePaginationReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12\x1d\n" +
	"\x05count\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02 \x00R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12:\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_SORT_KEYR\asortKey\x129\n" +
	"\x06status\x18\x06 \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\"\x9e\x01\n" +
	"'StockIssuancesServicePaginationResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x12/\n" +
	"\apayload\x18\x04 \x03(\v2\x15.Scailo.StockIssuanceR\apayload\"\xfc\b\n" +
	"\x1eStockIssuancesServiceFilterReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12:\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_SORT_KEYR\asortKey\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12:\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vlocation_id\x18\x19 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xc3\a\n" +
	"\x1dStockIssuancesServiceCountReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x128\n" +
	"\x18creation_timestamp_start\x18e \x01(\x04R\x16creationTimestampStart\x124\n" +
	"\x16creation_timestamp_end\x18f \x01(\x04R\x14creationTimestampEnd\x12@\n" +
	"\x1cmodification_timestamp_start\x18g \x01(\x04R\x1amodificationTimestampStart\x12<\n" +
	"\x1amodification_timestamp_end\x18h \x01(\x04R\x18modificationTimestampEnd\x12\x1f\n" +
	"\ventity_uuid\x18\b \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\v \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\f \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\r \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\x0e \x01(\x04R\x0eapproverRoleId\x12,\n" +
	"\x12completed_on_start\x18\x0f \x01(\x04R\x10completedOnStart\x12(\n" +
	"\x10completed_on_end\x18\x10 \x01(\x04R\x0ecompletedOnEnd\x12!\n" +
	"\freference_id\x18\x14 \x01(\tR\vreferenceId\x12(\n" +
	"\x10final_ref_number\x18\x15 \x01(\tR\x0efinalRefNumber\x12:\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\x12\x1f\n" +
	"\vlocation_id\x18\x19 \x01(\x04R\n" +
	"locationId\x12\x1b\n" +
	"\tfamily_id\x18\x1e \x01(\x04R\bfamilyId\x12A\n" +
	"\tform_data\x18\xf4\x03 \x03(\v2#.Scailo.FormFieldDatumFilterRequestR\bformData\"\xdb\x03\n" +
	"!StockIssuancesServiceSearchAllReq\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12:\n" +
	"\bsort_key\x18\x05 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x129\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2!.Scailo.STANDARD_LIFECYCLE_STATUSR\x06status\x12\x1d\n" +
	"\n" +
	"search_key\x18\v \x01(\tR\tsearchKey\x12:\n" +
	"\bref_from\x18\x16 \x01(\x0e2\x1f.Scailo.STOCK_ISSUANCE_REF_FROMR\arefFrom\x12\x15\n" +
	"\x06ref_id\x18\x17 \x01(\x04R\x05refId\"\x9f\x05\n" +
	"\x1fStockIssuanceItemsSearchRequest\x120\n" +
	"\tis_active\x18\x01 \x01(\x0e2\x13.Scailo.BOOL_FILTERR\bisActive\x12&\n" +
	"\x05count\x18\x02 \x01(\x03B\x10\xbaH\r\"\v(\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x05count\x12\x1f\n" +
	"\x06offset\x18\x03 \x01(\x04B\a\xbaH\x042\x02(\x00R\x06offset\x121\n" +
	"\n" +
	"sort_order\x18\x04 \x01(\x0e2\x12.Scailo.SORT_ORDERR\tsortOrder\x12?\n" +
	"\bsort_key\x18\x05 \x01(\x0e2$.Scailo.STOCK_ISSUANCE_ITEM_SORT_KEYR\asortKey\x12\x1f\n" +
	"\ventity_uuid\x18\x06 \x01(\tR\n" +
	"entityUuid\x12:\n" +
	"\x06status\x18\a \x01(\x0e2\".Scailo.STOCK_ISSUANCE_ITEM_STATUSR\x06status\x12*\n" +
	"\x11approved_on_start\x18\n" +
	" \x01(\x04R\x0fapprovedOnStart\x12&\n" +
	"\x0fapproved_on_end\x18\v \x01(\x04R\rapprovedOnEnd\x12-\n" +
	"\x13approved_by_user_id\x18\f \x01(\x04R\x10approvedByUserId\x12(\n" +
	"\x10approver_role_id\x18\r \x01(\x04R\x0eapproverRoleId\x12*\n" +
	"\x11stock_issuance_id\x18\x14 \x01(\x04R\x0fstockIssuanceId\x12\x1b\n" +
	"\tfamily_id\x18\x15 \x01(\x04R\bfamilyId\x12\x1b\n" +
	"\titem_hash\x18\x16 \x01(\tR\bitemHash\x12\x1d\n" +
	"\n" +
	"search_key\x18( \x01(\tR\tsearchKey\"\xa6\x01\n" +
	"+StockIssuancesServicePaginatedItemsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x04R\x05count\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x04R\x06offset\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\x123\n" +
	"\apayload\x18\x04 \x03(\v2\x19.Scailo.StockIssuanceItemR\apayload*\xcf\x01\n" +
	"\x17STOCK_ISSUANCE_REF_FROM\x12+\n" +
	"'STOCK_ISSUANCE_REF_FROM_ANY_UNSPECIFIED\x10\x00\x12-\n" +
	")STOCK_ISSUANCE_REF_FROM_PRODUCTION_INDENT\x10\x01\x12(\n" +
	"$STOCK_ISSUANCE_REF_FROM_ASSET_INDENT\x10\x02\x12.\n" +
	"*STOCK_ISSUANCE_REF_FROM_REPLACEABLE_INDENT\x10\x03*\x98\x03\n" +
	"\x17STOCK_ISSUANCE_SORT_KEY\x12*\n" +
	"&STOCK_ISSUANCE_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12&\n" +
	"\"STOCK_ISSUANCE_SORT_KEY_CREATED_AT\x10\x01\x12'\n" +
	"#STOCK_ISSUANCE_SORT_KEY_MODIFIED_AT\x10\x02\x12'\n" +
	"#STOCK_ISSUANCE_SORT_KEY_APPROVED_ON\x10\x03\x12'\n" +
	"#STOCK_ISSUANCE_SORT_KEY_APPROVED_BY\x10\x04\x12,\n" +
	"(STOCK_ISSUANCE_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12(\n" +
	"$STOCK_ISSUANCE_SORT_KEY_COMPLETED_ON\x10\x06\x12(\n" +
	"$STOCK_ISSUANCE_SORT_KEY_REFERENCE_ID\x10\n" +
	"\x12,\n" +
	"(STOCK_ISSUANCE_SORT_KEY_FINAL_REF_NUMBER\x10\v*\x99\x03\n" +
	"\x1cSTOCK_ISSUANCE_ITEM_SORT_KEY\x12/\n" +
	"+STOCK_ISSUANCE_ITEM_SORT_KEY_ID_UNSPECIFIED\x10\x00\x12+\n" +
	"'STOCK_ISSUANCE_ITEM_SORT_KEY_CREATED_AT\x10\x01\x12,\n" +
	"(STOCK_ISSUANCE_ITEM_SORT_KEY_MODIFIED_AT\x10\x02\x12,\n" +
	"(STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_ON\x10\x03\x12,\n" +
	"(STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVED_BY\x10\x04\x121\n" +
	"-STOCK_ISSUANCE_ITEM_SORT_KEY_APPROVER_ROLE_ID\x10\x05\x12*\n" +
	"&STOCK_ISSUANCE_ITEM_SORT_KEY_FAMILY_ID\x10\n" +
	"\x122\n" +
	".STOCK_ISSUANCE_ITEM_SORT_KEY_INTERNAL_QUANTITY\x10\v*\xa0\x01\n" +
	"\x1aSTOCK_ISSUANCE_ITEM_STATUS\x12.\n" +
	"*STOCK_ISSUANCE_ITEM_STATUS_ANY_UNSPECIFIED\x10\x00\x12'\n" +
	"#STOCK_ISSUANCE_ITEM_STATUS_APPROVED\x10\x01\x12)\n" +
	"%STOCK_ISSUANCE_ITEM_STATUS_UNAPPROVED\x10\x022\xe6$\n" +
	"\x15StockIssuancesService\x12P\n" +
	"\x06Create\x12*.Scailo.StockIssuancesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\x05Draft\x12*.Scailo.StockIssuancesServiceCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12U\n" +
	"\vDraftUpdate\x12*.Scailo.StockIssuancesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x13SendForVerification\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Verify\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aApprove\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x0fSendForRevision\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x0eRevisionUpdate\x12*.Scailo.StockIssuancesServiceUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12I\n" +
	"\x04Halt\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aDiscard\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12L\n" +
	"\aRestore\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12M\n" +
	"\bComplete\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Repeat\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12K\n" +
	"\x06Reopen\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12O\n" +
	"\n" +
	"CommentAdd\x12%.Scailo.IdentifierUUIDWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12N\n" +
	"\tSendEmail\x12%.Scailo.IdentifierWithEmailAttributes\x1a\x1a.Scailo.IdentifierResponse\x12_\n" +
	"\x0fCreateMagicLink\x129.Scailo.MagicLinksServiceCreateRequestForSpecificResource\x1a\x11.Scailo.MagicLink\x12T\n" +
	"\bAutofill\x12,.Scailo.StockIssuancesServiceAutofillRequest\x1a\x1a.Scailo.IdentifierResponse\x12@\n" +
	"\rIsCompletable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12b\n" +
	"\x14AddStockIssuanceItem\x12..Scailo.StockIssuancesServiceItemCreateRequest\x1a\x1a.Scailo.IdentifierResponse\x12e\n" +
	"\x17ModifyStockIssuanceItem\x12..Scailo.StockIssuancesServiceItemUpdateRequest\x1a\x1a.Scailo.IdentifierResponse\x12Y\n" +
	"\x18ApproveStockIssuanceItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12X\n" +
	"\x17DeleteStockIssuanceItem\x12!.Scailo.IdentifierWithUserComment\x1a\x1a.Scailo.IdentifierResponse\x12T\n" +
	"\x19ReorderStockIssuanceItems\x12\x1b.Scailo.ReorderItemsRequest\x1a\x1a.Scailo.IdentifierResponse\x12J\n" +
	"\x19ViewStockIssuanceItemByID\x12\x12.Scailo.Identifier\x1a\x19.Scailo.StockIssuanceItem\x12Z\n" +
	"$ViewStockIssuanceItemByInventoryHash\x12\x17.Scailo.SimpleSearchReq\x1a\x19.Scailo.StockIssuanceItem\x12b\n" +
	"\x1eViewApprovedStockIssuanceItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1f.Scailo.StockIssuancesItemsList\x12d\n" +
	" ViewUnapprovedStockIssuanceItems\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x1f.Scailo.StockIssuancesItemsList\x12h\n" +
	"\x1cViewStockIssuanceItemHistory\x12'.Scailo.StockIssuanceItemHistoryRequest\x1a\x1f.Scailo.StockIssuancesItemsList\x12\x87\x01\n" +
	"'ViewPaginatedApprovedStockIssuanceItems\x12'.Scailo.StockIssuanceItemsSearchRequest\x1a3.Scailo.StockIssuancesServicePaginatedItemsResponse\x12\x89\x01\n" +
	")ViewPaginatedUnapprovedStockIssuanceItems\x12'.Scailo.StockIssuanceItemsSearchRequest\x1a3.Scailo.StockIssuancesServicePaginatedItemsResponse\x12y\n" +
	"\x19SearchItemsWithPagination\x12'.Scailo.StockIssuanceItemsSearchRequest\x1a3.Scailo.StockIssuancesServicePaginatedItemsResponse\x12B\n" +
	"\x12DownloadItemsAsCSV\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x1aDownloadItemsTemplateAsCSV\x12\r.Scailo.Empty\x1a\x14.Scailo.StandardFile\x125\n" +
	"\bViewByID\x12\x12.Scailo.Identifier\x1a\x15.Scailo.StockIssuance\x12;\n" +
	"\n" +
	"ViewByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.StockIssuance\x12C\n" +
	"\x11ViewByReferenceID\x12\x17.Scailo.SimpleSearchReq\x1a\x15.Scailo.StockIssuance\x12>\n" +
	"\x11ViewEssentialByID\x12\x12.Scailo.Identifier\x1a\x15.Scailo.StockIssuance\x12D\n" +
	"\x13ViewEssentialByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x15.Scailo.StockIssuance\x12B\n" +
	"\vViewFromIDs\x12\x17.Scailo.IdentifiersList\x1a\x1a.Scailo.StockIssuancesList\x12;\n" +
	"\aViewAll\x12\x14.Scailo.ActiveStatus\x1a\x1a.Scailo.StockIssuancesList\x12J\n" +
	"\x14ViewAllForEntityUUID\x12\x16.Scailo.IdentifierUUID\x1a\x1a.Scailo.StockIssuancesList\x12q\n" +
	"\x12ViewWithPagination\x12*.Scailo.StockIssuancesServicePaginationReq\x1a/.Scailo.StockIssuancesServicePaginationResponse\x12P\n" +
	"\x17ViewProspectiveFamilies\x12\x1f.Scailo.IdentifierWithSearchKey\x1a\x14.Scailo.FamiliesList\x12Y\n" +
	"\x19FilterProspectiveFamilies\x12&.Scailo.FilterFamiliesReqForIdentifier\x1a\x14.Scailo.FamiliesList\x12\x83\x01\n" +
	" ViewProspectiveStockIssuanceItem\x12/.Scailo.StockIssuanceItemProspectiveInfoRequest\x1a..Scailo.StockIssuancesServiceItemCreateRequest\x12\x7f\n" +
	" ViewAddedFamilyQuantityForSource\x12A.Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest\x1a\x18.Scailo.QuantityResponse\x12C\n" +
	"\x13DownloadLabelByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12A\n" +
	"\x0eIsDownloadable\x12\x16.Scailo.IdentifierUUID\x1a\x17.Scailo.BooleanResponse\x12>\n" +
	"\x0eDownloadByUUID\x12\x16.Scailo.IdentifierUUID\x1a\x14.Scailo.StandardFile\x12R\n" +
	"\tSearchAll\x12).Scailo.StockIssuancesServiceSearchAllReq\x1a\x1a.Scailo.StockIssuancesList\x12L\n" +
	"\x06Filter\x12&.Scailo.StockIssuancesServiceFilterReq\x1a\x1a.Scailo.StockIssuancesList\x12G\n" +
	"\rCountInStatus\x12\x1f.Scailo.CountInSLCStatusRequest\x1a\x15.Scailo.CountResponse\x12E\n" +
	"\x05Count\x12%.Scailo.StockIssuancesServiceCountReq\x1a\x15.Scailo.CountResponse\x12M\n" +
	"\rDownloadAsCSV\x12&.Scailo.StockIssuancesServiceFilterReq\x1a\x14.Scailo.StandardFileBk\n" +
	"\n" +
	"com.ScailoB\x19StockIssuancesScailoProtoP\x01Z\n" +
	"Scailo/sdk\xa2\x02\x03SXX\xaa\x02\x06Scailo\xca\x02\x06Scailo\xe2\x02\x12Scailo\\GPBMetadata\xea\x02\x06Scailob\x06proto3"

var (
	file_stock_issuances_scailo_proto_rawDescOnce sync.Once
	file_stock_issuances_scailo_proto_rawDescData []byte
)

func file_stock_issuances_scailo_proto_rawDescGZIP() []byte {
	file_stock_issuances_scailo_proto_rawDescOnce.Do(func() {
		file_stock_issuances_scailo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stock_issuances_scailo_proto_rawDesc), len(file_stock_issuances_scailo_proto_rawDesc)))
	})
	return file_stock_issuances_scailo_proto_rawDescData
}

var file_stock_issuances_scailo_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_stock_issuances_scailo_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_stock_issuances_scailo_proto_goTypes = []any{
	(STOCK_ISSUANCE_REF_FROM)(0),                                      // 0: Scailo.STOCK_ISSUANCE_REF_FROM
	(STOCK_ISSUANCE_SORT_KEY)(0),                                      // 1: Scailo.STOCK_ISSUANCE_SORT_KEY
	(STOCK_ISSUANCE_ITEM_SORT_KEY)(0),                                 // 2: Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY
	(STOCK_ISSUANCE_ITEM_STATUS)(0),                                   // 3: Scailo.STOCK_ISSUANCE_ITEM_STATUS
	(*StockIssuancesServiceCreateRequest)(nil),                        // 4: Scailo.StockIssuancesServiceCreateRequest
	(*StockIssuancesServiceUpdateRequest)(nil),                        // 5: Scailo.StockIssuancesServiceUpdateRequest
	(*StockIssuancesServiceAutofillRequest)(nil),                      // 6: Scailo.StockIssuancesServiceAutofillRequest
	(*StockIssuance)(nil),                                             // 7: Scailo.StockIssuance
	(*StockIssuancesServiceItemCreateRequest)(nil),                    // 8: Scailo.StockIssuancesServiceItemCreateRequest
	(*StockIssuancesServiceItemUpdateRequest)(nil),                    // 9: Scailo.StockIssuancesServiceItemUpdateRequest
	(*StockIssuanceItem)(nil),                                         // 10: Scailo.StockIssuanceItem
	(*StockIssuancesList)(nil),                                        // 11: Scailo.StockIssuancesList
	(*StockIssuancesItemsList)(nil),                                   // 12: Scailo.StockIssuancesItemsList
	(*StockIssuanceItemHistoryRequest)(nil),                           // 13: Scailo.StockIssuanceItemHistoryRequest
	(*StockIssuanceItemProspectiveInfoRequest)(nil),                   // 14: Scailo.StockIssuanceItemProspectiveInfoRequest
	(*StockIssuancesServiceAlreadyAddedQuantityForSourceRequest)(nil), // 15: Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest
	(*StockIssuancesServicePaginationReq)(nil),                        // 16: Scailo.StockIssuancesServicePaginationReq
	(*StockIssuancesServicePaginationResponse)(nil),                   // 17: Scailo.StockIssuancesServicePaginationResponse
	(*StockIssuancesServiceFilterReq)(nil),                            // 18: Scailo.StockIssuancesServiceFilterReq
	(*StockIssuancesServiceCountReq)(nil),                             // 19: Scailo.StockIssuancesServiceCountReq
	(*StockIssuancesServiceSearchAllReq)(nil),                         // 20: Scailo.StockIssuancesServiceSearchAllReq
	(*StockIssuanceItemsSearchRequest)(nil),                           // 21: Scailo.StockIssuanceItemsSearchRequest
	(*StockIssuancesServicePaginatedItemsResponse)(nil),               // 22: Scailo.StockIssuancesServicePaginatedItemsResponse
	(*FormFieldDatumCreateRequest)(nil),                               // 23: Scailo.FormFieldDatumCreateRequest
	(*EmployeeMetadata)(nil),                                          // 24: Scailo.EmployeeMetadata
	(*ApprovalMetadata)(nil),                                          // 25: Scailo.ApprovalMetadata
	(STANDARD_LIFECYCLE_STATUS)(0),                                    // 26: Scailo.STANDARD_LIFECYCLE_STATUS
	(*LogbookLogConciseSLC)(nil),                                      // 27: Scailo.LogbookLogConciseSLC
	(*FormFieldDatum)(nil),                                            // 28: Scailo.FormFieldDatum
	(BOOL_FILTER)(0),                                                  // 29: Scailo.BOOL_FILTER
	(SORT_ORDER)(0),                                                   // 30: Scailo.SORT_ORDER
	(*FormFieldDatumFilterRequest)(nil),                               // 31: Scailo.FormFieldDatumFilterRequest
	(*IdentifierUUIDWithUserComment)(nil),                             // 32: Scailo.IdentifierUUIDWithUserComment
	(*IdentifierWithEmailAttributes)(nil),                             // 33: Scailo.IdentifierWithEmailAttributes
	(*MagicLinksServiceCreateRequestForSpecificResource)(nil),         // 34: Scailo.MagicLinksServiceCreateRequestForSpecificResource
	(*IdentifierUUID)(nil),                                            // 35: Scailo.IdentifierUUID
	(*IdentifierWithUserComment)(nil),                                 // 36: Scailo.IdentifierWithUserComment
	(*ReorderItemsRequest)(nil),                                       // 37: Scailo.ReorderItemsRequest
	(*Identifier)(nil),                                                // 38: Scailo.Identifier
	(*SimpleSearchReq)(nil),                                           // 39: Scailo.SimpleSearchReq
	(*IdentifierWithSearchKey)(nil),                                   // 40: Scailo.IdentifierWithSearchKey
	(*Empty)(nil),                                                     // 41: Scailo.Empty
	(*IdentifiersList)(nil),                                           // 42: Scailo.IdentifiersList
	(*ActiveStatus)(nil),                                              // 43: Scailo.ActiveStatus
	(*FilterFamiliesReqForIdentifier)(nil),                            // 44: Scailo.FilterFamiliesReqForIdentifier
	(*CountInSLCStatusRequest)(nil),                                   // 45: Scailo.CountInSLCStatusRequest
	(*IdentifierResponse)(nil),                                        // 46: Scailo.IdentifierResponse
	(*MagicLink)(nil),                                                 // 47: Scailo.MagicLink
	(*BooleanResponse)(nil),                                           // 48: Scailo.BooleanResponse
	(*StandardFile)(nil),                                              // 49: Scailo.StandardFile
	(*FamiliesList)(nil),                                              // 50: Scailo.FamiliesList
	(*QuantityResponse)(nil),                                          // 51: Scailo.QuantityResponse
	(*CountResponse)(nil),                                             // 52: Scailo.CountResponse
}
var file_stock_issuances_scailo_proto_depIdxs = []int32{
	0,  // 0: Scailo.StockIssuancesServiceCreateRequest.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	23, // 1: Scailo.StockIssuancesServiceCreateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	23, // 2: Scailo.StockIssuancesServiceUpdateRequest.form_data:type_name -> Scailo.FormFieldDatumCreateRequest
	24, // 3: Scailo.StockIssuance.metadata:type_name -> Scailo.EmployeeMetadata
	25, // 4: Scailo.StockIssuance.approval_metadata:type_name -> Scailo.ApprovalMetadata
	26, // 5: Scailo.StockIssuance.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	27, // 6: Scailo.StockIssuance.logs:type_name -> Scailo.LogbookLogConciseSLC
	0,  // 7: Scailo.StockIssuance.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	10, // 8: Scailo.StockIssuance.list:type_name -> Scailo.StockIssuanceItem
	28, // 9: Scailo.StockIssuance.form_data:type_name -> Scailo.FormFieldDatum
	24, // 10: Scailo.StockIssuanceItem.metadata:type_name -> Scailo.EmployeeMetadata
	25, // 11: Scailo.StockIssuanceItem.approval_metadata:type_name -> Scailo.ApprovalMetadata
	7,  // 12: Scailo.StockIssuancesList.list:type_name -> Scailo.StockIssuance
	10, // 13: Scailo.StockIssuancesItemsList.list:type_name -> Scailo.StockIssuanceItem
	0,  // 14: Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	29, // 15: Scailo.StockIssuancesServicePaginationReq.is_active:type_name -> Scailo.BOOL_FILTER
	30, // 16: Scailo.StockIssuancesServicePaginationReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 17: Scailo.StockIssuancesServicePaginationReq.sort_key:type_name -> Scailo.STOCK_ISSUANCE_SORT_KEY
	26, // 18: Scailo.StockIssuancesServicePaginationReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	7,  // 19: Scailo.StockIssuancesServicePaginationResponse.payload:type_name -> Scailo.StockIssuance
	29, // 20: Scailo.StockIssuancesServiceFilterReq.is_active:type_name -> Scailo.BOOL_FILTER
	30, // 21: Scailo.StockIssuancesServiceFilterReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 22: Scailo.StockIssuancesServiceFilterReq.sort_key:type_name -> Scailo.STOCK_ISSUANCE_SORT_KEY
	26, // 23: Scailo.StockIssuancesServiceFilterReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,  // 24: Scailo.StockIssuancesServiceFilterReq.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	31, // 25: Scailo.StockIssuancesServiceFilterReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	29, // 26: Scailo.StockIssuancesServiceCountReq.is_active:type_name -> Scailo.BOOL_FILTER
	26, // 27: Scailo.StockIssuancesServiceCountReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,  // 28: Scailo.StockIssuancesServiceCountReq.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	31, // 29: Scailo.StockIssuancesServiceCountReq.form_data:type_name -> Scailo.FormFieldDatumFilterRequest
	29, // 30: Scailo.StockIssuancesServiceSearchAllReq.is_active:type_name -> Scailo.BOOL_FILTER
	30, // 31: Scailo.StockIssuancesServiceSearchAllReq.sort_order:type_name -> Scailo.SORT_ORDER
	1,  // 32: Scailo.StockIssuancesServiceSearchAllReq.sort_key:type_name -> Scailo.STOCK_ISSUANCE_SORT_KEY
	26, // 33: Scailo.StockIssuancesServiceSearchAllReq.status:type_name -> Scailo.STANDARD_LIFECYCLE_STATUS
	0,  // 34: Scailo.StockIssuancesServiceSearchAllReq.ref_from:type_name -> Scailo.STOCK_ISSUANCE_REF_FROM
	29, // 35: Scailo.StockIssuanceItemsSearchRequest.is_active:type_name -> Scailo.BOOL_FILTER
	30, // 36: Scailo.StockIssuanceItemsSearchRequest.sort_order:type_name -> Scailo.SORT_ORDER
	2,  // 37: Scailo.StockIssuanceItemsSearchRequest.sort_key:type_name -> Scailo.STOCK_ISSUANCE_ITEM_SORT_KEY
	3,  // 38: Scailo.StockIssuanceItemsSearchRequest.status:type_name -> Scailo.STOCK_ISSUANCE_ITEM_STATUS
	10, // 39: Scailo.StockIssuancesServicePaginatedItemsResponse.payload:type_name -> Scailo.StockIssuanceItem
	4,  // 40: Scailo.StockIssuancesService.Create:input_type -> Scailo.StockIssuancesServiceCreateRequest
	4,  // 41: Scailo.StockIssuancesService.Draft:input_type -> Scailo.StockIssuancesServiceCreateRequest
	5,  // 42: Scailo.StockIssuancesService.DraftUpdate:input_type -> Scailo.StockIssuancesServiceUpdateRequest
	32, // 43: Scailo.StockIssuancesService.SendForVerification:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 44: Scailo.StockIssuancesService.Verify:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 45: Scailo.StockIssuancesService.Approve:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 46: Scailo.StockIssuancesService.SendForRevision:input_type -> Scailo.IdentifierUUIDWithUserComment
	5,  // 47: Scailo.StockIssuancesService.RevisionUpdate:input_type -> Scailo.StockIssuancesServiceUpdateRequest
	32, // 48: Scailo.StockIssuancesService.Halt:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 49: Scailo.StockIssuancesService.Discard:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 50: Scailo.StockIssuancesService.Restore:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 51: Scailo.StockIssuancesService.Complete:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 52: Scailo.StockIssuancesService.Repeat:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 53: Scailo.StockIssuancesService.Reopen:input_type -> Scailo.IdentifierUUIDWithUserComment
	32, // 54: Scailo.StockIssuancesService.CommentAdd:input_type -> Scailo.IdentifierUUIDWithUserComment
	33, // 55: Scailo.StockIssuancesService.SendEmail:input_type -> Scailo.IdentifierWithEmailAttributes
	34, // 56: Scailo.StockIssuancesService.CreateMagicLink:input_type -> Scailo.MagicLinksServiceCreateRequestForSpecificResource
	6,  // 57: Scailo.StockIssuancesService.Autofill:input_type -> Scailo.StockIssuancesServiceAutofillRequest
	35, // 58: Scailo.StockIssuancesService.IsCompletable:input_type -> Scailo.IdentifierUUID
	8,  // 59: Scailo.StockIssuancesService.AddStockIssuanceItem:input_type -> Scailo.StockIssuancesServiceItemCreateRequest
	9,  // 60: Scailo.StockIssuancesService.ModifyStockIssuanceItem:input_type -> Scailo.StockIssuancesServiceItemUpdateRequest
	36, // 61: Scailo.StockIssuancesService.ApproveStockIssuanceItem:input_type -> Scailo.IdentifierWithUserComment
	36, // 62: Scailo.StockIssuancesService.DeleteStockIssuanceItem:input_type -> Scailo.IdentifierWithUserComment
	37, // 63: Scailo.StockIssuancesService.ReorderStockIssuanceItems:input_type -> Scailo.ReorderItemsRequest
	38, // 64: Scailo.StockIssuancesService.ViewStockIssuanceItemByID:input_type -> Scailo.Identifier
	39, // 65: Scailo.StockIssuancesService.ViewStockIssuanceItemByInventoryHash:input_type -> Scailo.SimpleSearchReq
	40, // 66: Scailo.StockIssuancesService.ViewApprovedStockIssuanceItems:input_type -> Scailo.IdentifierWithSearchKey
	40, // 67: Scailo.StockIssuancesService.ViewUnapprovedStockIssuanceItems:input_type -> Scailo.IdentifierWithSearchKey
	13, // 68: Scailo.StockIssuancesService.ViewStockIssuanceItemHistory:input_type -> Scailo.StockIssuanceItemHistoryRequest
	21, // 69: Scailo.StockIssuancesService.ViewPaginatedApprovedStockIssuanceItems:input_type -> Scailo.StockIssuanceItemsSearchRequest
	21, // 70: Scailo.StockIssuancesService.ViewPaginatedUnapprovedStockIssuanceItems:input_type -> Scailo.StockIssuanceItemsSearchRequest
	21, // 71: Scailo.StockIssuancesService.SearchItemsWithPagination:input_type -> Scailo.StockIssuanceItemsSearchRequest
	35, // 72: Scailo.StockIssuancesService.DownloadItemsAsCSV:input_type -> Scailo.IdentifierUUID
	41, // 73: Scailo.StockIssuancesService.DownloadItemsTemplateAsCSV:input_type -> Scailo.Empty
	38, // 74: Scailo.StockIssuancesService.ViewByID:input_type -> Scailo.Identifier
	35, // 75: Scailo.StockIssuancesService.ViewByUUID:input_type -> Scailo.IdentifierUUID
	39, // 76: Scailo.StockIssuancesService.ViewByReferenceID:input_type -> Scailo.SimpleSearchReq
	38, // 77: Scailo.StockIssuancesService.ViewEssentialByID:input_type -> Scailo.Identifier
	35, // 78: Scailo.StockIssuancesService.ViewEssentialByUUID:input_type -> Scailo.IdentifierUUID
	42, // 79: Scailo.StockIssuancesService.ViewFromIDs:input_type -> Scailo.IdentifiersList
	43, // 80: Scailo.StockIssuancesService.ViewAll:input_type -> Scailo.ActiveStatus
	35, // 81: Scailo.StockIssuancesService.ViewAllForEntityUUID:input_type -> Scailo.IdentifierUUID
	16, // 82: Scailo.StockIssuancesService.ViewWithPagination:input_type -> Scailo.StockIssuancesServicePaginationReq
	40, // 83: Scailo.StockIssuancesService.ViewProspectiveFamilies:input_type -> Scailo.IdentifierWithSearchKey
	44, // 84: Scailo.StockIssuancesService.FilterProspectiveFamilies:input_type -> Scailo.FilterFamiliesReqForIdentifier
	14, // 85: Scailo.StockIssuancesService.ViewProspectiveStockIssuanceItem:input_type -> Scailo.StockIssuanceItemProspectiveInfoRequest
	15, // 86: Scailo.StockIssuancesService.ViewAddedFamilyQuantityForSource:input_type -> Scailo.StockIssuancesServiceAlreadyAddedQuantityForSourceRequest
	35, // 87: Scailo.StockIssuancesService.DownloadLabelByUUID:input_type -> Scailo.IdentifierUUID
	35, // 88: Scailo.StockIssuancesService.IsDownloadable:input_type -> Scailo.IdentifierUUID
	35, // 89: Scailo.StockIssuancesService.DownloadByUUID:input_type -> Scailo.IdentifierUUID
	20, // 90: Scailo.StockIssuancesService.SearchAll:input_type -> Scailo.StockIssuancesServiceSearchAllReq
	18, // 91: Scailo.StockIssuancesService.Filter:input_type -> Scailo.StockIssuancesServiceFilterReq
	45, // 92: Scailo.StockIssuancesService.CountInStatus:input_type -> Scailo.CountInSLCStatusRequest
	19, // 93: Scailo.StockIssuancesService.Count:input_type -> Scailo.StockIssuancesServiceCountReq
	18, // 94: Scailo.StockIssuancesService.DownloadAsCSV:input_type -> Scailo.StockIssuancesServiceFilterReq
	46, // 95: Scailo.StockIssuancesService.Create:output_type -> Scailo.IdentifierResponse
	46, // 96: Scailo.StockIssuancesService.Draft:output_type -> Scailo.IdentifierResponse
	46, // 97: Scailo.StockIssuancesService.DraftUpdate:output_type -> Scailo.IdentifierResponse
	46, // 98: Scailo.StockIssuancesService.SendForVerification:output_type -> Scailo.IdentifierResponse
	46, // 99: Scailo.StockIssuancesService.Verify:output_type -> Scailo.IdentifierResponse
	46, // 100: Scailo.StockIssuancesService.Approve:output_type -> Scailo.IdentifierResponse
	46, // 101: Scailo.StockIssuancesService.SendForRevision:output_type -> Scailo.IdentifierResponse
	46, // 102: Scailo.StockIssuancesService.RevisionUpdate:output_type -> Scailo.IdentifierResponse
	46, // 103: Scailo.StockIssuancesService.Halt:output_type -> Scailo.IdentifierResponse
	46, // 104: Scailo.StockIssuancesService.Discard:output_type -> Scailo.IdentifierResponse
	46, // 105: Scailo.StockIssuancesService.Restore:output_type -> Scailo.IdentifierResponse
	46, // 106: Scailo.StockIssuancesService.Complete:output_type -> Scailo.IdentifierResponse
	46, // 107: Scailo.StockIssuancesService.Repeat:output_type -> Scailo.IdentifierResponse
	46, // 108: Scailo.StockIssuancesService.Reopen:output_type -> Scailo.IdentifierResponse
	46, // 109: Scailo.StockIssuancesService.CommentAdd:output_type -> Scailo.IdentifierResponse
	46, // 110: Scailo.StockIssuancesService.SendEmail:output_type -> Scailo.IdentifierResponse
	47, // 111: Scailo.StockIssuancesService.CreateMagicLink:output_type -> Scailo.MagicLink
	46, // 112: Scailo.StockIssuancesService.Autofill:output_type -> Scailo.IdentifierResponse
	48, // 113: Scailo.StockIssuancesService.IsCompletable:output_type -> Scailo.BooleanResponse
	46, // 114: Scailo.StockIssuancesService.AddStockIssuanceItem:output_type -> Scailo.IdentifierResponse
	46, // 115: Scailo.StockIssuancesService.ModifyStockIssuanceItem:output_type -> Scailo.IdentifierResponse
	46, // 116: Scailo.StockIssuancesService.ApproveStockIssuanceItem:output_type -> Scailo.IdentifierResponse
	46, // 117: Scailo.StockIssuancesService.DeleteStockIssuanceItem:output_type -> Scailo.IdentifierResponse
	46, // 118: Scailo.StockIssuancesService.ReorderStockIssuanceItems:output_type -> Scailo.IdentifierResponse
	10, // 119: Scailo.StockIssuancesService.ViewStockIssuanceItemByID:output_type -> Scailo.StockIssuanceItem
	10, // 120: Scailo.StockIssuancesService.ViewStockIssuanceItemByInventoryHash:output_type -> Scailo.StockIssuanceItem
	12, // 121: Scailo.StockIssuancesService.ViewApprovedStockIssuanceItems:output_type -> Scailo.StockIssuancesItemsList
	12, // 122: Scailo.StockIssuancesService.ViewUnapprovedStockIssuanceItems:output_type -> Scailo.StockIssuancesItemsList
	12, // 123: Scailo.StockIssuancesService.ViewStockIssuanceItemHistory:output_type -> Scailo.StockIssuancesItemsList
	22, // 124: Scailo.StockIssuancesService.ViewPaginatedApprovedStockIssuanceItems:output_type -> Scailo.StockIssuancesServicePaginatedItemsResponse
	22, // 125: Scailo.StockIssuancesService.ViewPaginatedUnapprovedStockIssuanceItems:output_type -> Scailo.StockIssuancesServicePaginatedItemsResponse
	22, // 126: Scailo.StockIssuancesService.SearchItemsWithPagination:output_type -> Scailo.StockIssuancesServicePaginatedItemsResponse
	49, // 127: Scailo.StockIssuancesService.DownloadItemsAsCSV:output_type -> Scailo.StandardFile
	49, // 128: Scailo.StockIssuancesService.DownloadItemsTemplateAsCSV:output_type -> Scailo.StandardFile
	7,  // 129: Scailo.StockIssuancesService.ViewByID:output_type -> Scailo.StockIssuance
	7,  // 130: Scailo.StockIssuancesService.ViewByUUID:output_type -> Scailo.StockIssuance
	7,  // 131: Scailo.StockIssuancesService.ViewByReferenceID:output_type -> Scailo.StockIssuance
	7,  // 132: Scailo.StockIssuancesService.ViewEssentialByID:output_type -> Scailo.StockIssuance
	7,  // 133: Scailo.StockIssuancesService.ViewEssentialByUUID:output_type -> Scailo.StockIssuance
	11, // 134: Scailo.StockIssuancesService.ViewFromIDs:output_type -> Scailo.StockIssuancesList
	11, // 135: Scailo.StockIssuancesService.ViewAll:output_type -> Scailo.StockIssuancesList
	11, // 136: Scailo.StockIssuancesService.ViewAllForEntityUUID:output_type -> Scailo.StockIssuancesList
	17, // 137: Scailo.StockIssuancesService.ViewWithPagination:output_type -> Scailo.StockIssuancesServicePaginationResponse
	50, // 138: Scailo.StockIssuancesService.ViewProspectiveFamilies:output_type -> Scailo.FamiliesList
	50, // 139: Scailo.StockIssuancesService.FilterProspectiveFamilies:output_type -> Scailo.FamiliesList
	8,  // 140: Scailo.StockIssuancesService.ViewProspectiveStockIssuanceItem:output_type -> Scailo.StockIssuancesServiceItemCreateRequest
	51, // 141: Scailo.StockIssuancesService.ViewAddedFamilyQuantityForSource:output_type -> Scailo.QuantityResponse
	49, // 142: Scailo.StockIssuancesService.DownloadLabelByUUID:output_type -> Scailo.StandardFile
	48, // 143: Scailo.StockIssuancesService.IsDownloadable:output_type -> Scailo.BooleanResponse
	49, // 144: Scailo.StockIssuancesService.DownloadByUUID:output_type -> Scailo.StandardFile
	11, // 145: Scailo.StockIssuancesService.SearchAll:output_type -> Scailo.StockIssuancesList
	11, // 146: Scailo.StockIssuancesService.Filter:output_type -> Scailo.StockIssuancesList
	52, // 147: Scailo.StockIssuancesService.CountInStatus:output_type -> Scailo.CountResponse
	52, // 148: Scailo.StockIssuancesService.Count:output_type -> Scailo.CountResponse
	49, // 149: Scailo.StockIssuancesService.DownloadAsCSV:output_type -> Scailo.StandardFile
	95, // [95:150] is the sub-list for method output_type
	40, // [40:95] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_stock_issuances_scailo_proto_init() }
func file_stock_issuances_scailo_proto_init() {
	if File_stock_issuances_scailo_proto != nil {
		return
	}
	file_base_scailo_proto_init()
	file_families_scailo_proto_init()
	file_forms_fields_data_scailo_proto_init()
	file_magic_links_scailo_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stock_issuances_scailo_proto_rawDesc), len(file_stock_issuances_scailo_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_issuances_scailo_proto_goTypes,
		DependencyIndexes: file_stock_issuances_scailo_proto_depIdxs,
		EnumInfos:         file_stock_issuances_scailo_proto_enumTypes,
		MessageInfos:      file_stock_issuances_scailo_proto_msgTypes,
	}.Build()
	File_stock_issuances_scailo_proto = out.File
	file_stock_issuances_scailo_proto_goTypes = nil
	file_stock_issuances_scailo_proto_depIdxs = nil
}
